 Processing command: b problem08.c:15
 HandleCommand, cmd_obj : '_regexp-break'
 HandleCommand, (revised) command_string: '_regexp-break problem08.c:15'
 HandleCommand, wants_raw_input:'True'
 HandleCommand, command line after removing command name(s): 'problem08.c:15'
 Processing command: breakpoint set --file 'problem08.c' --line 15
 HandleCommand, cmd_obj : 'breakpoint set'
 HandleCommand, (revised) command_string: 'breakpoint set --file 'problem08.c' --line 15'
 HandleCommand, wants_raw_input:'False'
 HandleCommand, command line after removing command name(s): '--file 'problem08.c' --line 15'
 0x1217307b8 Broadcaster("lldb.target")::BroadcastEvent (event_sp = {0x103c04768 Event: broadcaster = 0x12202d200 (lldb.target), type = 0x00000001 (breakpoint-changed), data = {bkpt: 1 type: breakpoint added}}, unique =0) hijack = 0x0
 Target::AddBreakpoint (internal = no) => break_id = 1: file = 'problem08.c', line = 15, exact_match = 0


 Added location (skipped prologue: yes): 1.1: 
  module = /Users/shafinazahsan/github-classroom/FPC-advanced/fpc-advanced-classroom-1st-year-assignment-ShafinazAhsan/set01/problem08
  compile unit = problem08.c
  function = sum_n_array
  location = /Users/shafinazahsan/github-classroom/FPC-advanced/fpc-advanced-classroom-1st-year-assignment-ShafinazAhsan/set01/problem08.c:16:9
  address = problem08[0x0000000100003d34]
  resolved = false
  hardware = false
  hit count = 0   
 

 HandleCommand, command succeeded
 HandleCommand, command succeeded
 Processing command: b problem08.c:22
 HandleCommand, cmd_obj : '_regexp-break'
 HandleCommand, (revised) command_string: '_regexp-break problem08.c:22'
 HandleCommand, wants_raw_input:'True'
 HandleCommand, command line after removing command name(s): 'problem08.c:22'
 Processing command: breakpoint set --file 'problem08.c' --line 22
 HandleCommand, cmd_obj : 'breakpoint set'
 HandleCommand, (revised) command_string: 'breakpoint set --file 'problem08.c' --line 22'
 HandleCommand, wants_raw_input:'False'
 HandleCommand, command line after removing command name(s): '--file 'problem08.c' --line 22'
 0x1217307b8 Broadcaster("lldb.target")::BroadcastEvent (event_sp = {0x101f04cb8 Event: broadcaster = 0x12202d200 (lldb.target), type = 0x00000001 (breakpoint-changed), data = {bkpt: 2 type: breakpoint added}}, unique =0) hijack = 0x0
 Target::AddBreakpoint (internal = no) => break_id = 2: file = 'problem08.c', line = 22, exact_match = 0


 Added location (skipped prologue: yes): 2.1: 
  module = /Users/shafinazahsan/github-classroom/FPC-advanced/fpc-advanced-classroom-1st-year-assignment-ShafinazAhsan/set01/problem08
  compile unit = problem08.c
  function = output
  location = /Users/shafinazahsan/github-classroom/FPC-advanced/fpc-advanced-classroom-1st-year-assignment-ShafinazAhsan/set01/problem08.c:23:5
  address = problem08[0x0000000100003db0]
  resolved = false
  hardware = false
  hit count = 0   
 

 HandleCommand, command succeeded
 HandleCommand, command succeeded
 Processing command: b main
 HandleCommand, cmd_obj : '_regexp-break'
 HandleCommand, (revised) command_string: '_regexp-break main'
 HandleCommand, wants_raw_input:'True'
 HandleCommand, command line after removing command name(s): 'main'
 Processing command: breakpoint set --name 'main'
 HandleCommand, cmd_obj : 'breakpoint set'
 HandleCommand, (revised) command_string: 'breakpoint set --name 'main''
 HandleCommand, wants_raw_input:'False'
 HandleCommand, command line after removing command name(s): '--name 'main''
 0x1217307b8 Broadcaster("lldb.target")::BroadcastEvent (event_sp = {0x103c11148 Event: broadcaster = 0x12202d200 (lldb.target), type = 0x00000001 (breakpoint-changed), data = {bkpt: 3 type: breakpoint added}}, unique =0) hijack = 0x0
 Target::AddBreakpoint (internal = no) => break_id = 3: name = 'main'


 Added location: 3.1: 
  module = /Users/shafinazahsan/github-classroom/FPC-advanced/fpc-advanced-classroom-1st-year-assignment-ShafinazAhsan/set01/problem08
  compile unit = problem08.c
  function = main
  location = /Users/shafinazahsan/github-classroom/FPC-advanced/fpc-advanced-classroom-1st-year-assignment-ShafinazAhsan/set01/problem08.c:31:7
  address = problem08[0x0000000100003e70]
  resolved = false
  hardware = false
  hit count = 0   


 HandleCommand, command succeeded
 HandleCommand, command succeeded
 Processing command: br l
 HandleCommand, cmd_obj : 'breakpoint list'
 HandleCommand, (revised) command_string: 'breakpoint list'
 HandleCommand, wants_raw_input:'False'
 HandleCommand, command line after removing command name(s): ''
 HandleCommand, command succeeded
 Processing command: r
 HandleCommand, cmd_obj : 'process launch'
 HandleCommand, (revised) command_string: 'process launch -X true --'
 HandleCommand, wants_raw_input:'False'
 Repeat command: 
 HandleCommand, command line after removing command name(s): '-X true --'
 Target::Launch() called for /Users/shafinazahsan/github-classroom/FPC-advanced/fpc-advanced-classroom-1st-year-assignment-ShafinazAhsan/set01/problem08
 Target::Launch the process instance doesn't currently exist.
 have platform=true, platform_sp->IsHost()=true, default_to_use_pty=true
 at least one of stdin/stdout/stderr was not set, evaluating default handling
 target stdin='(empty)', target stdout='(empty)', stderr='(empty)'
 Generating a pty to use for stdin/out/err
 Target::Launch asking the platform to debug the process
 Host::StartMonitoringChildProcess(callback, pid=1999) source = 0x103d08b00

 ::waitpid (pid = 1999, &status, 0) => pid = 1999, status = 0x00000000 (EXITED), signal = 0, exit_status = 0
 Host::StartMonitoringChildProcess(callback, pid=2000) source = 0x1216ff6d0

 (plugin = gdb-remote, state = attaching, restarted = 0)
 Host::StartMonitoringChildProcess(callback, pid=2001) source = 0x101709b00

 thread created
 Process::AttachCompletionHandler::AttachCompletionHandler process=0x102998a00, exec_count=0
 Process::ControlPrivateStateThread (signal = 4)
 thread created
 Process::RunPrivateStateThread (arg = 0x102998a00, pid = 2000) thread starting...
 timeout = <infinite>, event_sp)...
 Sending control event of type: 4.
 Process::RunPrivateStateThread (arg = 0x102998a00, pid = 2000) got a control event: 4
 timeout = <infinite>, event_sp)...
 thread created
 timeout = <infinite>
 timeout = <infinite>, event_sp)...
 (plugin = gdb-remote, state = stopped)
 (plugin = gdb-remote, state = stopped, stop_id = 1
 Process::AttachCompletionHandler::PerformAction called with state stopped (5)
 Discarding thread plans for thread (tid = 0x53b2, force 1)
 Thread::PushPlan(0x0x1217fae98): "Base thread plan.", tid = 0x53b2.
 Process::AttachCompletionHandler::PerformAction state stopped: no more execs expected to start, continuing with attach
 Process::CompleteAttach()
 Setting Process code address mask to 0xffff800000000000
 Setting Process data address mask to 0xffff800000000000
 Target::SetArchitecture merging compatible arch; arch is now arm64 (arm64-apple-macosx14.0.0)
 Process::CompleteAttach replacing process architecture with DidAttach() architecture: arm64e-apple-macosx-
 DynamicLoaderDarwin::UseDYLDSPI: Use new DynamicLoader plugin
 DynamicLoaderDarwin::UseDYLDSPI: Use new DynamicLoader plugin
 Unloaded:
 DynamicLoaderDarwin::UnloadAllImages[0] 7F38ECE1-827D-351F-8E3C-886574F86827 (arm64) "/Users/shafinazahsan/github-classroom/FPC-advanced/fpc-advanced-classroom-1st-year-assignment-ShafinazAhsan/set01/problem08"
 DynamicLoaderDarwin::UnloadAllImages[1] FFD8AB66-C9AB-31DF-AB80-3A3DFF367DDD (arm64e) "/usr/lib/dyld"
 DynamicLoaderDarwin::UnloadAllImages[2] F0A54B2D-8751-35F1-A3CF-F1A02F842211 (arm64e) "/usr/lib/libSystem.B.dylib"
 DynamicLoaderDarwin::UnloadAllImages[3] C683623C-1FF6-3133-9E28-28672FDBA4D3 (arm64e) "/usr/lib/system/libcache.dylib"
 DynamicLoaderDarwin::UnloadAllImages[4] BFDF8F55-D3DC-3A92-B8A1-8EF165A56F1B (arm64e) "/usr/lib/system/libcommonCrypto.dylib"
 DynamicLoaderDarwin::UnloadAllImages[5] B29A99B2-7ADE-3371-A774-B690BEC3C406 (arm64e) "/usr/lib/system/libcompiler_rt.dylib"
 DynamicLoaderDarwin::UnloadAllImages[6] 65612C42-C5E4-3821-B71D-DDE620FB014C (arm64e) "/usr/lib/system/libcopyfile.dylib"
 DynamicLoaderDarwin::UnloadAllImages[7] B3AC12C0-8ED6-35A2-86C6-0BFA55BFF333 (arm64e) "/usr/lib/system/libcorecrypto.dylib"
 DynamicLoaderDarwin::UnloadAllImages[8] 8790BA20-19EC-3A36-8975-E34382D9747C (arm64e) "/usr/lib/system/libdispatch.dylib"
 DynamicLoaderDarwin::UnloadAllImages[9] 4BB77515-DBA8-3EDF-9AF7-3C9EAE959EA6 (arm64e) "/usr/lib/system/libdyld.dylib"
 DynamicLoaderDarwin::UnloadAllImages[10] F7CE9486-FFF5-3CB8-B26F-75811EF4283A (arm64e) "/usr/lib/system/libkeymgr.dylib"
 DynamicLoaderDarwin::UnloadAllImages[11] 1A7038EC-EE49-35AE-8A3C-C311083795FB (arm64e) "/usr/lib/system/libmacho.dylib"
 DynamicLoaderDarwin::UnloadAllImages[12] 3011123B-C35C-35FC-AB0B-8D775C9109D1 (arm64e) "/usr/lib/system/libquarantine.dylib"
 DynamicLoaderDarwin::UnloadAllImages[13] CE63E895-25E4-350C-BB79-0EFD3AC899E5 (arm64e) "/usr/lib/system/libremovefile.dylib"
 DynamicLoaderDarwin::UnloadAllImages[14] 2EA1DA8E-A94D-32EA-A64F-DD586FE72599 (arm64e) "/usr/lib/system/libsystem_asl.dylib"
 DynamicLoaderDarwin::UnloadAllImages[15] A81CDBDB-D1B1-386E-9029-2F6E0F685E3A (arm64e) "/usr/lib/system/libsystem_blocks.dylib"
 DynamicLoaderDarwin::UnloadAllImages[16] 1B84A7E4-8958-330C-98B8-27D491DFF69E (arm64e) "/usr/lib/system/libsystem_c.dylib"
 DynamicLoaderDarwin::UnloadAllImages[17] FA0C6F96-A737-3F29-B640-99E313873A21 (arm64e) "/usr/lib/system/libsystem_collections.dylib"
 DynamicLoaderDarwin::UnloadAllImages[18] 5E85DB71-174E-3E61-A3C9-36D5E0CBBF46 (arm64e) "/usr/lib/system/libsystem_configuration.dylib"
 DynamicLoaderDarwin::UnloadAllImages[19] 8E716F51-A02E-3005-9F6F-84163BFAF1AE (arm64e) "/usr/lib/system/libsystem_containermanager.dylib"
 DynamicLoaderDarwin::UnloadAllImages[20] 0ECFD7D1-0230-3C32-BDD7-4715D94A28E6 (arm64e) "/usr/lib/system/libsystem_coreservices.dylib"
 DynamicLoaderDarwin::UnloadAllImages[21] 67509907-7BCE-3723-A305-0B042A41FDA5 (arm64e) "/usr/lib/system/libsystem_darwin.dylib"
 DynamicLoaderDarwin::UnloadAllImages[22] F1E52C1A-7156-3BED-AD5B-1CE3AFFDFCE3 (arm64e) "/usr/lib/system/libsystem_darwindirectory.dylib"
 DynamicLoaderDarwin::UnloadAllImages[23] 82426BAB-A0A9-3C99-8A86-DABB3A0BA072 (arm64e) "/usr/lib/system/libsystem_dnssd.dylib"
 DynamicLoaderDarwin::UnloadAllImages[24] 0C18273A-0DB8-3522-853B-67A2187EEF07 (arm64e) "/usr/lib/system/libsystem_featureflags.dylib"
 DynamicLoaderDarwin::UnloadAllImages[25] 8F2A7530-B8D3-3705-B2B7-9347D9495223 (arm64e) "/usr/lib/system/libsystem_info.dylib"
 DynamicLoaderDarwin::UnloadAllImages[26] 72899DE6-A120-389C-90DC-B94C392EF655 (arm64e) "/usr/lib/system/libsystem_m.dylib"
 DynamicLoaderDarwin::UnloadAllImages[27] 00379936-C90E-3D9D-A569-3F97338F1472 (arm64e) "/usr/lib/system/libsystem_malloc.dylib"
 DynamicLoaderDarwin::UnloadAllImages[28] 9DBF57DB-0008-3584-89A3-1463AB9E4967 (arm64e) "/usr/lib/system/libsystem_networkextension.dylib"
 DynamicLoaderDarwin::UnloadAllImages[29] 7DA7113E-E87A-3E78-AD4F-77F6EC076E42 (arm64e) "/usr/lib/system/libsystem_notify.dylib"
 DynamicLoaderDarwin::UnloadAllImages[30] 3BC895C5-B10E-39F4-B761-E79D5719FB1D (arm64e) "/usr/lib/system/libsystem_sandbox.dylib"
 DynamicLoaderDarwin::UnloadAllImages[31] 1C92CD80-54E6-3E70-BB3C-7264A160AD7C (arm64e) "/usr/lib/system/libsystem_secinit.dylib"
 DynamicLoaderDarwin::UnloadAllImages[32] A7D3C07D-0A1E-3C4C-8FBA-66905E16BF99 (arm64e) "/usr/lib/system/libsystem_kernel.dylib"
 DynamicLoaderDarwin::UnloadAllImages[33] E7E2F10A-772A-397F-BD19-A7EA5A54E49F (arm64e) "/usr/lib/system/libsystem_platform.dylib"
 DynamicLoaderDarwin::UnloadAllImages[34] E4DEBB6E-421D-33D0-9E17-77AE0E0FE4DC (arm64e) "/usr/lib/system/libsystem_pthread.dylib"
 DynamicLoaderDarwin::UnloadAllImages[35] 2D7D536C-1D08-304A-9E67-BFB1E99301FE (arm64e) "/usr/lib/system/libsystem_symptoms.dylib"
 DynamicLoaderDarwin::UnloadAllImages[36] 4AF0EA7D-E9F4-30E7-914D-FB292EDB7F37 (arm64e) "/usr/lib/system/libsystem_trace.dylib"
 DynamicLoaderDarwin::UnloadAllImages[37] FB2051CF-36B6-348F-B8DF-5B2F702F6290 (arm64e) "/usr/lib/system/libunwind.dylib"
 DynamicLoaderDarwin::UnloadAllImages[38] 84971772-939B-3130-8908-B7A38851A516 (arm64e) "/usr/lib/system/libxpc.dylib"
 DynamicLoaderDarwin::UnloadAllImages[39] 1C0364B5-D7E3-3170-BAA6-9C28F400E7CC (arm64e) "/usr/lib/libobjc.A.dylib"
 DynamicLoaderDarwin::UnloadAllImages[40] 43940F08-B65E-3888-8CD3-C52398EB1CA1 (arm64e) "/usr/lib/libc++abi.dylib"
 DynamicLoaderDarwin::UnloadAllImages[41] 5A83FBC3-0944-3D77-8DF2-03E262F67AFA (arm64e) "/usr/lib/liboah.dylib"
 DynamicLoaderDarwin::UnloadAllImages[42] 93FBD681-FC78-33A3-AFFE-568702676142 (arm64e) "/usr/lib/libc++.1.dylib"
 Breakpoint::ModulesChanged: num_modules: 43 load: 0 delete_locations: 0

 0x1217307b8 Broadcaster("lldb.target")::BroadcastEvent (event_sp = {0x101e076c8 Event: broadcaster = 0x12202d200 (lldb.target), type = 0x00000001 (breakpoint-changed), data = {bkpt: 1 type: locations removed}}, unique =0) hijack = 0x0
 Breakpoint::ModulesChanged: num_modules: 43 load: 0 delete_locations: 0

 0x1217307b8 Broadcaster("lldb.target")::BroadcastEvent (event_sp = {0x101e07a88 Event: broadcaster = 0x12202d200 (lldb.target), type = 0x00000001 (breakpoint-changed), data = {bkpt: 2 type: locations removed}}, unique =0) hijack = 0x0
 Breakpoint::ModulesChanged: num_modules: 43 load: 0 delete_locations: 0

 0x1217307b8 Broadcaster("lldb.target")::BroadcastEvent (event_sp = {0x101e07a88 Event: broadcaster = 0x12202d200 (lldb.target), type = 0x00000001 (breakpoint-changed), data = {bkpt: 3 type: locations removed}}, unique =0) hijack = 0x0
 Initial module fetch:  Adding 2 modules.

 Found executable module: /Users/shafinazahsan/github-classroom/FPC-advanced/fpc-advanced-classroom-1st-year-assignment-ShafinazAhsan/set01/problem08
 Found dyld module: /usr/lib/dyld
 Adding new image at address=0x000000010000c000.
 address=0x000000010000c000 uuid=FFD8AB66-C9AB-31DF-AB80-3A3DFF367DDD path='/usr/lib/dyld'
 		          __TEXT [0x000000010000c000 - 0x00000001000a0000) slide = 0x10000c000
 		    __DATA_CONST [0x00000001000a0000 - 0x00000001000a8000) slide = 0x10000c000
 		          __DATA [0x00000001000a8000 - 0x00000001000ac000) slide = 0x10000c000
 		    __DATA_DIRTY [0x00000001000ac000 - 0x00000001000b0000) slide = 0x10000c000
 		      __LINKEDIT [0x00000001000b0000 - 0x000000010010c000) slide = 0x10000c000
 Adding new image at address=0x0000000100000000.
 address=0x0000000100000000 uuid=7F38ECE1-827D-351F-8E3C-886574F86827 path='/Users/shafinazahsan/github-classroom/FPC-advanced/fpc-advanced-classroom-1st-year-assignment-ShafinazAhsan/set01/problem08'
 		      __PAGEZERO [0x0000000000000000 - 0x0000000100000000)
 		          __TEXT [0x0000000100000000 - 0x0000000100004000)
 		    __DATA_CONST [0x0000000100004000 - 0x0000000100008000)
 		      __LINKEDIT [0x0000000100008000 - 0x000000010000c000)
 DynamicLoaderDarwin::ModulesDidLoad[0] FFD8AB66-C9AB-31DF-AB80-3A3DFF367DDD (arm64e) "/usr/lib/dyld"
 DynamicLoaderDarwin::ModulesDidLoad[1] 7F38ECE1-827D-351F-8E3C-886574F86827 (arm64) "/Users/shafinazahsan/github-classroom/FPC-advanced/fpc-advanced-classroom-1st-year-assignment-ShafinazAhsan/set01/problem08"
 Breakpoint::ModulesChanged: num_modules: 2 load: 1 delete_locations: 0

 GDBRemoteCommunicationClient::SendGDBStoppointTypePacket() add at addr = 0x100003d34
 0x1217307b8 Broadcaster("lldb.target")::BroadcastEvent (event_sp = {0x101e076c8 Event: broadcaster = 0x12202d200 (lldb.target), type = 0x00000001 (breakpoint-changed), data = {bkpt: 1 type: locations resolved}}, unique =0) hijack = 0x0
 Breakpoint::ModulesChanged: num_modules: 2 load: 1 delete_locations: 0

 GDBRemoteCommunicationClient::SendGDBStoppointTypePacket() add at addr = 0x100003db0
 0x1217307b8 Broadcaster("lldb.target")::BroadcastEvent (event_sp = {0x101e079a8 Event: broadcaster = 0x12202d200 (lldb.target), type = 0x00000001 (breakpoint-changed), data = {bkpt: 2 type: locations resolved}}, unique =0) hijack = 0x0
 Breakpoint::ModulesChanged: num_modules: 2 load: 1 delete_locations: 0

 GDBRemoteCommunicationClient::SendGDBStoppointTypePacket() add at addr = 0x100003e70
 0x1217307b8 Broadcaster("lldb.target")::BroadcastEvent (event_sp = {0x101e076c8 Event: broadcaster = 0x12202d200 (lldb.target), type = 0x00000001 (breakpoint-changed), data = {bkpt: 3 type: locations resolved}}, unique =0) hijack = 0x0
 Target::AddBreakpoint (internal = yes) => break_id = -1: name = '_dyld_debugger_notification', language = c, module = dyld


 GDBRemoteCommunicationClient::SendGDBStoppointTypePacket() add at addr = 0x10000de20
 after DynamicLoader::DidAttach(), target executable is /Users/shafinazahsan/github-classroom/FPC-advanced/fpc-advanced-classroom-1st-year-assignment-ShafinazAhsan/set01/problem08 (using macos-dyld plugin)
 after SystemRuntime::DidAttach(), target executable is /Users/shafinazahsan/github-classroom/FPC-advanced/fpc-advanced-classroom-1st-year-assignment-ShafinazAhsan/set01/problem08 (using systemruntime-macosx plugin)
 Ran next event action, result was 0.
 0x1217fae98: tid = 0x53b2: stop info = <NULL> (stop_id = 1)
 0x1217fae98: tid = 0x53b2: stop info = signal SIGSTOP (stop_id = 1)
 
 ThreadList::ShouldStop: 1 threads, 1 unsuspended threads
 Thread::ShouldStop(0x1217fae98) for tid = 0x53b2 0x53b2, pc = 0x0000000100010b70
 ^^^^^^^^ Thread::ShouldStop Begin ^^^^^^^^
 Plan stack initial state:
  thread #1: tid = 0x53b2:
    Active plan stack:
      Element 0: Base thread plan.

 Base plan discarding thread plans for thread tid = 0x53b2 (signal: signal SIGSTOP)
 Discarding thread plans for thread (tid = 0x53b2, force 0)
 Base plan says should stop: 1.
 Plan stack final state:
  thread #1: tid = 0x53b2:
    Active plan stack:
      Element 0: Base thread plan.

 vvvvvvvv Thread::ShouldStop End (returning 1) vvvvvvvv
 ThreadList::ShouldStop overall should_stop = 1
 Process::ShouldBroadcastEvent (0x12172fde0) => new state: stopped, last broadcast state: stopped - YES
 Process::HandlePrivateEvent (pid = 2000) broadcasting new state stopped (old state stopped) to hijacked
 timeout = <infinite>, event_sp)...
 (plugin = gdb-remote, state = stopped, restarted = 0)
 (plugin = gdb-remote, state = stopped) -- unlocking run lock
 timeout = <infinite>, event_sp) => stopped
 (plugin = gdb-remote) -- locking run lock
 Process::PrivateResume() m_stop_id = 1, public state: stopped private state: stopped
 WillResume Thread #1 (0x0x1217fae98): tid = 0x53b2, pc = 0x100010b70, sp = 0x16fdfefb0, fp = 0x00000000, plan = 'base plan', state = running, stop others = 0
 (plugin = gdb-remote, state = running)
 Current Plan for thread 1(0x1217fae98) (0x53b2, running): base plan being asked whether we should report run.
 Process::ShouldBroadcastEvent (0x101715ee0) => new state: running, last broadcast state: running - YES
 Process::HandlePrivateEvent (pid = 2000) broadcasting new state running (old state running) to public
 Process thinks the process has resumed.
 Process::PushProcessIOHandler pushing IO handler
 Process::HandlePrivateEvent updated m_iohandler_sync to 1
 timeout = <infinite>, event_sp)...
 waited from m_iohandler_sync to change from 0. New value is 1.
 (plugin = gdb-remote, state = running, restarted = 0)
 HandleCommand, command succeeded
 Process::GetSTDOUT (buf = 0x16fe868a0, size = 1024)
 (plugin = gdb-remote, state = stopped)
 (plugin = gdb-remote, state = stopped, stop_id = 2
 0x1217fae98: tid = 0x53b2: stop info = <NULL> (stop_id = 2)
 0x1217fae98: tid = 0x53b2: stop info = shared-library-event (stop_id = 2)
 
 ThreadList::ShouldStop: 1 threads, 1 unsuspended threads
 Thread::ShouldStop(0x1217fae98) for tid = 0x53b2 0x53b2, pc = 0x000000010000de20
 ^^^^^^^^ Thread::ShouldStop Begin ^^^^^^^^
 Plan stack initial state:
  thread #1: tid = 0x53b2:
    Active plan stack:
      Element 0: Base thread plan.

 Target::RemoveBreakpointByID (break_id = -1, internal = yes)

 Target::DisableBreakpointByID (break_id = -1, internal = yes)

 GDBRemoteCommunicationClient::SendGDBStoppointTypePacket() remove at addr = 0x10000de20
 Unloaded:
 DynamicLoaderDarwin::UnloadAllImages[0] 7F38ECE1-827D-351F-8E3C-886574F86827 (arm64) "/Users/shafinazahsan/github-classroom/FPC-advanced/fpc-advanced-classroom-1st-year-assignment-ShafinazAhsan/set01/problem08"
 Breakpoint::ModulesChanged: num_modules: 1 load: 0 delete_locations: 0

 GDBRemoteCommunicationClient::SendGDBStoppointTypePacket() remove at addr = 0x100003d34
 0x1217307b8 Broadcaster("lldb.target")::BroadcastEvent (event_sp = {0x1216feaf8 Event: broadcaster = 0x12202d200 (lldb.target), type = 0x00000001 (breakpoint-changed), data = {bkpt: 1 type: locations removed}}, unique =0) hijack = 0x0
 Breakpoint::ModulesChanged: num_modules: 1 load: 0 delete_locations: 0

 GDBRemoteCommunicationClient::SendGDBStoppointTypePacket() remove at addr = 0x100003db0
 0x1217307b8 Broadcaster("lldb.target")::BroadcastEvent (event_sp = {0x1216feaf8 Event: broadcaster = 0x12202d200 (lldb.target), type = 0x00000001 (breakpoint-changed), data = {bkpt: 2 type: locations removed}}, unique =0) hijack = 0x0
 Breakpoint::ModulesChanged: num_modules: 1 load: 0 delete_locations: 0

 GDBRemoteCommunicationClient::SendGDBStoppointTypePacket() remove at addr = 0x100003e70
 0x1217307b8 Broadcaster("lldb.target")::BroadcastEvent (event_sp = {0x1216feaf8 Event: broadcaster = 0x12202d200 (lldb.target), type = 0x00000001 (breakpoint-changed), data = {bkpt: 3 type: locations removed}}, unique =0) hijack = 0x0
 Target::AddBreakpoint (internal = yes) => break_id = -2: address = 0x0000000182deda0c


 GDBRemoteCommunicationClient::SendGDBStoppointTypePacket() add at addr = 0x182deda0c
 Hit breakpoint location: -1.1: 
  module = /usr/lib/dyld
  symbol = _dyld_debugger_notification
  address = dyld[0x00000001800b8e20]
  resolved = false
  hardware = false
  hit count = 1   
, continuing.

 StopInfo::ShouldStop async callback says we should not stop, returning ShouldStop of false.
 ThreadList::ShouldStop overall should_stop = 0
 ThreadList::ShouldReportStop 1 threads
 Thread::ShouldReportStop() tid = 0x53b2: returning vote 0 for current plan
 Returning no opinion
 Process::ShouldBroadcastEvent: should_resume: 1 state: stopped was_restarted: 0 report_stop_vote: 0.
 Process::ShouldBroadcastEvent (0x1216266d0) Restarting process from state: stopped
 Process::PrivateResume() m_stop_id = 2, public state: running private state: stopped
 WillResume Thread #1 (0x0x1217fae98): tid = 0x53b2, pc = 0x10000de20, sp = 0x16fdfec60, fp = 0x16fdfed10, plan = 'base plan', state = running, stop others = 0
 (plugin = gdb-remote, state = running)
 Process thinks the process has resumed.
 Process::ShouldBroadcastEvent (0x1216266d0) => new state: stopped, last broadcast state: running - NO
 Process::HandlePrivateEvent (pid = 2000) suppressing state stopped (old state running): should_broadcast == false
 timeout = <infinite>, event_sp)...
 Process::ShouldBroadcastEvent (0x101e10340) => new state: running, last broadcast state: running - NO
 Process::HandlePrivateEvent (pid = 2000) suppressing state running (old state running): should_broadcast == false
 timeout = <infinite>, event_sp)...
 (plugin = gdb-remote, state = stopped)
 (plugin = gdb-remote, state = stopped, stop_id = 3
 0x1217fae98: tid = 0x53b2: stop info = <NULL> (stop_id = 3)
 0x1217fae98: tid = 0x53b2: stop info =  (stop_id = 3)
 
 ThreadList::ShouldStop: 1 threads, 1 unsuspended threads
 Thread::ShouldStop(0x1217fae98) for tid = 0x53b2 0x53b2, pc = 0x0000000182deda0c
 ^^^^^^^^ Thread::ShouldStop Begin ^^^^^^^^
 Plan stack initial state:
  thread #1: tid = 0x53b2:
    Active plan stack:
      Element 0: Base thread plan.

 Target::RemoveBreakpointByID (break_id = -2, internal = yes)

 Target::DisableBreakpointByID (break_id = -2, internal = yes)

 GDBRemoteCommunicationClient::SendGDBStoppointTypePacket() remove at addr = 0x182deda0c
 Initial module fetch:  Adding 2 modules.

 Found executable module: /Users/shafinazahsan/github-classroom/FPC-advanced/fpc-advanced-classroom-1st-year-assignment-ShafinazAhsan/set01/problem08
 Found dyld module: /usr/lib/dyld
 Adding new image at address=0x0000000182da3000.
 address=0x0000000182da3000 uuid=FFD8AB66-C9AB-31DF-AB80-3A3DFF367DDD path='/usr/lib/dyld'
 		          __TEXT [0x0000000182da3000 - 0x0000000182e36874) slide = 0x2cec000
 		    __DATA_CONST [0x00000001de269bd0 - 0x00000001de26f380) slide = 0x2cec000
 		          __DATA [0x00000001da8a9e80 - 0x00000001da8aca4c) slide = 0x2cec000
 		    __DATA_DIRTY [0x00000001da3e90c0 - 0x00000001da3eac20) slide = 0x2cec000
 		      __LINKEDIT [0x000000023a91c000 - 0x0000000271f8c000) slide = 0x2cec000
 Adding new image at address=0x0000000100000000.
 address=0x0000000100000000 uuid=7F38ECE1-827D-351F-8E3C-886574F86827 path='/Users/shafinazahsan/github-classroom/FPC-advanced/fpc-advanced-classroom-1st-year-assignment-ShafinazAhsan/set01/problem08'
 		      __PAGEZERO [0x0000000000000000 - 0x0000000100000000)
 		          __TEXT [0x0000000100000000 - 0x0000000100004000)
 		    __DATA_CONST [0x0000000100004000 - 0x0000000100008000)
 		      __LINKEDIT [0x0000000100008000 - 0x000000010000c000)
 DynamicLoaderDarwin::ModulesDidLoad[0] FFD8AB66-C9AB-31DF-AB80-3A3DFF367DDD (arm64e) "/usr/lib/dyld"
 DynamicLoaderDarwin::ModulesDidLoad[1] 7F38ECE1-827D-351F-8E3C-886574F86827 (arm64) "/Users/shafinazahsan/github-classroom/FPC-advanced/fpc-advanced-classroom-1st-year-assignment-ShafinazAhsan/set01/problem08"
 Breakpoint::ModulesChanged: num_modules: 2 load: 1 delete_locations: 0

 GDBRemoteCommunicationClient::SendGDBStoppointTypePacket() add at addr = 0x100003d34
 0x1217307b8 Broadcaster("lldb.target")::BroadcastEvent (event_sp = {0x101e10c18 Event: broadcaster = 0x12202d200 (lldb.target), type = 0x00000001 (breakpoint-changed), data = {bkpt: 1 type: locations resolved}}, unique =0) hijack = 0x0
 Breakpoint::ModulesChanged: num_modules: 2 load: 1 delete_locations: 0

 GDBRemoteCommunicationClient::SendGDBStoppointTypePacket() add at addr = 0x100003db0
 0x1217307b8 Broadcaster("lldb.target")::BroadcastEvent (event_sp = {0x101e10c18 Event: broadcaster = 0x12202d200 (lldb.target), type = 0x00000001 (breakpoint-changed), data = {bkpt: 2 type: locations resolved}}, unique =0) hijack = 0x0
 Breakpoint::ModulesChanged: num_modules: 2 load: 1 delete_locations: 0

 GDBRemoteCommunicationClient::SendGDBStoppointTypePacket() add at addr = 0x100003e70
 0x1217307b8 Broadcaster("lldb.target")::BroadcastEvent (event_sp = {0x101e10c18 Event: broadcaster = 0x12202d200 (lldb.target), type = 0x00000001 (breakpoint-changed), data = {bkpt: 3 type: locations resolved}}, unique =0) hijack = 0x0
 Target::AddBreakpoint (internal = yes) => break_id = -3: name = '_dyld_debugger_notification', language = c, module = dyld


 GDBRemoteCommunicationClient::SendGDBStoppointTypePacket() add at addr = 0x182da4e20
 Hit breakpoint location: -2.1: 
  address = 0x0000000182deda0c
  resolved = false
  hardware = false
  hit count = 1   
, continuing.

 StopInfo::ShouldStop async callback says we should not stop, returning ShouldStop of false.
 ThreadList::ShouldStop overall should_stop = 0
 ThreadList::ShouldReportStop 1 threads
 Thread::ShouldReportStop() tid = 0x53b2: returning vote 0 for current plan
 Returning no opinion
 Process::ShouldBroadcastEvent: should_resume: 1 state: stopped was_restarted: 0 report_stop_vote: 0.
 Process::ShouldBroadcastEvent (0x121625900) Restarting process from state: stopped
 Process::PrivateResume() m_stop_id = 3, public state: running private state: stopped
 WillResume Thread #1 (0x0x1217fae98): tid = 0x53b2, pc = 0x182deda0c, sp = 0x16fdfec10, fp = 0x16fdfed70, plan = 'base plan', state = running, stop others = 0
 (plugin = gdb-remote, state = running)
 Process thinks the process has resumed.
 Process::ShouldBroadcastEvent (0x121625900) => new state: stopped, last broadcast state: running - NO
 Process::HandlePrivateEvent (pid = 2000) suppressing state stopped (old state running): should_broadcast == false
 timeout = <infinite>, event_sp)...
 Process::ShouldBroadcastEvent (0x101e09cf0) => new state: running, last broadcast state: running - NO
 Process::HandlePrivateEvent (pid = 2000) suppressing state running (old state running): should_broadcast == false
 timeout = <infinite>, event_sp)...
 (plugin = gdb-remote, state = stopped)
 (plugin = gdb-remote, state = stopped, stop_id = 4
 0x1217fae98: tid = 0x53b2: stop info = <NULL> (stop_id = 4)
 0x1217fae98: tid = 0x53b2: stop info = shared-library-event (stop_id = 4)
 
 ThreadList::ShouldStop: 1 threads, 1 unsuspended threads
 Thread::ShouldStop(0x1217fae98) for tid = 0x53b2 0x53b2, pc = 0x0000000182da4e20
 ^^^^^^^^ Thread::ShouldStop Begin ^^^^^^^^
 Plan stack initial state:
  thread #1: tid = 0x53b2:
    Active plan stack:
      Element 0: Base thread plan.

 Adding 1 modules.
 Adding new image at address=0x0000000100000000.
 address=0x0000000100000000 uuid=7F38ECE1-827D-351F-8E3C-886574F86827 path='/Users/shafinazahsan/github-classroom/FPC-advanced/fpc-advanced-classroom-1st-year-assignment-ShafinazAhsan/set01/problem08'
 		      __PAGEZERO [0x0000000000000000 - 0x0000000100000000)
 		          __TEXT [0x0000000100000000 - 0x0000000100004000)
 		    __DATA_CONST [0x0000000100004000 - 0x0000000100008000)
 		      __LINKEDIT [0x0000000100008000 - 0x000000010000c000)
 Hit breakpoint location: -3.1: 
  module = /usr/lib/dyld
  symbol = _dyld_debugger_notification
  address = 0x0000000182da4e20
  resolved = true
  hardware = false
  hit count = 1   
, continuing.

 StopInfo::ShouldStop async callback says we should not stop, returning ShouldStop of false.
 ThreadList::ShouldStop overall should_stop = 0
 ThreadList::ShouldReportStop 1 threads
 Thread::ShouldReportStop() tid = 0x53b2: returning vote 0 for current plan
 Returning no opinion
 Process::ShouldBroadcastEvent: should_resume: 1 state: stopped was_restarted: 0 report_stop_vote: 0.
 Process::ShouldBroadcastEvent (0x101e09cf0) Restarting process from state: stopped
 Process::PrivateResume() m_stop_id = 4, public state: running private state: stopped
 Thread::PushPlan(0x0x1217fae98): "Single stepping past breakpoint site 9 at 0x182da4e20", tid = 0x53b2.
 WillResume Thread #1 (0x0x1217fae98): tid = 0x53b2, pc = 0x182da4e20, sp = 0x16fdfeb50, fp = 0x16fdfec00, plan = 'Step over breakpoint trap', state = stepping, stop others = 1
 GDBRemoteCommunicationClient::SendGDBStoppointTypePacket() remove at addr = 0x182da4e20
 (plugin = gdb-remote, state = running)
 Process thinks the process has resumed.
 Process::ShouldBroadcastEvent (0x101e09cf0) => new state: stopped, last broadcast state: running - NO
 Process::HandlePrivateEvent (pid = 2000) suppressing state stopped (old state running): should_broadcast == false
 timeout = <infinite>, event_sp)...
 Process::ShouldBroadcastEvent (0x101e0b000) => new state: running, last broadcast state: running - NO
 Process::HandlePrivateEvent (pid = 2000) suppressing state running (old state running): should_broadcast == false
 timeout = <infinite>, event_sp)...
 (plugin = gdb-remote, state = stopped)
 (plugin = gdb-remote, state = stopped, stop_id = 5
 0x1217fae98: tid = 0x53b2: stop info = <NULL> (stop_id = 5)
 0x1217fae98: tid = 0x53b2: stop info = trace (stop_id = 5)
 
 ThreadList::ShouldStop: 1 threads, 1 unsuspended threads
 Thread::ShouldStop(0x1217fae98) for tid = 0x53b2 0x53b2, pc = 0x0000000182dedac8
 ^^^^^^^^ Thread::ShouldStop Begin ^^^^^^^^
 Plan stack initial state:
  thread #1: tid = 0x53b2:
    Active plan stack:
      Element 0: Base thread plan.
      Element 1: Single stepping past breakpoint site 9 at 0x182da4e20

 Step over breakpoint stopped for reason: trace.
 Plan Step over breakpoint trap should stop: 0.
 Completed step over breakpoint plan.
 GDBRemoteCommunicationClient::SendGDBStoppointTypePacket() add at addr = 0x182da4e20
 Plan Step over breakpoint trap auto-continue: true.
 Popping plan: "Step over breakpoint trap", tid = 0x53b2.
 Plan stack final state:
  thread #1: tid = 0x53b2:
    Active plan stack:
      Element 0: Base thread plan.
    Completed plan stack:
      Element 0: Single stepping past breakpoint site 9 at 0x182da4e20

 vvvvvvvv Thread::ShouldStop End (returning 0) vvvvvvvv
 ThreadList::ShouldStop overall should_stop = 0
 ThreadList::ShouldReportStop 1 threads
 Thread::ShouldReportStop() tid = 0x53b2: returning vote for complete stack's back plan
 Returning vote: no
 Returning no
 Process::ShouldBroadcastEvent: should_resume: 1 state: stopped was_restarted: 0 report_stop_vote: -1.
 Process::ShouldBroadcastEvent (0x101e0b000) Restarting process from state: stopped
 Process::PrivateResume() m_stop_id = 5, public state: running private state: stopped
 WillResume Thread #1 (0x0x1217fae98): tid = 0x53b2, pc = 0x182dedac8, sp = 0x16fdfeb50, fp = 0x16fdfec00, plan = 'base plan', state = running, stop others = 0
 (plugin = gdb-remote, state = running)
 Process thinks the process has resumed.
 Process::ShouldBroadcastEvent (0x101e0b000) => new state: stopped, last broadcast state: running - NO
 Process::HandlePrivateEvent (pid = 2000) suppressing state stopped (old state running): should_broadcast == false
 timeout = <infinite>, event_sp)...
 Process::ShouldBroadcastEvent (0x10172b880) => new state: running, last broadcast state: running - NO
 Process::HandlePrivateEvent (pid = 2000) suppressing state running (old state running): should_broadcast == false
 timeout = <infinite>, event_sp)...
 (plugin = gdb-remote, state = stopped)
 (plugin = gdb-remote, state = stopped, stop_id = 6
 0x1217fae98: tid = 0x53b2: stop info = <NULL> (stop_id = 6)
 0x1217fae98: tid = 0x53b2: stop info = shared-library-event (stop_id = 6)
 
 ThreadList::ShouldStop: 1 threads, 1 unsuspended threads
 Thread::ShouldStop(0x1217fae98) for tid = 0x53b2 0x53b2, pc = 0x0000000182da4e20
 ^^^^^^^^ Thread::ShouldStop Begin ^^^^^^^^
 Plan stack initial state:
  thread #1: tid = 0x53b2:
    Active plan stack:
      Element 0: Base thread plan.

 Adding 41 modules.
 Adding new image at address=0x000000018f945000.
 address=0x000000018f945000 uuid=F0A54B2D-8751-35F1-A3CF-F1A02F842211 path='/usr/lib/libSystem.B.dylib'
 		          __TEXT [0x000000018f945000 - 0x000000018f947000) slide = 0x2cec000
 		    __DATA_CONST [0x00000001d71a5b98 - 0x00000001d71a5ba8) slide = 0x2cec000
 		    __AUTH_CONST [0x00000001df1a95a8 - 0x00000001df1a9878) slide = 0x2cec000
 		          __AUTH [0x00000001daa30650 - 0x00000001daa30658) slide = 0x2cec000
 		          __DATA [0x00000001d9432d60 - 0x00000001d9432d68) slide = 0x2cec000
 		      __LINKEDIT [0x000000023a91c000 - 0x0000000271f8c000) slide = 0x2cec000
 Adding new image at address=0x000000018f93f000.
 address=0x000000018f93f000 uuid=C683623C-1FF6-3133-9E28-28672FDBA4D3 path='/usr/lib/system/libcache.dylib'
 		          __TEXT [0x000000018f93f000 - 0x000000018f945000) slide = 0x2cec000
 		    __DATA_CONST [0x00000001d71a5af0 - 0x00000001d71a5b98) slide = 0x2cec000
 		    __AUTH_CONST [0x00000001df1a94d0 - 0x00000001df1a95a8) slide = 0x2cec000
 		      __LINKEDIT [0x000000023a91c000 - 0x0000000271f8c000) slide = 0x2cec000
 Adding new image at address=0x000000018f8fb000.
 address=0x000000018f8fb000 uuid=BFDF8F55-D3DC-3A92-B8A1-8EF165A56F1B path='/usr/lib/system/libcommonCrypto.dylib'
 		          __TEXT [0x000000018f8fb000 - 0x000000018f908ff8) slide = 0x2cec000
 		    __DATA_CONST [0x00000001d71a4b08 - 0x00000001d71a52a8) slide = 0x2cec000
 		    __AUTH_CONST [0x00000001df1a7558 - 0x00000001df1a8388) slide = 0x2cec000
 		          __AUTH [0x00000001daa30630 - 0x00000001daa30650) slide = 0x2cec000
 		      __LINKEDIT [0x000000023a91c000 - 0x0000000271f8c000) slide = 0x2cec000
 Adding new image at address=0x000000018f926000.
 address=0x000000018f926000 uuid=B29A99B2-7ADE-3371-A774-B690BEC3C406 path='/usr/lib/system/libcompiler_rt.dylib'
 		          __TEXT [0x000000018f926000 - 0x000000018f92a000) slide = 0x2cec000
 		    __AUTH_CONST [0x00000001df1a8c60 - 0x00000001df1a8cc0) slide = 0x2cec000
 		          __DATA [0x00000001d9431cf0 - 0x00000001d9432cf0) slide = 0x2cec000
 		      __LINKEDIT [0x000000023a91c000 - 0x0000000271f8c000) slide = 0x2cec000
 Adding new image at address=0x000000018f91c000.
 address=0x000000018f91c000 uuid=65612C42-C5E4-3821-B71D-DDE620FB014C path='/usr/lib/system/libcopyfile.dylib'
 		          __TEXT [0x000000018f91c000 - 0x000000018f925ff4) slide = 0x2cec000
 		    __DATA_CONST [0x00000001d71a5600 - 0x00000001d71a59e0) slide = 0x2cec000
 		    __AUTH_CONST [0x00000001df1a8800 - 0x00000001df1a8c60) slide = 0x2cec000
 		          __DATA [0x00000001d9431ce0 - 0x00000001d9431cf0) slide = 0x2cec000
 		      __LINKEDIT [0x000000023a91c000 - 0x0000000271f8c000) slide = 0x2cec000
 Adding new image at address=0x0000000182e9e000.
 address=0x0000000182e9e000 uuid=B3AC12C0-8ED6-35A2-86C6-0BFA55BFF333 path='/usr/lib/system/libcorecrypto.dylib'
 		          __TEXT [0x0000000182e9e000 - 0x0000000182f3afc8) slide = 0x2cec000
 		    __DATA_CONST [0x00000001d70f4000 - 0x00000001d70f4f10) slide = 0x2cec000
 		    __AUTH_CONST [0x00000001de277680 - 0x00000001de279188) slide = 0x2cec000
 		          __AUTH [0x00000001da8acc08 - 0x00000001da8accc8) slide = 0x2cec000
 		          __DATA [0x00000001d9270590 - 0x00000001d92788f0) slide = 0x2cec000
 		    __DATA_DIRTY [0x00000001da3ebdc8 - 0x00000001da3ebea0) slide = 0x2cec000
 		      __LINKEDIT [0x000000023a91c000 - 0x0000000271f8c000) slide = 0x2cec000
 Adding new image at address=0x0000000182f72000.
 address=0x0000000182f72000 uuid=8790BA20-19EC-3A36-8975-E34382D9747C path='/usr/lib/system/libdispatch.dylib'
 		          __TEXT [0x0000000182f72000 - 0x0000000182fb9000) slide = 0x2cec000
 		    __DATA_CONST [0x00000001de279a40 - 0x00000001de28dd70) slide = 0x2cec000
 		          __DATA [0x00000001da8b8000 - 0x00000001da8b93a0) slide = 0x2cec000
 		    __DATA_DIRTY [0x00000001da3ec0c0 - 0x00000001da3efae8) slide = 0x2cec000
 		      __LINKEDIT [0x000000023a91c000 - 0x0000000271f8c000) slide = 0x2cec000
 Adding new image at address=0x0000000183129000.
 address=0x0000000183129000 uuid=4BB77515-DBA8-3EDF-9AF7-3C9EAE959EA6 path='/usr/lib/system/libdyld.dylib'
 		          __TEXT [0x0000000183129000 - 0x000000018314e000) slide = 0x2cec000
 		    __DATA_CONST [0x00000001d70f9aa8 - 0x00000001d70f9ee8) slide = 0x2cec000
 		    __AUTH_CONST [0x00000001de294230 - 0x00000001de294e08) slide = 0x2cec000
 		          __AUTH [0x00000001da8bc5d0 - 0x00000001da8bc620) slide = 0x2cec000
 		          __DATA [0x00000001d9294048 - 0x00000001d92940b8) slide = 0x2cec000
 		    __DATA_DIRTY [0x00000001da3fd838 - 0x00000001da3fd858) slide = 0x2cec000
 		  __SHARED_CACHE [0x00000001d92940b8 - 0x00000001d92940b8) slide = 0x2cec000
 		      __LINKEDIT [0x000000023a91c000 - 0x0000000271f8c000) slide = 0x2cec000
 Adding new image at address=0x000000018f935000.
 address=0x000000018f935000 uuid=F7CE9486-FFF5-3CB8-B26F-75811EF4283A path='/usr/lib/system/libkeymgr.dylib'
 		          __TEXT [0x000000018f935000 - 0x000000018f935ffc) slide = 0x2cec000
 		    __DATA_CONST [0x00000001d71a5a68 - 0x00000001d71a5a78) slide = 0x2cec000
 		    __AUTH_CONST [0x00000001df1a9268 - 0x00000001df1a92e8) slide = 0x2cec000
 		      __LINKEDIT [0x000000023a91c000 - 0x0000000271f8c000) slide = 0x2cec000
 Adding new image at address=0x000000018f8d3000.
 address=0x000000018f8d3000 uuid=1A7038EC-EE49-35AE-8A3C-C311083795FB path='/usr/lib/system/libmacho.dylib'
 		          __TEXT [0x000000018f8d3000 - 0x000000018f8daffc) slide = 0x2cec000
 		    __DATA_CONST [0x00000001d71a4388 - 0x00000001d71a4ad0) slide = 0x2cec000
 		    __AUTH_CONST [0x00000001df1a73d0 - 0x00000001df1a7440) slide = 0x2cec000
 		      __LINKEDIT [0x000000023a91c000 - 0x0000000271f8c000) slide = 0x2cec000
 Adding new image at address=0x000000018ee73000.
 address=0x000000018ee73000 uuid=3011123B-C35C-35FC-AB0B-8D775C9109D1 path='/usr/lib/system/libquarantine.dylib'
 		          __TEXT [0x000000018ee73000 - 0x000000018ee75ffc) slide = 0x2cec000
 		    __DATA_CONST [0x00000001d719f9d8 - 0x00000001d719fa28) slide = 0x2cec000
 		    __AUTH_CONST [0x00000001df030da8 - 0x00000001df030eb8) slide = 0x2cec000
 		          __DATA [0x00000001d941e810 - 0x00000001d941e820) slide = 0x2cec000
 		      __LINKEDIT [0x000000023a91c000 - 0x0000000271f8c000) slide = 0x2cec000
 Adding new image at address=0x000000018f932000.
 address=0x000000018f932000 uuid=CE63E895-25E4-350C-BB79-0EFD3AC899E5 path='/usr/lib/system/libremovefile.dylib'
 		          __TEXT [0x000000018f932000 - 0x000000018f934ffc) slide = 0x2cec000
 		    __DATA_CONST [0x00000001d71a5a58 - 0x00000001d71a5a68) slide = 0x2cec000
 		    __AUTH_CONST [0x00000001df1a90e8 - 0x00000001df1a9268) slide = 0x2cec000
 		      __LINKEDIT [0x000000023a91c000 - 0x0000000271f8c000) slide = 0x2cec000
 Adding new image at address=0x00000001887e6000.
 address=0x00000001887e6000 uuid=2EA1DA8E-A94D-32EA-A64F-DD586FE72599 path='/usr/lib/system/libsystem_asl.dylib'
 		          __TEXT [0x00000001887e6000 - 0x00000001887fe000) slide = 0x2cec000
 		    __DATA_CONST [0x00000001d711d8c0 - 0x00000001d711dee0) slide = 0x2cec000
 		    __AUTH_CONST [0x00000001de984800 - 0x00000001de985248) slide = 0x2cec000
 		          __DATA [0x00000001d9361460 - 0x00000001d9361570) slide = 0x2cec000
 		    __DATA_DIRTY [0x00000001da44bd80 - 0x00000001da44bedc) slide = 0x2cec000
 		      __LINKEDIT [0x000000023a91c000 - 0x0000000271f8c000) slide = 0x2cec000
 Adding new image at address=0x0000000182e37000.
 address=0x0000000182e37000 uuid=A81CDBDB-D1B1-386E-9029-2F6E0F685E3A path='/usr/lib/system/libsystem_blocks.dylib'
 		          __TEXT [0x0000000182e37000 - 0x0000000182e3bff9) slide = 0x2cec000
 		    __DATA_CONST [0x00000001de26f380 - 0x00000001de26f6f0) slide = 0x2cec000
 		    __AUTH_CONST [0x00000001de26f6f0 - 0x00000001de26f8c0) slide = 0x2cec000
 		          __DATA [0x00000001d926f5e0 - 0x00000001d926f5f8) slide = 0x2cec000
 		    __DATA_DIRTY [0x00000001da3eac20 - 0x00000001da3eae18) slide = 0x2cec000
 		      __LINKEDIT [0x000000023a91c000 - 0x0000000271f8c000) slide = 0x2cec000
 Adding new image at address=0x0000000182fbc000.
 address=0x0000000182fbc000 uuid=1B84A7E4-8958-330C-98B8-27D491DFF69E path='/usr/lib/system/libsystem_c.dylib'
 		          __TEXT [0x0000000182fbc000 - 0x000000018303aff4) slide = 0x2cec000
 		    __DATA_CONST [0x00000001d70f5140 - 0x00000001d70f69c8) slide = 0x2cec000
 		    __AUTH_CONST [0x00000001de28def0 - 0x00000001de28e848) slide = 0x2cec000
 		          __AUTH [0x00000001da8b93a0 - 0x00000001da8ba0c0) slide = 0x2cec000
 		          __DATA [0x00000001d927ac30 - 0x00000001d927cdb0) slide = 0x2cec000
 		    __DATA_DIRTY [0x00000001da3efaf8 - 0x00000001da3f2680) slide = 0x2cec000
 		      __LINKEDIT [0x000000023a91c000 - 0x0000000271f8c000) slide = 0x2cec000
 Adding new image at address=0x000000018f92a000.
 address=0x000000018f92a000 uuid=FA0C6F96-A737-3F29-B640-99E313873A21 path='/usr/lib/system/libsystem_collections.dylib'
 		          __TEXT [0x000000018f92a000 - 0x000000018f92effc) slide = 0x2cec000
 		    __DATA_CONST [0x00000001d71a59e0 - 0x00000001d71a59e8) slide = 0x2cec000
 		    __AUTH_CONST [0x00000001df1a8cc0 - 0x00000001df1a8e10) slide = 0x2cec000
 		      __LINKEDIT [0x000000023a91c000 - 0x0000000271f8c000) slide = 0x2cec000
 Adding new image at address=0x000000018e155000.
 address=0x000000018e155000 uuid=5E85DB71-174E-3E61-A3C9-36D5E0CBBF46 path='/usr/lib/system/libsystem_configuration.dylib'
 		          __TEXT [0x000000018e155000 - 0x000000018e15a000) slide = 0x2cec000
 		    __DATA_CONST [0x00000001d719c2c8 - 0x00000001d719c4a0) slide = 0x2cec000
 		    __AUTH_CONST [0x00000001defb7400 - 0x00000001defb7728) slide = 0x2cec000
 		          __DATA [0x00000001d9409520 - 0x00000001d94095e1) slide = 0x2cec000
 		      __LINKEDIT [0x000000023a91c000 - 0x0000000271f8c000) slide = 0x2cec000
 Adding new image at address=0x000000018d1e5000.
 address=0x000000018d1e5000 uuid=8E716F51-A02E-3005-9F6F-84163BFAF1AE path='/usr/lib/system/libsystem_containermanager.dylib'
 		          __TEXT [0x000000018d1e5000 - 0x000000018d20effc) slide = 0x2cec000
 		    __DATA_CONST [0x00000001d7175358 - 0x00000001d7175ef0) slide = 0x2cec000
 		    __AUTH_CONST [0x00000001dee086a0 - 0x00000001dee09f68) slide = 0x2cec000
 		          __AUTH [0x00000001daa0bd28 - 0x00000001daa0be90) slide = 0x2cec000
 		          __DATA [0x00000001d93deb10 - 0x00000001d93dee88) slide = 0x2cec000
 		      __LINKEDIT [0x000000023a91c000 - 0x0000000271f8c000) slide = 0x2cec000
 Adding new image at address=0x000000018f578000.
 address=0x000000018f578000 uuid=0ECFD7D1-0230-3C32-BDD7-4715D94A28E6 path='/usr/lib/system/libsystem_coreservices.dylib'
 		          __TEXT [0x000000018f578000 - 0x000000018f57dffc) slide = 0x2cec000
 		    __DATA_CONST [0x00000001d71a21c8 - 0x00000001d71a2a68) slide = 0x2cec000
 		    __AUTH_CONST [0x00000001df157000 - 0x00000001df1572e8) slide = 0x2cec000
 		          __DATA [0x00000001d9427960 - 0x00000001d9427a08) slide = 0x2cec000
 		      __LINKEDIT [0x000000023a91c000 - 0x0000000271f8c000) slide = 0x2cec000
 Adding new image at address=0x00000001864c5000.
 address=0x00000001864c5000 uuid=67509907-7BCE-3723-A305-0B042A41FDA5 path='/usr/lib/system/libsystem_darwin.dylib'
 		          __TEXT [0x00000001864c5000 - 0x00000001864cfff8) slide = 0x2cec000
 		    __DATA_CONST [0x00000001d710d958 - 0x00000001d71102d8) slide = 0x2cec000
 		    __AUTH_CONST [0x00000001de7f9260 - 0x00000001de7f96a8) slide = 0x2cec000
 		          __DATA [0x00000001d933af50 - 0x00000001d933af60) slide = 0x2cec000
 		    __DATA_DIRTY [0x00000001da414098 - 0x00000001da4140c8) slide = 0x2cec000
 		      __LINKEDIT [0x000000023a91c000 - 0x0000000271f8c000) slide = 0x2cec000
 Adding new image at address=0x00000002224e3000.
 address=0x00000002224e3000 uuid=F1E52C1A-7156-3BED-AD5B-1CE3AFFDFCE3 path='/usr/lib/system/libsystem_darwindirectory.dylib'
 		          __TEXT [0x00000002224e3000 - 0x00000002224e7000) slide = 0x2cec000
 		    __DATA_CONST [0x000000022ed74e28 - 0x000000022ed74fb0) slide = 0x2cec000
 		    __AUTH_CONST [0x0000000238335a50 - 0x0000000238335d90) slide = 0x2cec000
 		          __DATA [0x0000000232079378 - 0x00000002320793b8) slide = 0x2cec000
 		      __LINKEDIT [0x000000023a91c000 - 0x0000000271f8c000) slide = 0x2cec000
 Adding new image at address=0x000000018f936000.
 address=0x000000018f936000 uuid=82426BAB-A0A9-3C99-8A86-DABB3A0BA072 path='/usr/lib/system/libsystem_dnssd.dylib'
 		          __TEXT [0x000000018f936000 - 0x000000018f93f000) slide = 0x2cec000
 		    __DATA_CONST [0x00000001d71a5a78 - 0x00000001d71a5af0) slide = 0x2cec000
 		    __AUTH_CONST [0x00000001df1a92e8 - 0x00000001df1a94d0) slide = 0x2cec000
 		          __DATA [0x00000001d9432d30 - 0x00000001d9432d60) slide = 0x2cec000
 		      __LINKEDIT [0x000000023a91c000 - 0x0000000271f8c000) slide = 0x2cec000
 Adding new image at address=0x0000000182fb9000.
 address=0x0000000182fb9000 uuid=0C18273A-0DB8-3522-853B-67A2187EEF07 path='/usr/lib/system/libsystem_featureflags.dylib'
 		          __TEXT [0x0000000182fb9000 - 0x0000000182fbc000) slide = 0x2cec000
 		    __DATA_CONST [0x00000001d70f5100 - 0x00000001d70f5140) slide = 0x2cec000
 		    __AUTH_CONST [0x00000001de28dd70 - 0x00000001de28def0) slide = 0x2cec000
 		          __DATA [0x00000001d927abe8 - 0x00000001d927ac21) slide = 0x2cec000
 		    __DATA_DIRTY [0x00000001da3efae8 - 0x00000001da3efaf8) slide = 0x2cec000
 		      __LINKEDIT [0x000000023a91c000 - 0x0000000271f8c000) slide = 0x2cec000
 Adding new image at address=0x0000000183155000.
 address=0x0000000183155000 uuid=8F2A7530-B8D3-3705-B2B7-9347D9495223 path='/usr/lib/system/libsystem_info.dylib'
 		          __TEXT [0x0000000183155000 - 0x0000000183181ffc) slide = 0x2cec000
 		    __DATA_CONST [0x00000001d70f9f08 - 0x00000001d70fa468) slide = 0x2cec000
 		    __AUTH_CONST [0x00000001de295018 - 0x00000001de2961b0) slide = 0x2cec000
 		          __AUTH [0x00000001da8bc620 - 0x00000001da8bc7f0) slide = 0x2cec000
 		          __DATA [0x00000001d92940f8 - 0x00000001d9294c88) slide = 0x2cec000
 		    __DATA_DIRTY [0x00000001da3fd870 - 0x00000001da3fdb18) slide = 0x2cec000
 		      __LINKEDIT [0x000000023a91c000 - 0x0000000271f8c000) slide = 0x2cec000
 Adding new image at address=0x000000018f898000.
 address=0x000000018f898000 uuid=72899DE6-A120-389C-90DC-B94C392EF655 path='/usr/lib/system/libsystem_m.dylib'
 		          __TEXT [0x000000018f898000 - 0x000000018f8ceff4) slide = 0x2cec000
 		    __AUTH_CONST [0x00000001df1a73a0 - 0x00000001df1a73c0) slide = 0x2cec000
 		          __DATA [0x00000001d9430224 - 0x00000001d9430228) slide = 0x2cec000
 		      __LINKEDIT [0x000000023a91c000 - 0x0000000271f8c000) slide = 0x2cec000
 Adding new image at address=0x0000000182f3b000.
 address=0x0000000182f3b000 uuid=00379936-C90E-3D9D-A569-3F97338F1472 path='/usr/lib/system/libsystem_malloc.dylib'
 		          __TEXT [0x0000000182f3b000 - 0x0000000182f72000) slide = 0x2cec000
 		    __DATA_CONST [0x00000001d70f4f10 - 0x00000001d70f5100) slide = 0x2cec000
 		    __AUTH_CONST [0x00000001de279188 - 0x00000001de279a38) slide = 0x2cec000
 		          __AUTH [0x00000001da8b0000 - 0x00000001da8b8000) slide = 0x2cec000
 		          __DATA [0x00000001d92788f0 - 0x00000001d927abe4) slide = 0x2cec000
 		    __DATA_DIRTY [0x00000001da3ebea0 - 0x00000001da3ec0b0) slide = 0x2cec000
 		      __LINKEDIT [0x000000023a91c000 - 0x0000000271f8c000) slide = 0x2cec000
 Adding new image at address=0x0000000188756000.
 address=0x0000000188756000 uuid=9DBF57DB-0008-3584-89A3-1463AB9E4967 path='/usr/lib/system/libsystem_networkextension.dylib'
 		          __TEXT [0x0000000188756000 - 0x000000018876fff8) slide = 0x2cec000
 		    __DATA_CONST [0x00000001d711d218 - 0x00000001d711d898) slide = 0x2cec000
 		    __AUTH_CONST [0x00000001de915cb8 - 0x00000001de9168d8) slide = 0x2cec000
 		          __DATA [0x00000001d93606a8 - 0x00000001d9360d78) slide = 0x2cec000
 		    __DATA_DIRTY [0x00000001da44a560 - 0x00000001da44a5a0) slide = 0x2cec000
 		      __LINKEDIT [0x000000023a91c000 - 0x0000000271f8c000) slide = 0x2cec000
 Adding new image at address=0x0000000186937000.
 address=0x0000000186937000 uuid=7DA7113E-E87A-3E78-AD4F-77F6EC076E42 path='/usr/lib/system/libsystem_notify.dylib'
 		          __TEXT [0x0000000186937000 - 0x0000000186948000) slide = 0x2cec000
 		    __DATA_CONST [0x00000001d7110ff0 - 0x00000001d7111148) slide = 0x2cec000
 		    __AUTH_CONST [0x00000001de820ac0 - 0x00000001de820e40) slide = 0x2cec000
 		          __DATA [0x00000001d9343f80 - 0x00000001d9343fd1) slide = 0x2cec000
 		    __DATA_DIRTY [0x00000001da4171b8 - 0x00000001da4171c0) slide = 0x2cec000
 		      __LINKEDIT [0x000000023a91c000 - 0x0000000271f8c000) slide = 0x2cec000
 Adding new image at address=0x000000018e15a000.
 address=0x000000018e15a000 uuid=3BC895C5-B10E-39F4-B761-E79D5719FB1D path='/usr/lib/system/libsystem_sandbox.dylib'
 		          __TEXT [0x000000018e15a000 - 0x000000018e15fff4) slide = 0x2cec000
 		    __DATA_CONST [0x00000001d719c4a0 - 0x00000001d719c520) slide = 0x2cec000
 		    __AUTH_CONST [0x00000001defb7728 - 0x00000001defb7930) slide = 0x2cec000
 		          __DATA [0x00000001d94095e8 - 0x00000001d9409610) slide = 0x2cec000
 		      __LINKEDIT [0x000000023a91c000 - 0x0000000271f8c000) slide = 0x2cec000
 Adding new image at address=0x000000018f92f000.
 address=0x000000018f92f000 uuid=1C92CD80-54E6-3E70-BB3C-7264A160AD7C path='/usr/lib/system/libsystem_secinit.dylib'
 		          __TEXT [0x000000018f92f000 - 0x000000018f931ffc) slide = 0x2cec000
 		    __DATA_CONST [0x00000001d71a59e8 - 0x00000001d71a5a58) slide = 0x2cec000
 		    __AUTH_CONST [0x00000001df1a8e10 - 0x00000001df1a90e8) slide = 0x2cec000
 		          __DATA [0x00000001d9432cf0 - 0x00000001d9432d30) slide = 0x2cec000
 		      __LINKEDIT [0x000000023a91c000 - 0x0000000271f8c000) slide = 0x2cec000
 Adding new image at address=0x00000001830e1000.
 address=0x00000001830e1000 uuid=A7D3C07D-0A1E-3C4C-8FBA-66905E16BF99 path='/usr/lib/system/libsystem_kernel.dylib'
 		          __TEXT [0x00000001830e1000 - 0x000000018311bff0) slide = 0x2cec000
 		    __DATA_CONST [0x00000001d70f7790 - 0x00000001d70f9a70) slide = 0x2cec000
 		    __AUTH_CONST [0x00000001de293ee0 - 0x00000001de294000) slide = 0x2cec000
 		          __DATA [0x00000001d9283e18 - 0x00000001d9284090) slide = 0x2cec000
 		    __DATA_DIRTY [0x00000001da3f3988 - 0x00000001da3f405c) slide = 0x2cec000
 		      __LINKEDIT [0x000000023a91c000 - 0x0000000271f8c000) slide = 0x2cec000
 Adding new image at address=0x000000018314e000.
 address=0x000000018314e000 uuid=E7E2F10A-772A-397F-BD19-A7EA5A54E49F path='/usr/lib/system/libsystem_platform.dylib'
 		          __TEXT [0x000000018314e000 - 0x0000000183154ffc) slide = 0x2cec000
 		    __DATA_CONST [0x00000001d70f9ee8 - 0x00000001d70f9f08) slide = 0x2cec000
 		    __AUTH_CONST [0x00000001de294e08 - 0x00000001de295018) slide = 0x2cec000
 		          __DATA [0x00000001d92940b8 - 0x00000001d92940f8) slide = 0x2cec000
 		    __DATA_DIRTY [0x00000001da3fd858 - 0x00000001da3fd86c) slide = 0x2cec000
 		      __LINKEDIT [0x000000023a91c000 - 0x0000000271f8c000) slide = 0x2cec000
 Adding new image at address=0x000000018311c000.
 address=0x000000018311c000 uuid=E4DEBB6E-421D-33D0-9E17-77AE0E0FE4DC path='/usr/lib/system/libsystem_pthread.dylib'
 		          __TEXT [0x000000018311c000 - 0x0000000183128ff4) slide = 0x2cec000
 		    __DATA_CONST [0x00000001d70f9a70 - 0x00000001d70f9aa8) slide = 0x2cec000
 		    __AUTH_CONST [0x00000001de294000 - 0x00000001de294230) slide = 0x2cec000
 		          __DATA [0x00000001d9288000 - 0x00000001d9294046) slide = 0x2cec000
 		    __DATA_DIRTY [0x00000001da3f8000 - 0x00000001da3fd838) slide = 0x2cec000
 		      __LINKEDIT [0x000000023a91c000 - 0x0000000271f8c000) slide = 0x2cec000
 Adding new image at address=0x000000018a199000.
 address=0x000000018a199000 uuid=2D7D536C-1D08-304A-9E67-BFB1E99301FE path='/usr/lib/system/libsystem_symptoms.dylib'
 		          __TEXT [0x000000018a199000 - 0x000000018a1a1ff4) slide = 0x2cec000
 		    __DATA_CONST [0x00000001d7123ff0 - 0x00000001d71241a0) slide = 0x2cec000
 		    __AUTH_CONST [0x00000001dea5bf78 - 0x00000001dea5c240) slide = 0x2cec000
 		          __DATA [0x00000001d938f698 - 0x00000001d938f6d8) slide = 0x2cec000
 		    __DATA_DIRTY [0x00000001da4565d8 - 0x00000001da4565e8) slide = 0x2cec000
 		      __LINKEDIT [0x000000023a91c000 - 0x0000000271f8c000) slide = 0x2cec000
 Adding new image at address=0x0000000182e83000.
 address=0x0000000182e83000 uuid=4AF0EA7D-E9F4-30E7-914D-FB292EDB7F37 path='/usr/lib/system/libsystem_trace.dylib'
 		          __TEXT [0x0000000182e83000 - 0x0000000182e9e000) slide = 0x2cec000
 		    __DATA_CONST [0x00000001de275ef8 - 0x00000001de276808) slide = 0x2cec000
 		    __AUTH_CONST [0x00000001de276808 - 0x00000001de277680) slide = 0x2cec000
 		          __AUTH [0x00000001da8aca50 - 0x00000001da8acc08) slide = 0x2cec000
 		          __DATA [0x00000001d9270368 - 0x00000001d9270590) slide = 0x2cec000
 		    __DATA_DIRTY [0x00000001da3eb958 - 0x00000001da3ebdc8) slide = 0x2cec000
 		      __LINKEDIT [0x000000023a91c000 - 0x0000000271f8c000) slide = 0x2cec000
 Adding new image at address=0x000000018f909000.
 address=0x000000018f909000 uuid=FB2051CF-36B6-348F-B8DF-5B2F702F6290 path='/usr/lib/system/libunwind.dylib'
 		          __TEXT [0x000000018f909000 - 0x000000018f914000) slide = 0x2cec000
 		    __DATA_CONST [0x00000001d71a52a8 - 0x00000001d71a55c8) slide = 0x2cec000
 		    __AUTH_CONST [0x00000001df1a8388 - 0x00000001df1a8498) slide = 0x2cec000
 		          __DATA [0x00000001d94302b0 - 0x00000001d9430cb1) slide = 0x2cec000
 		      __LINKEDIT [0x000000023a91c000 - 0x0000000271f8c000) slide = 0x2cec000
 Adding new image at address=0x0000000182e3c000.
 address=0x0000000182e3c000 uuid=84971772-939B-3130-8908-B7A38851A516 path='/usr/lib/system/libxpc.dylib'
 		          __TEXT [0x0000000182e3c000 - 0x0000000182e83000) slide = 0x2cec000
 		    __DATA_CONST [0x00000001de26f8c0 - 0x00000001de275ef8) slide = 0x2cec000
 		          __DATA [0x00000001d926f5f8 - 0x00000001d9270368) slide = 0x2cec000
 		    __DATA_DIRTY [0x00000001da3eae18 - 0x00000001da3eb958) slide = 0x2cec000
 		      __LINKEDIT [0x000000023a91c000 - 0x0000000271f8c000) slide = 0x2cec000
 Adding new image at address=0x00000001830c9000.
 address=0x00000001830c9000 uuid=43940F08-B65E-3888-8CD3-C52398EB1CA1 path='/usr/lib/libc++abi.dylib'
 		          __TEXT [0x00000001830c9000 - 0x00000001830e1000) slide = 0x2cec000
 		    __DATA_CONST [0x00000001d70f7338 - 0x00000001d70f7790) slide = 0x2cec000
 		    __AUTH_CONST [0x00000001de290b80 - 0x00000001de293ee0) slide = 0x2cec000
 		          __AUTH [0x00000001da8bc578 - 0x00000001da8bc5d0) slide = 0x2cec000
 		          __DATA [0x00000001d9283ac0 - 0x00000001d9283e18) slide = 0x2cec000
 		    __DATA_DIRTY [0x00000001da3f3960 - 0x00000001da3f3988) slide = 0x2cec000
 		      __LINKEDIT [0x000000023a91c000 - 0x0000000271f8c000) slide = 0x2cec000
 Adding new image at address=0x0000000182d54000.
 address=0x0000000182d54000 uuid=1C0364B5-D7E3-3170-BAA6-9C28F400E7CC path='/usr/lib/libobjc.A.dylib'
 		          __TEXT [0x0000000182d54000 - 0x0000000182da2f09) slide = 0x2cec000
 		    __DATA_CONST [0x00000001de268000 - 0x00000001de268fb8) slide = 0x2cec000
 		    __AUTH_CONST [0x00000001de268fc0 - 0x00000001de269bd0) slide = 0x2cec000
 		          __AUTH [0x00000001da8a9e08 - 0x00000001da8a9e80) slide = 0x2cec000
 		          __DATA [0x00000001d926c000 - 0x00000001d926f5e0) slide = 0x2cec000
 		    __DATA_DIRTY [0x00000001da3e6280 - 0x00000001da3e9090) slide = 0x2cec000
 		       __OBJC_RO [0x00000001d2a5b360 - 0x00000001d70f3ff8) slide = 0x2cec000
 		       __OBJC_RW [0x00000001da1cc000 - 0x00000001da3e6260) slide = 0x2cec000
 		      __LINKEDIT [0x000000023a91c000 - 0x0000000271f8c000) slide = 0x2cec000
 Adding new image at address=0x000000018f914000.
 address=0x000000018f914000 uuid=5A83FBC3-0944-3D77-8DF2-03E262F67AFA path='/usr/lib/liboah.dylib'
 		          __TEXT [0x000000018f914000 - 0x000000018f91c000) slide = 0x2cec000
 		    __DATA_CONST [0x00000001d71a55c8 - 0x00000001d71a5600) slide = 0x2cec000
 		    __AUTH_CONST [0x00000001df1a8498 - 0x00000001df1a8800) slide = 0x2cec000
 		          __DATA [0x00000001d9430cb8 - 0x00000001d9431ce0) slide = 0x2cec000
 		      __LINKEDIT [0x000000023a91c000 - 0x0000000271f8c000) slide = 0x2cec000
 Adding new image at address=0x000000018303b000.
 address=0x000000018303b000 uuid=93FBD681-FC78-33A3-AFFE-568702676142 path='/usr/lib/libc++.1.dylib'
 		          __TEXT [0x000000018303b000 - 0x00000001830c8ff8) slide = 0x2cec000
 		    __DATA_CONST [0x00000001d70f69c8 - 0x00000001d70f7338) slide = 0x2cec000
 		    __AUTH_CONST [0x00000001de28e848 - 0x00000001de290b80) slide = 0x2cec000
 		          __AUTH [0x00000001da8ba0c0 - 0x00000001da8bc578) slide = 0x2cec000
 		          __DATA [0x00000001d927d000 - 0x00000001d9283ac0) slide = 0x2cec000
 		    __DATA_DIRTY [0x00000001da3f2680 - 0x00000001da3f3960) slide = 0x2cec000
 		      __LINKEDIT [0x000000023a91c000 - 0x0000000271f8c000) slide = 0x2cec000
 DynamicLoaderDarwin::ModulesDidLoad[0] F0A54B2D-8751-35F1-A3CF-F1A02F842211 (arm64e) "/usr/lib/libSystem.B.dylib"
 DynamicLoaderDarwin::ModulesDidLoad[1] C683623C-1FF6-3133-9E28-28672FDBA4D3 (arm64e) "/usr/lib/system/libcache.dylib"
 DynamicLoaderDarwin::ModulesDidLoad[2] BFDF8F55-D3DC-3A92-B8A1-8EF165A56F1B (arm64e) "/usr/lib/system/libcommonCrypto.dylib"
 DynamicLoaderDarwin::ModulesDidLoad[3] B29A99B2-7ADE-3371-A774-B690BEC3C406 (arm64e) "/usr/lib/system/libcompiler_rt.dylib"
 DynamicLoaderDarwin::ModulesDidLoad[4] 65612C42-C5E4-3821-B71D-DDE620FB014C (arm64e) "/usr/lib/system/libcopyfile.dylib"
 DynamicLoaderDarwin::ModulesDidLoad[5] B3AC12C0-8ED6-35A2-86C6-0BFA55BFF333 (arm64e) "/usr/lib/system/libcorecrypto.dylib"
 DynamicLoaderDarwin::ModulesDidLoad[6] 8790BA20-19EC-3A36-8975-E34382D9747C (arm64e) "/usr/lib/system/libdispatch.dylib"
 DynamicLoaderDarwin::ModulesDidLoad[7] 4BB77515-DBA8-3EDF-9AF7-3C9EAE959EA6 (arm64e) "/usr/lib/system/libdyld.dylib"
 DynamicLoaderDarwin::ModulesDidLoad[8] F7CE9486-FFF5-3CB8-B26F-75811EF4283A (arm64e) "/usr/lib/system/libkeymgr.dylib"
 DynamicLoaderDarwin::ModulesDidLoad[9] 1A7038EC-EE49-35AE-8A3C-C311083795FB (arm64e) "/usr/lib/system/libmacho.dylib"
 DynamicLoaderDarwin::ModulesDidLoad[10] 3011123B-C35C-35FC-AB0B-8D775C9109D1 (arm64e) "/usr/lib/system/libquarantine.dylib"
 DynamicLoaderDarwin::ModulesDidLoad[11] CE63E895-25E4-350C-BB79-0EFD3AC899E5 (arm64e) "/usr/lib/system/libremovefile.dylib"
 DynamicLoaderDarwin::ModulesDidLoad[12] 2EA1DA8E-A94D-32EA-A64F-DD586FE72599 (arm64e) "/usr/lib/system/libsystem_asl.dylib"
 DynamicLoaderDarwin::ModulesDidLoad[13] A81CDBDB-D1B1-386E-9029-2F6E0F685E3A (arm64e) "/usr/lib/system/libsystem_blocks.dylib"
 DynamicLoaderDarwin::ModulesDidLoad[14] 1B84A7E4-8958-330C-98B8-27D491DFF69E (arm64e) "/usr/lib/system/libsystem_c.dylib"
 DynamicLoaderDarwin::ModulesDidLoad[15] FA0C6F96-A737-3F29-B640-99E313873A21 (arm64e) "/usr/lib/system/libsystem_collections.dylib"
 DynamicLoaderDarwin::ModulesDidLoad[16] 5E85DB71-174E-3E61-A3C9-36D5E0CBBF46 (arm64e) "/usr/lib/system/libsystem_configuration.dylib"
 DynamicLoaderDarwin::ModulesDidLoad[17] 8E716F51-A02E-3005-9F6F-84163BFAF1AE (arm64e) "/usr/lib/system/libsystem_containermanager.dylib"
 DynamicLoaderDarwin::ModulesDidLoad[18] 0ECFD7D1-0230-3C32-BDD7-4715D94A28E6 (arm64e) "/usr/lib/system/libsystem_coreservices.dylib"
 DynamicLoaderDarwin::ModulesDidLoad[19] 67509907-7BCE-3723-A305-0B042A41FDA5 (arm64e) "/usr/lib/system/libsystem_darwin.dylib"
 DynamicLoaderDarwin::ModulesDidLoad[20] F1E52C1A-7156-3BED-AD5B-1CE3AFFDFCE3 (arm64e) "/usr/lib/system/libsystem_darwindirectory.dylib"
 DynamicLoaderDarwin::ModulesDidLoad[21] 82426BAB-A0A9-3C99-8A86-DABB3A0BA072 (arm64e) "/usr/lib/system/libsystem_dnssd.dylib"
 DynamicLoaderDarwin::ModulesDidLoad[22] 0C18273A-0DB8-3522-853B-67A2187EEF07 (arm64e) "/usr/lib/system/libsystem_featureflags.dylib"
 DynamicLoaderDarwin::ModulesDidLoad[23] 8F2A7530-B8D3-3705-B2B7-9347D9495223 (arm64e) "/usr/lib/system/libsystem_info.dylib"
 DynamicLoaderDarwin::ModulesDidLoad[24] 72899DE6-A120-389C-90DC-B94C392EF655 (arm64e) "/usr/lib/system/libsystem_m.dylib"
 DynamicLoaderDarwin::ModulesDidLoad[25] 00379936-C90E-3D9D-A569-3F97338F1472 (arm64e) "/usr/lib/system/libsystem_malloc.dylib"
 DynamicLoaderDarwin::ModulesDidLoad[26] 9DBF57DB-0008-3584-89A3-1463AB9E4967 (arm64e) "/usr/lib/system/libsystem_networkextension.dylib"
 DynamicLoaderDarwin::ModulesDidLoad[27] 7DA7113E-E87A-3E78-AD4F-77F6EC076E42 (arm64e) "/usr/lib/system/libsystem_notify.dylib"
 DynamicLoaderDarwin::ModulesDidLoad[28] 3BC895C5-B10E-39F4-B761-E79D5719FB1D (arm64e) "/usr/lib/system/libsystem_sandbox.dylib"
 DynamicLoaderDarwin::ModulesDidLoad[29] 1C92CD80-54E6-3E70-BB3C-7264A160AD7C (arm64e) "/usr/lib/system/libsystem_secinit.dylib"
 DynamicLoaderDarwin::ModulesDidLoad[30] A7D3C07D-0A1E-3C4C-8FBA-66905E16BF99 (arm64e) "/usr/lib/system/libsystem_kernel.dylib"
 DynamicLoaderDarwin::ModulesDidLoad[31] E7E2F10A-772A-397F-BD19-A7EA5A54E49F (arm64e) "/usr/lib/system/libsystem_platform.dylib"
 DynamicLoaderDarwin::ModulesDidLoad[32] E4DEBB6E-421D-33D0-9E17-77AE0E0FE4DC (arm64e) "/usr/lib/system/libsystem_pthread.dylib"
 DynamicLoaderDarwin::ModulesDidLoad[33] 2D7D536C-1D08-304A-9E67-BFB1E99301FE (arm64e) "/usr/lib/system/libsystem_symptoms.dylib"
 DynamicLoaderDarwin::ModulesDidLoad[34] 4AF0EA7D-E9F4-30E7-914D-FB292EDB7F37 (arm64e) "/usr/lib/system/libsystem_trace.dylib"
 DynamicLoaderDarwin::ModulesDidLoad[35] FB2051CF-36B6-348F-B8DF-5B2F702F6290 (arm64e) "/usr/lib/system/libunwind.dylib"
 DynamicLoaderDarwin::ModulesDidLoad[36] 84971772-939B-3130-8908-B7A38851A516 (arm64e) "/usr/lib/system/libxpc.dylib"
 DynamicLoaderDarwin::ModulesDidLoad[37] 43940F08-B65E-3888-8CD3-C52398EB1CA1 (arm64e) "/usr/lib/libc++abi.dylib"
 DynamicLoaderDarwin::ModulesDidLoad[38] 1C0364B5-D7E3-3170-BAA6-9C28F400E7CC (arm64e) "/usr/lib/libobjc.A.dylib"
 DynamicLoaderDarwin::ModulesDidLoad[39] 5A83FBC3-0944-3D77-8DF2-03E262F67AFA (arm64e) "/usr/lib/liboah.dylib"
 DynamicLoaderDarwin::ModulesDidLoad[40] 93FBD681-FC78-33A3-AFFE-568702676142 (arm64e) "/usr/lib/libc++.1.dylib"
 Breakpoint::ModulesChanged: num_modules: 41 load: 1 delete_locations: 0

 Breakpoint::ModulesChanged: num_modules: 41 load: 1 delete_locations: 0

 Breakpoint::ModulesChanged: num_modules: 41 load: 1 delete_locations: 0

 Breakpoint::ModulesChanged: num_modules: 41 load: 1 delete_locations: 0

 Hit breakpoint location: -3.1: 
  module = /usr/lib/dyld
  symbol = _dyld_debugger_notification
  address = 0x0000000182da4e20
  resolved = true
  hardware = false
  hit count = 2   
, continuing.

 StopInfo::ShouldStop async callback says we should not stop, returning ShouldStop of false.
 ThreadList::ShouldStop overall should_stop = 0
 ThreadList::ShouldReportStop 1 threads
 Thread::ShouldReportStop() tid = 0x53b2: returning vote 0 for current plan
 Returning no opinion
 Process::ShouldBroadcastEvent: should_resume: 1 state: stopped was_restarted: 0 report_stop_vote: 0.
 Process::ShouldBroadcastEvent (0x10172b880) Restarting process from state: stopped
 Process::PrivateResume() m_stop_id = 6, public state: running private state: stopped
 Thread::PushPlan(0x0x1217fae98): "Single stepping past breakpoint site 9 at 0x182da4e20", tid = 0x53b2.
 WillResume Thread #1 (0x0x1217fae98): tid = 0x53b2, pc = 0x182da4e20, sp = 0x16fdfd8d0, fp = 0x16fdfdac0, plan = 'Step over breakpoint trap', state = stepping, stop others = 1
 GDBRemoteCommunicationClient::SendGDBStoppointTypePacket() remove at addr = 0x182da4e20
 (plugin = gdb-remote, state = running)
 Process thinks the process has resumed.
 Process::ShouldBroadcastEvent (0x10172b880) => new state: stopped, last broadcast state: running - NO
 Process::HandlePrivateEvent (pid = 2000) suppressing state stopped (old state running): should_broadcast == false
 timeout = <infinite>, event_sp)...
 Process::ShouldBroadcastEvent (0x10172bd50) => new state: running, last broadcast state: running - NO
 Process::HandlePrivateEvent (pid = 2000) suppressing state running (old state running): should_broadcast == false
 timeout = <infinite>, event_sp)...
 (plugin = gdb-remote, state = stopped)
 (plugin = gdb-remote, state = stopped, stop_id = 7
 0x1217fae98: tid = 0x53b2: stop info = <NULL> (stop_id = 7)
 0x1217fae98: tid = 0x53b2: stop info = trace (stop_id = 7)
 
 ThreadList::ShouldStop: 1 threads, 1 unsuspended threads
 Thread::ShouldStop(0x1217fae98) for tid = 0x53b2 0x53b2, pc = 0x0000000182dedac8
 ^^^^^^^^ Thread::ShouldStop Begin ^^^^^^^^
 Plan stack initial state:
  thread #1: tid = 0x53b2:
    Active plan stack:
      Element 0: Base thread plan.
      Element 1: Single stepping past breakpoint site 9 at 0x182da4e20

 Step over breakpoint stopped for reason: trace.
 Plan Step over breakpoint trap should stop: 0.
 Completed step over breakpoint plan.
 GDBRemoteCommunicationClient::SendGDBStoppointTypePacket() add at addr = 0x182da4e20
 Plan Step over breakpoint trap auto-continue: true.
 Popping plan: "Step over breakpoint trap", tid = 0x53b2.
 Plan stack final state:
  thread #1: tid = 0x53b2:
    Active plan stack:
      Element 0: Base thread plan.
    Completed plan stack:
      Element 0: Single stepping past breakpoint site 9 at 0x182da4e20

 vvvvvvvv Thread::ShouldStop End (returning 0) vvvvvvvv
 ThreadList::ShouldStop overall should_stop = 0
 ThreadList::ShouldReportStop 1 threads
 Thread::ShouldReportStop() tid = 0x53b2: returning vote for complete stack's back plan
 Returning vote: no
 Returning no
 Process::ShouldBroadcastEvent: should_resume: 1 state: stopped was_restarted: 0 report_stop_vote: -1.
 Process::ShouldBroadcastEvent (0x101e31de0) Restarting process from state: stopped
 Process::PrivateResume() m_stop_id = 7, public state: running private state: stopped
 WillResume Thread #1 (0x0x1217fae98): tid = 0x53b2, pc = 0x182dedac8, sp = 0x16fdfd8d0, fp = 0x16fdfdac0, plan = 'base plan', state = running, stop others = 0
 (plugin = gdb-remote, state = running)
 Process thinks the process has resumed.
 Process::ShouldBroadcastEvent (0x101e31de0) => new state: stopped, last broadcast state: running - NO
 Process::HandlePrivateEvent (pid = 2000) suppressing state stopped (old state running): should_broadcast == false
 timeout = <infinite>, event_sp)...
 Process::ShouldBroadcastEvent (0x121633950) => new state: running, last broadcast state: running - NO
 Process::HandlePrivateEvent (pid = 2000) suppressing state running (old state running): should_broadcast == false
 timeout = <infinite>, event_sp)...
 (plugin = gdb-remote, state = stopped)
 (plugin = gdb-remote, state = stopped, stop_id = 8
 0x1217fae98: tid = 0x53b2: stop info = <NULL> (stop_id = 8)
 0x1217fae98: tid = 0x53b2: stop info = breakpoint 3.1 (stop_id = 8)
 
 ThreadList::ShouldStop: 1 threads, 1 unsuspended threads
 Thread::ShouldStop(0x1217fae98) for tid = 0x53b2 0x53b2, pc = 0x0000000100003e70
 ^^^^^^^^ Thread::ShouldStop Begin ^^^^^^^^
 Plan stack initial state:
  thread #1: tid = 0x53b2:
    Active plan stack:
      Element 0: Base thread plan.

 Hit breakpoint location: 3.1: 
  module = /Users/shafinazahsan/github-classroom/FPC-advanced/fpc-advanced-classroom-1st-year-assignment-ShafinazAhsan/set01/problem08
  compile unit = problem08.c
  function = main
  location = /Users/shafinazahsan/github-classroom/FPC-advanced/fpc-advanced-classroom-1st-year-assignment-ShafinazAhsan/set01/problem08.c:31:7
  address = 0x0000000100003e70
  resolved = true
  hardware = false
  hit count = 1   
, stopping.

 Base plan discarding thread plans for thread tid = 0x53b2 (breakpoint hit.)
 Discarding thread plans for thread (tid = 0x53b2, force 0)
 Base plan says should stop: 1.
 Plan stack final state:
  thread #1: tid = 0x53b2:
    Active plan stack:
      Element 0: Base thread plan.

 vvvvvvvv Thread::ShouldStop End (returning 1) vvvvvvvv
 ThreadList::ShouldStop overall should_stop = 1
 Process::ShouldBroadcastEvent (0x121633950) => new state: stopped, last broadcast state: stopped - YES
 Process::HandlePrivateEvent (pid = 2000) broadcasting new state stopped (old state stopped) to public
 timeout = <infinite>, event_sp)...
 (plugin = gdb-remote, state = stopped, restarted = 0)
 (plugin = gdb-remote, state = stopped) -- unlocking run lock
 Process::PerformAction returning from action with m_should_stop: 1.
 Frame #0 not recognized
 Processing command: n
 HandleCommand, cmd_obj : 'thread step-over'
 HandleCommand, (revised) command_string: 'thread step-over'
 HandleCommand, wants_raw_input:'False'
 HandleCommand, command line after removing command name(s): ''
 SynthesizeTailCallFrames: can't find next function
 Thread::PushPlan(0x0x1217fae98): "Stepping over line problem08.c:31:7.", tid = 0x53b2.
 (plugin = gdb-remote) -- locking run lock
 Process::PrivateResume() m_stop_id = 8, public state: stopped private state: stopped
 Thread::PushPlan(0x0x1217fae98): "Single stepping past breakpoint site 8 at 0x100003e70", tid = 0x53b2.
 WillResume Thread #1 (0x0x1217fae98): tid = 0x53b2, pc = 0x100003e70, sp = 0x16fdfed30, fp = 0x16fdfed70, plan = 'Step over breakpoint trap', state = stepping, stop others = 1
 GDBRemoteCommunicationClient::SendGDBStoppointTypePacket() remove at addr = 0x100003e70
 (plugin = gdb-remote, state = running)
 Current Plan for thread 1(0x1217fae98) (0x53b2, stepping): Step over breakpoint trap being asked whether we should report run.
 Process::ShouldBroadcastEvent (0x103d05cd0) => new state: running, last broadcast state: running - YES
 Process thinks the process has resumed.
 Process::HandlePrivateEvent (pid = 2000) broadcasting new state running (old state running) to public
 Process::PushProcessIOHandler pushing IO handler
 Process::HandlePrivateEvent updated m_iohandler_sync to 2
 waited from m_iohandler_sync to change from 1. New value is 2.
 timeout = <infinite>, event_sp)...
 HandleCommand, command succeeded
 (plugin = gdb-remote, state = running, restarted = 0)
 (plugin = gdb-remote, state = stopped)
 (plugin = gdb-remote, state = stopped, stop_id = 9
 0x1217fae98: tid = 0x53b2: stop info = <NULL> (stop_id = 9)
 0x1217fae98: tid = 0x53b2: stop info = trace (stop_id = 9)
 
 ThreadList::ShouldStop: 1 threads, 1 unsuspended threads
 Thread::ShouldStop(0x1217fae98) for tid = 0x53b2 0x53b2, pc = 0x0000000100003c58
 ^^^^^^^^ Thread::ShouldStop Begin ^^^^^^^^
 Plan stack initial state:
  thread #1: tid = 0x53b2:
    Active plan stack:
      Element 0: Base thread plan.
      Element 1: Stepping over line problem08.c:31:7 using ranges: [0x0000000100003e70-0x0000000100003e78).
      Element 2: Single stepping past breakpoint site 8 at 0x100003e70

 Step over breakpoint stopped for reason: trace.
 Plan Step over breakpoint trap should stop: 1.
 Completed step over breakpoint plan.
 GDBRemoteCommunicationClient::SendGDBStoppointTypePacket() add at addr = 0x100003e70
 Popping plan: "Step over breakpoint trap", tid = 0x53b2.
 ThreadPlanStepOverRange reached 0x0000000100003c58.
 Finding frames between main and input_array_size, retn-pc=0x100003e74
 GetCallEdges: Attempting to parse call site info for main
 No call edge outgoing from main with retn-PC == 0x100003e74
 Target::AddBreakpoint (internal = yes) => break_id = -4: address = problem08[0x0000000100003e74]


 GDBRemoteCommunicationClient::SendGDBStoppointTypePacket() add at addr = 0x100003e74
 Thread::PushPlan(0x0x1217fae98): "Stepping out from problem08`input_array_size at problem08.c:3 returning to frame at problem08`main + 36 at problem08.c:31:6", tid = 0x53b2.
 Plan Step range stepping over should stop: 0.
 Plan stack final state:
  thread #1: tid = 0x53b2:
    Active plan stack:
      Element 0: Base thread plan.
      Element 1: Stepping over line problem08.c:31:7 using ranges: [0x0000000100003e70-0x0000000100003e78).
      Element 2: Stepping out from problem08`input_array_size at problem08.c:3 returning to frame at problem08`main + 36 at problem08.c:31:6 using breakpoint site -4
    Completed plan stack:
      Element 0: Single stepping past breakpoint site 8 at 0x100003e70

 vvvvvvvv Thread::ShouldStop End (returning 0) vvvvvvvv
 ThreadList::ShouldStop overall should_stop = 0
 ThreadList::ShouldReportStop 1 threads
 Thread::ShouldReportStop() tid = 0x53b2: returning vote for complete stack's back plan
 Returning vote: no
 Returning no
 Process::ShouldBroadcastEvent: should_resume: 1 state: stopped was_restarted: 0 report_stop_vote: -1.
 Process::ShouldBroadcastEvent (0x103d05cd0) Restarting process from state: stopped
 Process::PrivateResume() m_stop_id = 9, public state: running private state: stopped
 WillResume Thread #1 (0x0x1217fae98): tid = 0x53b2, pc = 0x100003c58, sp = 0x16fdfed30, fp = 0x16fdfed70, plan = 'Step out', state = running, stop others = 0
 (plugin = gdb-remote, state = running)
 Process thinks the process has resumed.
 Process::ShouldBroadcastEvent (0x103d05cd0) => new state: stopped, last broadcast state: running - NO
 Process::HandlePrivateEvent (pid = 2000) suppressing state stopped (old state running): should_broadcast == false
 timeout = <infinite>, event_sp)...
 Process::ShouldBroadcastEvent (0x101f06be0) => new state: running, last broadcast state: running - NO
 Process::HandlePrivateEvent (pid = 2000) suppressing state running (old state running): should_broadcast == false
 timeout = <infinite>, event_sp)...
 Process::GetSTDOUT (buf = 0x16fe868a0, size = 1024)
 Process::GetSTDOUT (buf = 0x16fe868a0, size = 1024)
 Process::GetSTDOUT (buf = 0x16fe868a0, size = 1024)
 (plugin = gdb-remote, state = stopped)
 (plugin = gdb-remote, state = stopped, stop_id = 10
 0x1217fae98: tid = 0x53b2: stop info = <NULL> (stop_id = 10)
 0x1217fae98: tid = 0x53b2: stop info = step-out (stop_id = 10)
 
 ThreadList::ShouldStop: 1 threads, 1 unsuspended threads
 Thread::ShouldStop(0x1217fae98) for tid = 0x53b2 0x53b2, pc = 0x0000000100003e74
 ^^^^^^^^ Thread::ShouldStop Begin ^^^^^^^^
 Plan stack initial state:
  thread #1: tid = 0x53b2:
    Active plan stack:
      Element 0: Base thread plan.
      Element 1: Stepping over line problem08.c:31:7 using ranges: [0x0000000100003e70-0x0000000100003e78).
      Element 2: Stepping out from problem08`input_array_size at problem08.c:3 returning to frame at problem08`main + 36 at problem08.c:31:6 using breakpoint site -4

 Hit breakpoint location: -4.1: 
  module = /Users/shafinazahsan/github-classroom/FPC-advanced/fpc-advanced-classroom-1st-year-assignment-ShafinazAhsan/set01/problem08
  compile unit = problem08.c
  function = main
  location = /Users/shafinazahsan/github-classroom/FPC-advanced/fpc-advanced-classroom-1st-year-assignment-ShafinazAhsan/set01/problem08.c:31:6
  address = 0x0000000100003e74
  resolved = true
  hardware = false
  hit count = 1   
, stopping.

 Plan Step out should stop: 1.
 Completed step out plan.
 Target::RemoveBreakpointByID (break_id = -4, internal = yes)

 Target::DisableBreakpointByID (break_id = -4, internal = yes)

 GDBRemoteCommunicationClient::SendGDBStoppointTypePacket() remove at addr = 0x100003e74
 Popping plan: "Step out", tid = 0x53b2.
 ThreadPlanStepOverRange reached 0x0000000100003e74.
 Plan Step range stepping over should stop: 0.
 Plan stack final state:
  thread #1: tid = 0x53b2:
    Active plan stack:
      Element 0: Base thread plan.
      Element 1: Stepping over line problem08.c:31:7 using ranges: [0x0000000100003e70-0x0000000100003e78).
    Completed plan stack:
      Element 0: Stepping out from problem08`input_array_size at problem08.c:3 returning to frame at problem08`main + 36 at problem08.c:31:6 using breakpoint site 0

 vvvvvvvv Thread::ShouldStop End (returning 0) vvvvvvvv
 ThreadList::ShouldStop overall should_stop = 0
 ThreadList::ShouldReportStop 1 threads
 Thread::ShouldReportStop() tid = 0x53b2: returning vote for complete stack's back plan
 Returning vote: no
 Returning no
 Process::ShouldBroadcastEvent: should_resume: 1 state: stopped was_restarted: 0 report_stop_vote: -1.
 Process::ShouldBroadcastEvent (0x101f06be0) Restarting process from state: stopped
 Process::PrivateResume() m_stop_id = 10, public state: running private state: stopped
 Target::AddBreakpoint (internal = yes) => break_id = -5: names = {'start_wqthread', '_pthread_wqthread', '_pthread_start'}, modules(2) = libsystem_c.dylib, libSystem.B.dylib


 WillResume Thread #1 (0x0x1217fae98): tid = 0x53b2, pc = 0x100003e74, sp = 0x16fdfed30, fp = 0x16fdfed70, plan = 'Step range stepping over', state = stepping, stop others = 1
 (plugin = gdb-remote, state = running)
 Process thinks the process has resumed.
 Process::ShouldBroadcastEvent (0x101f06be0) => new state: stopped, last broadcast state: running - NO
 Process::HandlePrivateEvent (pid = 2000) suppressing state stopped (old state running): should_broadcast == false
 timeout = <infinite>, event_sp)...
 Process::ShouldBroadcastEvent (0x103c12150) => new state: running, last broadcast state: running - NO
 Process::HandlePrivateEvent (pid = 2000) suppressing state running (old state running): should_broadcast == false
 timeout = <infinite>, event_sp)...
 (plugin = gdb-remote, state = stopped)
 (plugin = gdb-remote, state = stopped, stop_id = 11
 0x1217fae98: tid = 0x53b2: stop info = <NULL> (stop_id = 11)
 0x1217fae98: tid = 0x53b2: stop info = trace (stop_id = 11)
 
 ThreadList::ShouldStop: 1 threads, 1 unsuspended threads
 Thread::ShouldStop(0x1217fae98) for tid = 0x53b2 0x53b2, pc = 0x0000000100003e78
 ^^^^^^^^ Thread::ShouldStop Begin ^^^^^^^^
 Plan stack initial state:
  thread #1: tid = 0x53b2:
    Active plan stack:
      Element 0: Base thread plan.
      Element 1: Stepping over line problem08.c:31:7 using ranges: [0x0000000100003e70-0x0000000100003e78).

 ThreadPlanStepOverRange reached 0x0000000100003e78.
 Step range plan out of range to 0x100003e78
 ShouldStopHere callback returned 1 from 0x100003e78.
 Plan Step range stepping over should stop: 1.
 Completed step through range plan.
 Popping plan: "Step range stepping over", tid = 0x53b2.
 Plan stack final state:
  thread #1: tid = 0x53b2:
    Active plan stack:
      Element 0: Base thread plan.
    Completed plan stack:
      Element 0: Stepping over line problem08.c:31:7 using ranges: [0x0000000100003e70-0x0000000100003e78).

 vvvvvvvv Thread::ShouldStop End (returning 1) vvvvvvvv
 ThreadList::ShouldStop overall should_stop = 1
 Process::ShouldBroadcastEvent (0x103d06d00) => new state: stopped, last broadcast state: stopped - YES
 Process::HandlePrivateEvent (pid = 2000) broadcasting new state stopped (old state stopped) to public
 timeout = <infinite>, event_sp)...
 (plugin = gdb-remote, state = stopped, restarted = 0)
 (plugin = gdb-remote, state = stopped) -- unlocking run lock
 ThreadPlanStepOverRange reached 0x0000000100003e78.
 Step range plan out of range to 0x100003e78
 ShouldStopHere callback returned 1 from 0x100003e78.
 Frame #0 not recognized
 Processing command: n
 HandleCommand, cmd_obj : 'thread step-over'
 HandleCommand, (revised) command_string: 'thread step-over'
 HandleCommand, wants_raw_input:'False'
 HandleCommand, command line after removing command name(s): ''
 SynthesizeTailCallFrames: can't find next function
 Thread::PushPlan(0x0x1217fae98): "Stepping over line problem08.c:32:11.", tid = 0x53b2.
 Target::AddBreakpoint (internal = yes) => break_id = -6: address = problem08[0x0000000100003eb8]


 GDBRemoteCommunicationClient::SendGDBStoppointTypePacket() add at addr = 0x100003eb8
 ThreadPlanStepRange::SetNextBranchBreakpoint - Setting breakpoint -6 (site 11) to run to address 0x100003eb8
 (plugin = gdb-remote) -- locking run lock
 Process::PrivateResume() m_stop_id = 11, public state: stopped private state: stopped
 WillResume Thread #1 (0x0x1217fae98): tid = 0x53b2, pc = 0x100003e78, sp = 0x16fdfed30, fp = 0x16fdfed70, plan = 'Step range stepping over', state = running, stop others = 0
 (plugin = gdb-remote, state = running)
 Current Plan for thread 1(0x1217fae98) (0x53b2, running): Step range stepping over being asked whether we should report run.
 Process::ShouldBroadcastEvent (0x103c11420) => new state: running, last broadcast state: running - YES
 Process thinks the process has resumed.
 Process::HandlePrivateEvent (pid = 2000) broadcasting new state running (old state running) to public
 Process::PushProcessIOHandler pushing IO handler
 Process::HandlePrivateEvent updated m_iohandler_sync to 3
 waited from m_iohandler_sync to change from 2. New value is 3.
 (plugin = gdb-remote, state = running, restarted = 0)
 HandleCommand, command succeeded
 timeout = <infinite>, event_sp)...
 (plugin = gdb-remote, state = stopped)
 (plugin = gdb-remote, state = stopped, stop_id = 12
 0x1217fae98: tid = 0x53b2: stop info = <NULL> (stop_id = 12)
 0x1217fae98: tid = 0x53b2: stop info = EXC_BAD_ACCESS (code=2, address=0x16f603ff8) (stop_id = 12)
 
 ThreadList::ShouldStop: 1 threads, 1 unsuspended threads
 Thread::ShouldStop(0x1217fae98) for tid = 0x53b2 0x53b2, pc = 0x000000018311de7c
 ^^^^^^^^ Thread::ShouldStop Begin ^^^^^^^^
 Plan stack initial state:
  thread #1: tid = 0x53b2:
    Active plan stack:
      Element 0: Base thread plan.
      Element 1: Stepping over line problem08.c:32:11 using ranges: [0x0000000100003e78-0x0000000100003eb8).

 ThreadPlanStepRange got asked if it explains the stop for some reason other than step.
 Plan base plan explains stop.
 Base plan discarding thread plans for thread tid = 0x53b2 (exception: EXC_BAD_ACCESS (code=2, address=0x16f603ff8))
 Discarding thread plans for thread (tid = 0x53b2, force 0)
 Plan stack final state:
  thread #1: tid = 0x53b2:
    Active plan stack:
      Element 0: Base thread plan.
      Element 1: Stepping over line problem08.c:32:11 using ranges: [0x0000000100003e78-0x0000000100003eb8).

 vvvvvvvv Thread::ShouldStop End (returning 1) vvvvvvvv
 ThreadList::ShouldStop overall should_stop = 1
 Process::ShouldBroadcastEvent (0x103c0e1f0) => new state: stopped, last broadcast state: stopped - YES
 Process::HandlePrivateEvent (pid = 2000) broadcasting new state stopped (old state stopped) to public
 timeout = <infinite>, event_sp)...
 (plugin = gdb-remote, state = stopped, restarted = 0)
 (plugin = gdb-remote, state = stopped) -- unlocking run lock
 Frame #0 not recognized
 Processing command: n
 HandleCommand, cmd_obj : 'thread step-over'
 HandleCommand, (revised) command_string: 'thread step-over'
 HandleCommand, wants_raw_input:'False'
 HandleCommand, command line after removing command name(s): ''
 SynthesizeTailCallFrames: can't find previous function
 Thread::PushPlan(0x0x1217fae98): "Stepping one instruction past 0x000000018311de7c stepping over calls", tid = 0x53b2.
 (plugin = gdb-remote) -- locking run lock
 Process::PrivateResume() m_stop_id = 12, public state: stopped private state: stopped
 WillResume Thread #1 (0x0x1217fae98): tid = 0x53b2, pc = 0x18311de7c, sp = 0x16fdfed30, fp = 0x16fdfed70, plan = 'Step over single instruction', state = stepping, stop others = 1
 (plugin = gdb-remote, state = running)
 Current Plan for thread 1(0x1217fae98) (0x53b2, stepping): Step over single instruction being asked whether we should report run.
 Process::ShouldBroadcastEvent (0x103c11420) => new state: running, last broadcast state: running - YES
 Process thinks the process has resumed.
 Process::HandlePrivateEvent (pid = 2000) broadcasting new state running (old state running) to public
 Process::PushProcessIOHandler pushing IO handler
 Process::HandlePrivateEvent updated m_iohandler_sync to 4
 waited from m_iohandler_sync to change from 3. New value is 4.
 (plugin = gdb-remote, state = running, restarted = 0)
 HandleCommand, command succeeded
 timeout = <infinite>, event_sp)...
 (plugin = gdb-remote, state = stopped)
 (plugin = gdb-remote, state = stopped, stop_id = 13
 0x1217fae98: tid = 0x53b2: stop info = <NULL> (stop_id = 13)
 0x1217fae98: tid = 0x53b2: stop info = EXC_BAD_ACCESS (code=2, address=0x16f603ff8) (stop_id = 13)
 
 ThreadList::ShouldStop: 1 threads, 1 unsuspended threads
 Thread::ShouldStop(0x1217fae98) for tid = 0x53b2 0x53b2, pc = 0x000000018311de7c
 ^^^^^^^^ Thread::ShouldStop Begin ^^^^^^^^
 Plan stack initial state:
  thread #1: tid = 0x53b2:
    Active plan stack:
      Element 0: Base thread plan.
      Element 1: Stepping over line problem08.c:32:11 using ranges: [0x0000000100003e78-0x0000000100003eb8).
      Element 2: Stepping one instruction past 0x000000018311de7c stepping over calls

 ThreadPlanStepRange got asked if it explains the stop for some reason other than step.
 Plan base plan explains stop.
 Base plan discarding thread plans for thread tid = 0x53b2 (exception: EXC_BAD_ACCESS (code=2, address=0x16f603ff8))
 Discarding thread plans for thread (tid = 0x53b2, force 0)
 Plan stack final state:
  thread #1: tid = 0x53b2:
    Active plan stack:
      Element 0: Base thread plan.
      Element 1: Stepping over line problem08.c:32:11 using ranges: [0x0000000100003e78-0x0000000100003eb8).
      Element 2: Stepping one instruction past 0x000000018311de7c stepping over calls

 vvvvvvvv Thread::ShouldStop End (returning 1) vvvvvvvv
 ThreadList::ShouldStop overall should_stop = 1
 Process::ShouldBroadcastEvent (0x103c11420) => new state: stopped, last broadcast state: stopped - YES
 Process::HandlePrivateEvent (pid = 2000) broadcasting new state stopped (old state stopped) to public
 timeout = <infinite>, event_sp)...
 (plugin = gdb-remote, state = stopped, restarted = 0)
 (plugin = gdb-remote, state = stopped) -- unlocking run lock
 Frame #0 not recognized
 Processing command: n
 HandleCommand, cmd_obj : 'thread step-over'
 HandleCommand, (revised) command_string: 'thread step-over'
 HandleCommand, wants_raw_input:'False'
 HandleCommand, command line after removing command name(s): ''
 SynthesizeTailCallFrames: can't find previous function
 Thread::PushPlan(0x0x1217fae98): "Stepping one instruction past 0x000000018311de7c stepping over calls", tid = 0x53b2.
 (plugin = gdb-remote) -- locking run lock
 Process::PrivateResume() m_stop_id = 13, public state: stopped private state: stopped
 WillResume Thread #1 (0x0x1217fae98): tid = 0x53b2, pc = 0x18311de7c, sp = 0x16fdfed30, fp = 0x16fdfed70, plan = 'Step over single instruction', state = stepping, stop others = 1
 (plugin = gdb-remote, state = running)
 Current Plan for thread 1(0x1217fae98) (0x53b2, stepping): Step over single instruction being asked whether we should report run.
 Process::ShouldBroadcastEvent (0x103c13f30) => new state: running, last broadcast state: running - YES
 Process thinks the process has resumed.
 Process::HandlePrivateEvent (pid = 2000) broadcasting new state running (old state running) to public
 Process::PushProcessIOHandler pushing IO handler
 Process::HandlePrivateEvent updated m_iohandler_sync to 5
 waited from m_iohandler_sync to change from 4. New value is 5.
 HandleCommand, command succeeded
 timeout = <infinite>, event_sp)...
 (plugin = gdb-remote, state = running, restarted = 0)
 (plugin = gdb-remote, state = stopped)
 (plugin = gdb-remote, state = stopped, stop_id = 14
 0x1217fae98: tid = 0x53b2: stop info = <NULL> (stop_id = 14)
 0x1217fae98: tid = 0x53b2: stop info = EXC_BAD_ACCESS (code=2, address=0x16f603ff8) (stop_id = 14)
 
 ThreadList::ShouldStop: 1 threads, 1 unsuspended threads
 Thread::ShouldStop(0x1217fae98) for tid = 0x53b2 0x53b2, pc = 0x000000018311de7c
 ^^^^^^^^ Thread::ShouldStop Begin ^^^^^^^^
 Plan stack initial state:
  thread #1: tid = 0x53b2:
    Active plan stack:
      Element 0: Base thread plan.
      Element 1: Stepping over line problem08.c:32:11 using ranges: [0x0000000100003e78-0x0000000100003eb8).
      Element 2: Stepping one instruction past 0x000000018311de7c stepping over calls
      Element 3: Stepping one instruction past 0x000000018311de7c stepping over calls

 ThreadPlanStepRange got asked if it explains the stop for some reason other than step.
 Plan base plan explains stop.
 Base plan discarding thread plans for thread tid = 0x53b2 (exception: EXC_BAD_ACCESS (code=2, address=0x16f603ff8))
 Discarding thread plans for thread (tid = 0x53b2, force 0)
 Plan stack final state:
  thread #1: tid = 0x53b2:
    Active plan stack:
      Element 0: Base thread plan.
      Element 1: Stepping over line problem08.c:32:11 using ranges: [0x0000000100003e78-0x0000000100003eb8).
      Element 2: Stepping one instruction past 0x000000018311de7c stepping over calls
      Element 3: Stepping one instruction past 0x000000018311de7c stepping over calls

 vvvvvvvv Thread::ShouldStop End (returning 1) vvvvvvvv
 ThreadList::ShouldStop overall should_stop = 1
 Process::ShouldBroadcastEvent (0x103d09440) => new state: stopped, last broadcast state: stopped - YES
 Process::HandlePrivateEvent (pid = 2000) broadcasting new state stopped (old state stopped) to public
 timeout = <infinite>, event_sp)...
 (plugin = gdb-remote, state = stopped, restarted = 0)
 (plugin = gdb-remote, state = stopped) -- unlocking run lock
 Frame #0 not recognized
 Processing command: n
 HandleCommand, cmd_obj : 'thread step-over'
 HandleCommand, (revised) command_string: 'thread step-over'
 HandleCommand, wants_raw_input:'False'
 HandleCommand, command line after removing command name(s): ''
 SynthesizeTailCallFrames: can't find previous function
 Thread::PushPlan(0x0x1217fae98): "Stepping one instruction past 0x000000018311de7c stepping over calls", tid = 0x53b2.
 (plugin = gdb-remote) -- locking run lock
 Process::PrivateResume() m_stop_id = 14, public state: stopped private state: stopped
 WillResume Thread #1 (0x0x1217fae98): tid = 0x53b2, pc = 0x18311de7c, sp = 0x16fdfed30, fp = 0x16fdfed70, plan = 'Step over single instruction', state = stepping, stop others = 1
 (plugin = gdb-remote, state = running)
 Current Plan for thread 1(0x1217fae98) (0x53b2, stepping): Step over single instruction being asked whether we should report run.
 Process::ShouldBroadcastEvent (0x103d079c0) => new state: running, last broadcast state: running - YES
 Process::HandlePrivateEvent (pid = 2000) broadcasting new state running (old state running) to public
 Process thinks the process has resumed.
 Process::PushProcessIOHandler pushing IO handler
 Process::HandlePrivateEvent updated m_iohandler_sync to 6
 waited from m_iohandler_sync to change from 5. New value is 6.
 timeout = <infinite>, event_sp)...
 (plugin = gdb-remote, state = running, restarted = 0)
 HandleCommand, command succeeded
 (plugin = gdb-remote, state = stopped)
 (plugin = gdb-remote, state = stopped, stop_id = 15
 0x1217fae98: tid = 0x53b2: stop info = <NULL> (stop_id = 15)
 0x1217fae98: tid = 0x53b2: stop info = EXC_BAD_ACCESS (code=2, address=0x16f603ff8) (stop_id = 15)
 
 ThreadList::ShouldStop: 1 threads, 1 unsuspended threads
 Thread::ShouldStop(0x1217fae98) for tid = 0x53b2 0x53b2, pc = 0x000000018311de7c
 ^^^^^^^^ Thread::ShouldStop Begin ^^^^^^^^
 Plan stack initial state:
  thread #1: tid = 0x53b2:
    Active plan stack:
      Element 0: Base thread plan.
      Element 1: Stepping over line problem08.c:32:11 using ranges: [0x0000000100003e78-0x0000000100003eb8).
      Element 2: Stepping one instruction past 0x000000018311de7c stepping over calls
      Element 3: Stepping one instruction past 0x000000018311de7c stepping over calls
      Element 4: Stepping one instruction past 0x000000018311de7c stepping over calls

 ThreadPlanStepRange got asked if it explains the stop for some reason other than step.
 Plan base plan explains stop.
 Base plan discarding thread plans for thread tid = 0x53b2 (exception: EXC_BAD_ACCESS (code=2, address=0x16f603ff8))
 Discarding thread plans for thread (tid = 0x53b2, force 0)
 Plan stack final state:
  thread #1: tid = 0x53b2:
    Active plan stack:
      Element 0: Base thread plan.
      Element 1: Stepping over line problem08.c:32:11 using ranges: [0x0000000100003e78-0x0000000100003eb8).
      Element 2: Stepping one instruction past 0x000000018311de7c stepping over calls
      Element 3: Stepping one instruction past 0x000000018311de7c stepping over calls
      Element 4: Stepping one instruction past 0x000000018311de7c stepping over calls

 vvvvvvvv Thread::ShouldStop End (returning 1) vvvvvvvv
 ThreadList::ShouldStop overall should_stop = 1
 Process::ShouldBroadcastEvent (0x103c11420) => new state: stopped, last broadcast state: stopped - YES
 Process::HandlePrivateEvent (pid = 2000) broadcasting new state stopped (old state stopped) to public
 timeout = <infinite>, event_sp)...
 (plugin = gdb-remote, state = stopped, restarted = 0)
 (plugin = gdb-remote, state = stopped) -- unlocking run lock
 Frame #0 not recognized
 Processing command: n
 HandleCommand, cmd_obj : 'thread step-over'
 HandleCommand, (revised) command_string: 'thread step-over'
 HandleCommand, wants_raw_input:'False'
 HandleCommand, command line after removing command name(s): ''
 SynthesizeTailCallFrames: can't find previous function
 Thread::PushPlan(0x0x1217fae98): "Stepping one instruction past 0x000000018311de7c stepping over calls", tid = 0x53b2.
 (plugin = gdb-remote) -- locking run lock
 Process::PrivateResume() m_stop_id = 15, public state: stopped private state: stopped
 WillResume Thread #1 (0x0x1217fae98): tid = 0x53b2, pc = 0x18311de7c, sp = 0x16fdfed30, fp = 0x16fdfed70, plan = 'Step over single instruction', state = stepping, stop others = 1
 (plugin = gdb-remote, state = running)
 Current Plan for thread 1(0x1217fae98) (0x53b2, stepping): Step over single instruction being asked whether we should report run.
 Process::ShouldBroadcastEvent (0x121633950) => new state: running, last broadcast state: running - YES
 Process::HandlePrivateEvent (pid = 2000) broadcasting new state running (old state running) to public
 Process::PushProcessIOHandler pushing IO handler
 Process thinks the process has resumed.
 Process::HandlePrivateEvent updated m_iohandler_sync to 7
 timeout = <infinite>, event_sp)...
 waited from m_iohandler_sync to change from 6. New value is 7.
 (plugin = gdb-remote, state = running, restarted = 0)
 HandleCommand, command succeeded
 (plugin = gdb-remote, state = stopped)
 (plugin = gdb-remote, state = stopped, stop_id = 16
 0x1217fae98: tid = 0x53b2: stop info = <NULL> (stop_id = 16)
 0x1217fae98: tid = 0x53b2: stop info = EXC_BAD_ACCESS (code=2, address=0x16f603ff8) (stop_id = 16)
 
 ThreadList::ShouldStop: 1 threads, 1 unsuspended threads
 Thread::ShouldStop(0x1217fae98) for tid = 0x53b2 0x53b2, pc = 0x000000018311de7c
 ^^^^^^^^ Thread::ShouldStop Begin ^^^^^^^^
 Plan stack initial state:
  thread #1: tid = 0x53b2:
    Active plan stack:
      Element 0: Base thread plan.
      Element 1: Stepping over line problem08.c:32:11 using ranges: [0x0000000100003e78-0x0000000100003eb8).
      Element 2: Stepping one instruction past 0x000000018311de7c stepping over calls
      Element 3: Stepping one instruction past 0x000000018311de7c stepping over calls
      Element 4: Stepping one instruction past 0x000000018311de7c stepping over calls
      Element 5: Stepping one instruction past 0x000000018311de7c stepping over calls

 ThreadPlanStepRange got asked if it explains the stop for some reason other than step.
 Plan base plan explains stop.
 Base plan discarding thread plans for thread tid = 0x53b2 (exception: EXC_BAD_ACCESS (code=2, address=0x16f603ff8))
 Discarding thread plans for thread (tid = 0x53b2, force 0)
 Plan stack final state:
  thread #1: tid = 0x53b2:
    Active plan stack:
      Element 0: Base thread plan.
      Element 1: Stepping over line problem08.c:32:11 using ranges: [0x0000000100003e78-0x0000000100003eb8).
      Element 2: Stepping one instruction past 0x000000018311de7c stepping over calls
      Element 3: Stepping one instruction past 0x000000018311de7c stepping over calls
      Element 4: Stepping one instruction past 0x000000018311de7c stepping over calls
      Element 5: Stepping one instruction past 0x000000018311de7c stepping over calls

 vvvvvvvv Thread::ShouldStop End (returning 1) vvvvvvvv
 ThreadList::ShouldStop overall should_stop = 1
 Process::ShouldBroadcastEvent (0x101e5a100) => new state: stopped, last broadcast state: stopped - YES
 Process::HandlePrivateEvent (pid = 2000) broadcasting new state stopped (old state stopped) to public
 timeout = <infinite>, event_sp)...
 (plugin = gdb-remote, state = stopped, restarted = 0)
 (plugin = gdb-remote, state = stopped) -- unlocking run lock
 Frame #0 not recognized
 Processing command: s
 HandleCommand, cmd_obj : 'thread step-in'
 HandleCommand, (revised) command_string: 'thread step-in'
 HandleCommand, wants_raw_input:'False'
 HandleCommand, command line after removing command name(s): ''
 SynthesizeTailCallFrames: can't find previous function
 Thread::PushPlan(0x0x1217fae98): "Stepping one instruction past 0x000000018311de7c stepping into calls", tid = 0x53b2.
 (plugin = gdb-remote) -- locking run lock
 Process::PrivateResume() m_stop_id = 16, public state: stopped private state: stopped
 WillResume Thread #1 (0x0x1217fae98): tid = 0x53b2, pc = 0x18311de7c, sp = 0x16fdfed30, fp = 0x16fdfed70, plan = 'Step over single instruction', state = stepping, stop others = 1
 (plugin = gdb-remote, state = running)
 Current Plan for thread 1(0x1217fae98) (0x53b2, stepping): Step over single instruction being asked whether we should report run.
 Process::ShouldBroadcastEvent (0x103c0e1e0) => new state: running, last broadcast state: running - YES
 Process thinks the process has resumed.
 Process::HandlePrivateEvent (pid = 2000) broadcasting new state running (old state running) to public
 Process::PushProcessIOHandler pushing IO handler
 Process::HandlePrivateEvent updated m_iohandler_sync to 8
 waited from m_iohandler_sync to change from 7. New value is 8.
 (plugin = gdb-remote, state = running, restarted = 0)
 HandleCommand, command succeeded
 timeout = <infinite>, event_sp)...
 (plugin = gdb-remote, state = stopped)
 (plugin = gdb-remote, state = stopped, stop_id = 17
 0x1217fae98: tid = 0x53b2: stop info = <NULL> (stop_id = 17)
 0x1217fae98: tid = 0x53b2: stop info = EXC_BAD_ACCESS (code=2, address=0x16f603ff8) (stop_id = 17)
 
 ThreadList::ShouldStop: 1 threads, 1 unsuspended threads
 Thread::ShouldStop(0x1217fae98) for tid = 0x53b2 0x53b2, pc = 0x000000018311de7c
 ^^^^^^^^ Thread::ShouldStop Begin ^^^^^^^^
 Plan stack initial state:
  thread #1: tid = 0x53b2:
    Active plan stack:
      Element 0: Base thread plan.
      Element 1: Stepping over line problem08.c:32:11 using ranges: [0x0000000100003e78-0x0000000100003eb8).
      Element 2: Stepping one instruction past 0x000000018311de7c stepping over calls
      Element 3: Stepping one instruction past 0x000000018311de7c stepping over calls
      Element 4: Stepping one instruction past 0x000000018311de7c stepping over calls
      Element 5: Stepping one instruction past 0x000000018311de7c stepping over calls
      Element 6: Stepping one instruction past 0x000000018311de7c stepping into calls

 ThreadPlanStepRange got asked if it explains the stop for some reason other than step.
 Plan base plan explains stop.
 Base plan discarding thread plans for thread tid = 0x53b2 (exception: EXC_BAD_ACCESS (code=2, address=0x16f603ff8))
 Discarding thread plans for thread (tid = 0x53b2, force 0)
 Plan stack final state:
  thread #1: tid = 0x53b2:
    Active plan stack:
      Element 0: Base thread plan.
      Element 1: Stepping over line problem08.c:32:11 using ranges: [0x0000000100003e78-0x0000000100003eb8).
      Element 2: Stepping one instruction past 0x000000018311de7c stepping over calls
      Element 3: Stepping one instruction past 0x000000018311de7c stepping over calls
      Element 4: Stepping one instruction past 0x000000018311de7c stepping over calls
      Element 5: Stepping one instruction past 0x000000018311de7c stepping over calls
      Element 6: Stepping one instruction past 0x000000018311de7c stepping into calls

 vvvvvvvv Thread::ShouldStop End (returning 1) vvvvvvvv
 ThreadList::ShouldStop overall should_stop = 1
 Process::ShouldBroadcastEvent (0x103c129f0) => new state: stopped, last broadcast state: stopped - YES
 Process::HandlePrivateEvent (pid = 2000) broadcasting new state stopped (old state stopped) to public
 timeout = <infinite>, event_sp)...
 (plugin = gdb-remote, state = stopped, restarted = 0)
 (plugin = gdb-remote, state = stopped) -- unlocking run lock
 Frame #0 not recognized
 Processing command: r
 HandleCommand, cmd_obj : 'process launch'
 HandleCommand, (revised) command_string: 'process launch -X true --'
 HandleCommand, wants_raw_input:'False'
 Repeat command: 
 HandleCommand, command line after removing command name(s): '-X true --'
 Discarding thread plans for thread (tid = 0x53b2, force 1)
 GDBRemoteCommunicationClient::SendGDBStoppointTypePacket() remove at addr = 0x100003d34
 GDBRemoteCommunicationClient::SendGDBStoppointTypePacket() remove at addr = 0x100003db0
 GDBRemoteCommunicationClient::SendGDBStoppointTypePacket() remove at addr = 0x100003e70
 GDBRemoteCommunicationClient::SendGDBStoppointTypePacket() remove at addr = 0x100003eb8
 GDBRemoteCommunicationClient::SendGDBStoppointTypePacket() remove at addr = 0x182da4e20
 ::waitpid (pid = 2000, &status, 0) => pid = 2000, status = 0x00000009 (SIGNALED), signal = 9, exit_status = -1
 pid = 2000, signal = 9, status = -1
 (plugin = gdb-remote status=9 (0x00000009), description="killed")
 (plugin = gdb-remote, state = exited)
 (plugin = gdb-remote, state = exited, stop_id = 18
 Process::ShouldBroadcastEvent (0x103c129f0) => new state: exited, last broadcast state: exited - YES
 Process::HandlePrivateEvent (pid = 2000) broadcasting new state exited (old state exited) to public
 Process::RunPrivateStateThread (arg = 0x102998a00, pid = 2000) about to exit with internal state exited...
 Process::RunPrivateStateThread (arg = 0x102998a00, pid = 2000) thread exiting...
 (plugin = gdb-remote, state = exited, restarted = 0)
 Process::ControlPrivateStateThread (signal = 1)
 Sending control event of type: 1.
 Target::Launch() called for /Users/shafinazahsan/github-classroom/FPC-advanced/fpc-advanced-classroom-1st-year-assignment-ShafinazAhsan/set01/problem08
 Target::Launch the process exists, and its current state is exited
 have platform=true, platform_sp->IsHost()=true, default_to_use_pty=true
 at least one of stdin/stdout/stderr was not set, evaluating default handling
 target stdin='(empty)', target stdout='(empty)', stderr='(empty)'
 Generating a pty to use for stdin/out/err
 Target::Launch asking the platform to debug the process
 ::waitpid (pid = 2001, &status, 0) => pid = 2001, status = 0x00000000 (EXITED), signal = 0, exit_status = 0
 (plugin = gdb-remote status=6 (0x00000006), description="destroying when not connected to debugserver")
 (plugin = gdb-remote) ignoring exit status because state was already set to eStateExited
 Went to stop the private state thread, but it was already invalid.
 Target::RemoveBreakpointByID (break_id = -3, internal = yes)

 Target::DisableBreakpointByID (break_id = -3, internal = yes)

 Removing next branch breakpoint: -6.
 Target::RemoveBreakpointByID (break_id = -6, internal = yes)

 Target::DisableBreakpointByID (break_id = -6, internal = yes)

 Target::DisableAllWatchpoints

 Target::ClearAllWatchpointHitCounts

 Target::ClearAllWatchpointHistoricValues

 Host::StartMonitoringChildProcess(callback, pid=2023) source = 0x103c180a0

 ::waitpid (pid = 2023, &status, 0) => pid = 2023, status = 0x00000000 (EXITED), signal = 0, exit_status = 0
 Host::StartMonitoringChildProcess(callback, pid=2024) source = 0x101c78510

 (plugin = gdb-remote, state = attaching, restarted = 0)
 Host::StartMonitoringChildProcess(callback, pid=2025) source = 0x12167ff60

 thread created
 Process::AttachCompletionHandler::AttachCompletionHandler process=0x121875e00, exec_count=0
 Process::ControlPrivateStateThread (signal = 4)
 Sending control event of type: 4.
 thread created
 Process::RunPrivateStateThread (arg = 0x121875e00, pid = 2024) thread starting...
 timeout = <infinite>, event_sp)...
 Process::RunPrivateStateThread (arg = 0x121875e00, pid = 2024) got a control event: 4
 timeout = <infinite>, event_sp)...
 thread created
 timeout = <infinite>
 timeout = <infinite>, event_sp)...
 (plugin = gdb-remote, state = stopped)
 (plugin = gdb-remote, state = stopped, stop_id = 1
 Process::AttachCompletionHandler::PerformAction called with state stopped (5)
 Discarding thread plans for thread (tid = 0x546b, force 1)
 Thread::PushPlan(0x0x101732fb8): "Base thread plan.", tid = 0x546b.
 Process::AttachCompletionHandler::PerformAction state stopped: no more execs expected to start, continuing with attach
 Process::CompleteAttach()
 Setting Process code address mask to 0xffff800000000000
 Setting Process data address mask to 0xffff800000000000
 Target::SetArchitecture merging compatible arch; arch is now arm64 (arm64-apple-macosx14.0.0)
 Process::CompleteAttach replacing process architecture with DidAttach() architecture: arm64e-apple-macosx-
 DynamicLoaderDarwin::UseDYLDSPI: Use new DynamicLoader plugin
 DynamicLoaderDarwin::UseDYLDSPI: Use new DynamicLoader plugin
 Unloaded:
 DynamicLoaderDarwin::UnloadAllImages[0] 7F38ECE1-827D-351F-8E3C-886574F86827 (arm64) "/Users/shafinazahsan/github-classroom/FPC-advanced/fpc-advanced-classroom-1st-year-assignment-ShafinazAhsan/set01/problem08"
 DynamicLoaderDarwin::UnloadAllImages[1] FFD8AB66-C9AB-31DF-AB80-3A3DFF367DDD (arm64e) "/usr/lib/dyld"
 DynamicLoaderDarwin::UnloadAllImages[2] F0A54B2D-8751-35F1-A3CF-F1A02F842211 (arm64e) "/usr/lib/libSystem.B.dylib"
 DynamicLoaderDarwin::UnloadAllImages[3] C683623C-1FF6-3133-9E28-28672FDBA4D3 (arm64e) "/usr/lib/system/libcache.dylib"
 DynamicLoaderDarwin::UnloadAllImages[4] BFDF8F55-D3DC-3A92-B8A1-8EF165A56F1B (arm64e) "/usr/lib/system/libcommonCrypto.dylib"
 DynamicLoaderDarwin::UnloadAllImages[5] B29A99B2-7ADE-3371-A774-B690BEC3C406 (arm64e) "/usr/lib/system/libcompiler_rt.dylib"
 DynamicLoaderDarwin::UnloadAllImages[6] 65612C42-C5E4-3821-B71D-DDE620FB014C (arm64e) "/usr/lib/system/libcopyfile.dylib"
 DynamicLoaderDarwin::UnloadAllImages[7] B3AC12C0-8ED6-35A2-86C6-0BFA55BFF333 (arm64e) "/usr/lib/system/libcorecrypto.dylib"
 DynamicLoaderDarwin::UnloadAllImages[8] 8790BA20-19EC-3A36-8975-E34382D9747C (arm64e) "/usr/lib/system/libdispatch.dylib"
 DynamicLoaderDarwin::UnloadAllImages[9] 4BB77515-DBA8-3EDF-9AF7-3C9EAE959EA6 (arm64e) "/usr/lib/system/libdyld.dylib"
 DynamicLoaderDarwin::UnloadAllImages[10] F7CE9486-FFF5-3CB8-B26F-75811EF4283A (arm64e) "/usr/lib/system/libkeymgr.dylib"
 DynamicLoaderDarwin::UnloadAllImages[11] 1A7038EC-EE49-35AE-8A3C-C311083795FB (arm64e) "/usr/lib/system/libmacho.dylib"
 DynamicLoaderDarwin::UnloadAllImages[12] 3011123B-C35C-35FC-AB0B-8D775C9109D1 (arm64e) "/usr/lib/system/libquarantine.dylib"
 DynamicLoaderDarwin::UnloadAllImages[13] CE63E895-25E4-350C-BB79-0EFD3AC899E5 (arm64e) "/usr/lib/system/libremovefile.dylib"
 DynamicLoaderDarwin::UnloadAllImages[14] 2EA1DA8E-A94D-32EA-A64F-DD586FE72599 (arm64e) "/usr/lib/system/libsystem_asl.dylib"
 DynamicLoaderDarwin::UnloadAllImages[15] A81CDBDB-D1B1-386E-9029-2F6E0F685E3A (arm64e) "/usr/lib/system/libsystem_blocks.dylib"
 DynamicLoaderDarwin::UnloadAllImages[16] 1B84A7E4-8958-330C-98B8-27D491DFF69E (arm64e) "/usr/lib/system/libsystem_c.dylib"
 DynamicLoaderDarwin::UnloadAllImages[17] FA0C6F96-A737-3F29-B640-99E313873A21 (arm64e) "/usr/lib/system/libsystem_collections.dylib"
 DynamicLoaderDarwin::UnloadAllImages[18] 5E85DB71-174E-3E61-A3C9-36D5E0CBBF46 (arm64e) "/usr/lib/system/libsystem_configuration.dylib"
 DynamicLoaderDarwin::UnloadAllImages[19] 8E716F51-A02E-3005-9F6F-84163BFAF1AE (arm64e) "/usr/lib/system/libsystem_containermanager.dylib"
 DynamicLoaderDarwin::UnloadAllImages[20] 0ECFD7D1-0230-3C32-BDD7-4715D94A28E6 (arm64e) "/usr/lib/system/libsystem_coreservices.dylib"
 DynamicLoaderDarwin::UnloadAllImages[21] 67509907-7BCE-3723-A305-0B042A41FDA5 (arm64e) "/usr/lib/system/libsystem_darwin.dylib"
 DynamicLoaderDarwin::UnloadAllImages[22] F1E52C1A-7156-3BED-AD5B-1CE3AFFDFCE3 (arm64e) "/usr/lib/system/libsystem_darwindirectory.dylib"
 DynamicLoaderDarwin::UnloadAllImages[23] 82426BAB-A0A9-3C99-8A86-DABB3A0BA072 (arm64e) "/usr/lib/system/libsystem_dnssd.dylib"
 DynamicLoaderDarwin::UnloadAllImages[24] 0C18273A-0DB8-3522-853B-67A2187EEF07 (arm64e) "/usr/lib/system/libsystem_featureflags.dylib"
 DynamicLoaderDarwin::UnloadAllImages[25] 8F2A7530-B8D3-3705-B2B7-9347D9495223 (arm64e) "/usr/lib/system/libsystem_info.dylib"
 DynamicLoaderDarwin::UnloadAllImages[26] 72899DE6-A120-389C-90DC-B94C392EF655 (arm64e) "/usr/lib/system/libsystem_m.dylib"
 DynamicLoaderDarwin::UnloadAllImages[27] 00379936-C90E-3D9D-A569-3F97338F1472 (arm64e) "/usr/lib/system/libsystem_malloc.dylib"
 DynamicLoaderDarwin::UnloadAllImages[28] 9DBF57DB-0008-3584-89A3-1463AB9E4967 (arm64e) "/usr/lib/system/libsystem_networkextension.dylib"
 DynamicLoaderDarwin::UnloadAllImages[29] 7DA7113E-E87A-3E78-AD4F-77F6EC076E42 (arm64e) "/usr/lib/system/libsystem_notify.dylib"
 DynamicLoaderDarwin::UnloadAllImages[30] 3BC895C5-B10E-39F4-B761-E79D5719FB1D (arm64e) "/usr/lib/system/libsystem_sandbox.dylib"
 DynamicLoaderDarwin::UnloadAllImages[31] 1C92CD80-54E6-3E70-BB3C-7264A160AD7C (arm64e) "/usr/lib/system/libsystem_secinit.dylib"
 DynamicLoaderDarwin::UnloadAllImages[32] A7D3C07D-0A1E-3C4C-8FBA-66905E16BF99 (arm64e) "/usr/lib/system/libsystem_kernel.dylib"
 DynamicLoaderDarwin::UnloadAllImages[33] E7E2F10A-772A-397F-BD19-A7EA5A54E49F (arm64e) "/usr/lib/system/libsystem_platform.dylib"
 DynamicLoaderDarwin::UnloadAllImages[34] E4DEBB6E-421D-33D0-9E17-77AE0E0FE4DC (arm64e) "/usr/lib/system/libsystem_pthread.dylib"
 DynamicLoaderDarwin::UnloadAllImages[35] 2D7D536C-1D08-304A-9E67-BFB1E99301FE (arm64e) "/usr/lib/system/libsystem_symptoms.dylib"
 DynamicLoaderDarwin::UnloadAllImages[36] 4AF0EA7D-E9F4-30E7-914D-FB292EDB7F37 (arm64e) "/usr/lib/system/libsystem_trace.dylib"
 DynamicLoaderDarwin::UnloadAllImages[37] FB2051CF-36B6-348F-B8DF-5B2F702F6290 (arm64e) "/usr/lib/system/libunwind.dylib"
 DynamicLoaderDarwin::UnloadAllImages[38] 84971772-939B-3130-8908-B7A38851A516 (arm64e) "/usr/lib/system/libxpc.dylib"
 DynamicLoaderDarwin::UnloadAllImages[39] 43940F08-B65E-3888-8CD3-C52398EB1CA1 (arm64e) "/usr/lib/libc++abi.dylib"
 DynamicLoaderDarwin::UnloadAllImages[40] 1C0364B5-D7E3-3170-BAA6-9C28F400E7CC (arm64e) "/usr/lib/libobjc.A.dylib"
 DynamicLoaderDarwin::UnloadAllImages[41] 5A83FBC3-0944-3D77-8DF2-03E262F67AFA (arm64e) "/usr/lib/liboah.dylib"
 DynamicLoaderDarwin::UnloadAllImages[42] 93FBD681-FC78-33A3-AFFE-568702676142 (arm64e) "/usr/lib/libc++.1.dylib"
 Breakpoint::ModulesChanged: num_modules: 43 load: 0 delete_locations: 0

 0x1217307b8 Broadcaster("lldb.target")::BroadcastEvent (event_sp = {0x101e0fed8 Event: broadcaster = 0x12202d200 (lldb.target), type = 0x00000001 (breakpoint-changed), data = {bkpt: 1 type: locations removed}}, unique =0) hijack = 0x0
 Breakpoint::ModulesChanged: num_modules: 43 load: 0 delete_locations: 0

 0x1217307b8 Broadcaster("lldb.target")::BroadcastEvent (event_sp = {0x101e381a8 Event: broadcaster = 0x12202d200 (lldb.target), type = 0x00000001 (breakpoint-changed), data = {bkpt: 2 type: locations removed}}, unique =0) hijack = 0x0
 Breakpoint::ModulesChanged: num_modules: 43 load: 0 delete_locations: 0

 0x1217307b8 Broadcaster("lldb.target")::BroadcastEvent (event_sp = {0x101e381a8 Event: broadcaster = 0x12202d200 (lldb.target), type = 0x00000001 (breakpoint-changed), data = {bkpt: 3 type: locations removed}}, unique =0) hijack = 0x0
 Breakpoint::ModulesChanged: num_modules: 43 load: 0 delete_locations: 0

 Initial module fetch:  Adding 2 modules.

 Found executable module: /Users/shafinazahsan/github-classroom/FPC-advanced/fpc-advanced-classroom-1st-year-assignment-ShafinazAhsan/set01/problem08
 Found dyld module: /usr/lib/dyld
 Adding new image at address=0x000000010000c000.
 address=0x000000010000c000 uuid=FFD8AB66-C9AB-31DF-AB80-3A3DFF367DDD path='/usr/lib/dyld'
 		          __TEXT [0x000000010000c000 - 0x00000001000a0000) slide = 0x10000c000
 		    __DATA_CONST [0x00000001000a0000 - 0x00000001000a8000) slide = 0x10000c000
 		          __DATA [0x00000001000a8000 - 0x00000001000ac000) slide = 0x10000c000
 		    __DATA_DIRTY [0x00000001000ac000 - 0x00000001000b0000) slide = 0x10000c000
 		      __LINKEDIT [0x00000001000b0000 - 0x000000010010c000) slide = 0x10000c000
 Adding new image at address=0x0000000100000000.
 address=0x0000000100000000 uuid=7F38ECE1-827D-351F-8E3C-886574F86827 path='/Users/shafinazahsan/github-classroom/FPC-advanced/fpc-advanced-classroom-1st-year-assignment-ShafinazAhsan/set01/problem08'
 		      __PAGEZERO [0x0000000000000000 - 0x0000000100000000)
 		          __TEXT [0x0000000100000000 - 0x0000000100004000)
 		    __DATA_CONST [0x0000000100004000 - 0x0000000100008000)
 		      __LINKEDIT [0x0000000100008000 - 0x000000010000c000)
 DynamicLoaderDarwin::ModulesDidLoad[0] FFD8AB66-C9AB-31DF-AB80-3A3DFF367DDD (arm64e) "/usr/lib/dyld"
 DynamicLoaderDarwin::ModulesDidLoad[1] 7F38ECE1-827D-351F-8E3C-886574F86827 (arm64) "/Users/shafinazahsan/github-classroom/FPC-advanced/fpc-advanced-classroom-1st-year-assignment-ShafinazAhsan/set01/problem08"
 Breakpoint::ModulesChanged: num_modules: 2 load: 1 delete_locations: 0

 GDBRemoteCommunicationClient::SendGDBStoppointTypePacket() add at addr = 0x100003d34
 0x1217307b8 Broadcaster("lldb.target")::BroadcastEvent (event_sp = {0x101e39818 Event: broadcaster = 0x12202d200 (lldb.target), type = 0x00000001 (breakpoint-changed), data = {bkpt: 1 type: locations resolved}}, unique =0) hijack = 0x0
 Breakpoint::ModulesChanged: num_modules: 2 load: 1 delete_locations: 0

 GDBRemoteCommunicationClient::SendGDBStoppointTypePacket() add at addr = 0x100003db0
 0x1217307b8 Broadcaster("lldb.target")::BroadcastEvent (event_sp = {0x101e39818 Event: broadcaster = 0x12202d200 (lldb.target), type = 0x00000001 (breakpoint-changed), data = {bkpt: 2 type: locations resolved}}, unique =0) hijack = 0x0
 Breakpoint::ModulesChanged: num_modules: 2 load: 1 delete_locations: 0

 GDBRemoteCommunicationClient::SendGDBStoppointTypePacket() add at addr = 0x100003e70
 0x1217307b8 Broadcaster("lldb.target")::BroadcastEvent (event_sp = {0x101739408 Event: broadcaster = 0x12202d200 (lldb.target), type = 0x00000001 (breakpoint-changed), data = {bkpt: 3 type: locations resolved}}, unique =0) hijack = 0x0
 Breakpoint::ModulesChanged: num_modules: 2 load: 1 delete_locations: 0

 Target::AddBreakpoint (internal = yes) => break_id = -7: name = '_dyld_debugger_notification', language = c, module = dyld


 GDBRemoteCommunicationClient::SendGDBStoppointTypePacket() add at addr = 0x10000de20
 after DynamicLoader::DidAttach(), target executable is /Users/shafinazahsan/github-classroom/FPC-advanced/fpc-advanced-classroom-1st-year-assignment-ShafinazAhsan/set01/problem08 (using macos-dyld plugin)
 after SystemRuntime::DidAttach(), target executable is /Users/shafinazahsan/github-classroom/FPC-advanced/fpc-advanced-classroom-1st-year-assignment-ShafinazAhsan/set01/problem08 (using systemruntime-macosx plugin)
 Ran next event action, result was 0.
 0x101732fb8: tid = 0x546b: stop info = <NULL> (stop_id = 1)
 0x101732fb8: tid = 0x546b: stop info = signal SIGSTOP (stop_id = 1)
 
 ThreadList::ShouldStop: 1 threads, 1 unsuspended threads
 Thread::ShouldStop(0x101732fb8) for tid = 0x546b 0x546b, pc = 0x0000000100010b70
 ^^^^^^^^ Thread::ShouldStop Begin ^^^^^^^^
 Plan stack initial state:
  thread #1: tid = 0x546b:
    Active plan stack:
      Element 0: Base thread plan.

 Base plan discarding thread plans for thread tid = 0x546b (signal: signal SIGSTOP)
 Discarding thread plans for thread (tid = 0x546b, force 0)
 Base plan says should stop: 1.
 Plan stack final state:
  thread #1: tid = 0x546b:
    Active plan stack:
      Element 0: Base thread plan.

 vvvvvvvv Thread::ShouldStop End (returning 1) vvvvvvvv
 ThreadList::ShouldStop overall should_stop = 1
 Process::ShouldBroadcastEvent (0x1216fca60) => new state: stopped, last broadcast state: stopped - YES
 Process::HandlePrivateEvent (pid = 2024) broadcasting new state stopped (old state stopped) to hijacked
 timeout = <infinite>, event_sp)...
 (plugin = gdb-remote, state = stopped, restarted = 0)
 (plugin = gdb-remote, state = stopped) -- unlocking run lock
 timeout = <infinite>, event_sp) => stopped
 (plugin = gdb-remote) -- locking run lock
 Process::PrivateResume() m_stop_id = 1, public state: stopped private state: stopped
 WillResume Thread #1 (0x0x101732fb8): tid = 0x546b, pc = 0x100010b70, sp = 0x16fdfefb0, fp = 0x00000000, plan = 'base plan', state = running, stop others = 0
 (plugin = gdb-remote, state = running)
 Process thinks the process has resumed.
 Current Plan for thread 1(0x101732fb8) (0x546b, running): base plan being asked whether we should report run.
 Process::ShouldBroadcastEvent (0x10172b810) => new state: running, last broadcast state: running - YES
 Process::HandlePrivateEvent (pid = 2024) broadcasting new state running (old state running) to public
 Process::PushProcessIOHandler pushing IO handler
 Process::HandlePrivateEvent updated m_iohandler_sync to 1
 timeout = <infinite>, event_sp)...
 (plugin = gdb-remote, state = running, restarted = 0)
 waited from m_iohandler_sync to change from 0. New value is 1.
 HandleCommand, command succeeded
 Went to stop the private state thread, but it was already invalid.
 (plugin = gdb-remote, state = stopped)
 (plugin = gdb-remote, state = stopped, stop_id = 2
 0x101732fb8: tid = 0x546b: stop info = <NULL> (stop_id = 2)
 0x101732fb8: tid = 0x546b: stop info = shared-library-event (stop_id = 2)
 
 ThreadList::ShouldStop: 1 threads, 1 unsuspended threads
 Thread::ShouldStop(0x101732fb8) for tid = 0x546b 0x546b, pc = 0x000000010000de20
 ^^^^^^^^ Thread::ShouldStop Begin ^^^^^^^^
 Plan stack initial state:
  thread #1: tid = 0x546b:
    Active plan stack:
      Element 0: Base thread plan.

 Target::RemoveBreakpointByID (break_id = -7, internal = yes)

 Target::DisableBreakpointByID (break_id = -7, internal = yes)

 GDBRemoteCommunicationClient::SendGDBStoppointTypePacket() remove at addr = 0x10000de20
 Unloaded:
 DynamicLoaderDarwin::UnloadAllImages[0] 7F38ECE1-827D-351F-8E3C-886574F86827 (arm64) "/Users/shafinazahsan/github-classroom/FPC-advanced/fpc-advanced-classroom-1st-year-assignment-ShafinazAhsan/set01/problem08"
 Breakpoint::ModulesChanged: num_modules: 1 load: 0 delete_locations: 0

 GDBRemoteCommunicationClient::SendGDBStoppointTypePacket() remove at addr = 0x100003d34
 0x1217307b8 Broadcaster("lldb.target")::BroadcastEvent (event_sp = {0x1216fb018 Event: broadcaster = 0x12202d200 (lldb.target), type = 0x00000001 (breakpoint-changed), data = {bkpt: 1 type: locations removed}}, unique =0) hijack = 0x0
 Breakpoint::ModulesChanged: num_modules: 1 load: 0 delete_locations: 0

 GDBRemoteCommunicationClient::SendGDBStoppointTypePacket() remove at addr = 0x100003db0
 0x1217307b8 Broadcaster("lldb.target")::BroadcastEvent (event_sp = {0x101c85be8 Event: broadcaster = 0x12202d200 (lldb.target), type = 0x00000001 (breakpoint-changed), data = {bkpt: 2 type: locations removed}}, unique =0) hijack = 0x0
 Breakpoint::ModulesChanged: num_modules: 1 load: 0 delete_locations: 0

 GDBRemoteCommunicationClient::SendGDBStoppointTypePacket() remove at addr = 0x100003e70
 0x1217307b8 Broadcaster("lldb.target")::BroadcastEvent (event_sp = {0x10171d728 Event: broadcaster = 0x12202d200 (lldb.target), type = 0x00000001 (breakpoint-changed), data = {bkpt: 3 type: locations removed}}, unique =0) hijack = 0x0
 Breakpoint::ModulesChanged: num_modules: 1 load: 0 delete_locations: 0

 Target::AddBreakpoint (internal = yes) => break_id = -8: address = 0x0000000182deda0c


 GDBRemoteCommunicationClient::SendGDBStoppointTypePacket() add at addr = 0x182deda0c
 Hit breakpoint location: -7.1: 
  module = /usr/lib/dyld
  symbol = _dyld_debugger_notification
  address = dyld[0x00000001800b8e20]
  resolved = false
  hardware = false
  hit count = 1   
, continuing.

 StopInfo::ShouldStop async callback says we should not stop, returning ShouldStop of false.
 ThreadList::ShouldStop overall should_stop = 0
 ThreadList::ShouldReportStop 1 threads
 Thread::ShouldReportStop() tid = 0x546b: returning vote 0 for current plan
 Returning no opinion
 Process::ShouldBroadcastEvent: should_resume: 1 state: stopped was_restarted: 0 report_stop_vote: 0.
 Process::ShouldBroadcastEvent (0x1217fb4c0) Restarting process from state: stopped
 Process::PrivateResume() m_stop_id = 2, public state: running private state: stopped
 WillResume Thread #1 (0x0x101732fb8): tid = 0x546b, pc = 0x10000de20, sp = 0x16fdfec60, fp = 0x16fdfed10, plan = 'base plan', state = running, stop others = 0
 (plugin = gdb-remote, state = running)
 Process thinks the process has resumed.
 Process::ShouldBroadcastEvent (0x1217fb4c0) => new state: stopped, last broadcast state: running - NO
 Process::HandlePrivateEvent (pid = 2024) suppressing state stopped (old state running): should_broadcast == false
 timeout = <infinite>, event_sp)...
 Process::ShouldBroadcastEvent (0x101d05330) => new state: running, last broadcast state: running - NO
 Process::HandlePrivateEvent (pid = 2024) suppressing state running (old state running): should_broadcast == false
 timeout = <infinite>, event_sp)...
 (plugin = gdb-remote, state = stopped)
 (plugin = gdb-remote, state = stopped, stop_id = 3
 0x101732fb8: tid = 0x546b: stop info = <NULL> (stop_id = 3)
 0x101732fb8: tid = 0x546b: stop info =  (stop_id = 3)
 
 ThreadList::ShouldStop: 1 threads, 1 unsuspended threads
 Thread::ShouldStop(0x101732fb8) for tid = 0x546b 0x546b, pc = 0x0000000182deda0c
 ^^^^^^^^ Thread::ShouldStop Begin ^^^^^^^^
 Plan stack initial state:
  thread #1: tid = 0x546b:
    Active plan stack:
      Element 0: Base thread plan.

 Target::RemoveBreakpointByID (break_id = -8, internal = yes)

 Target::DisableBreakpointByID (break_id = -8, internal = yes)

 GDBRemoteCommunicationClient::SendGDBStoppointTypePacket() remove at addr = 0x182deda0c
 Initial module fetch:  Adding 2 modules.

 Found executable module: /Users/shafinazahsan/github-classroom/FPC-advanced/fpc-advanced-classroom-1st-year-assignment-ShafinazAhsan/set01/problem08
 Found dyld module: /usr/lib/dyld
 Adding new image at address=0x0000000182da3000.
 address=0x0000000182da3000 uuid=FFD8AB66-C9AB-31DF-AB80-3A3DFF367DDD path='/usr/lib/dyld'
 		          __TEXT [0x0000000182da3000 - 0x0000000182e36874) slide = 0x2cec000
 		    __DATA_CONST [0x00000001de269bd0 - 0x00000001de26f380) slide = 0x2cec000
 		          __DATA [0x00000001da8a9e80 - 0x00000001da8aca4c) slide = 0x2cec000
 		    __DATA_DIRTY [0x00000001da3e90c0 - 0x00000001da3eac20) slide = 0x2cec000
 		      __LINKEDIT [0x000000023a91c000 - 0x0000000271f8c000) slide = 0x2cec000
 Adding new image at address=0x0000000100000000.
 address=0x0000000100000000 uuid=7F38ECE1-827D-351F-8E3C-886574F86827 path='/Users/shafinazahsan/github-classroom/FPC-advanced/fpc-advanced-classroom-1st-year-assignment-ShafinazAhsan/set01/problem08'
 		      __PAGEZERO [0x0000000000000000 - 0x0000000100000000)
 		          __TEXT [0x0000000100000000 - 0x0000000100004000)
 		    __DATA_CONST [0x0000000100004000 - 0x0000000100008000)
 		      __LINKEDIT [0x0000000100008000 - 0x000000010000c000)
 DynamicLoaderDarwin::ModulesDidLoad[0] FFD8AB66-C9AB-31DF-AB80-3A3DFF367DDD (arm64e) "/usr/lib/dyld"
 DynamicLoaderDarwin::ModulesDidLoad[1] 7F38ECE1-827D-351F-8E3C-886574F86827 (arm64) "/Users/shafinazahsan/github-classroom/FPC-advanced/fpc-advanced-classroom-1st-year-assignment-ShafinazAhsan/set01/problem08"
 Breakpoint::ModulesChanged: num_modules: 2 load: 1 delete_locations: 0

 GDBRemoteCommunicationClient::SendGDBStoppointTypePacket() add at addr = 0x100003d34
 0x1217307b8 Broadcaster("lldb.target")::BroadcastEvent (event_sp = {0x101e351d8 Event: broadcaster = 0x12202d200 (lldb.target), type = 0x00000001 (breakpoint-changed), data = {bkpt: 1 type: locations resolved}}, unique =0) hijack = 0x0
 Breakpoint::ModulesChanged: num_modules: 2 load: 1 delete_locations: 0

 GDBRemoteCommunicationClient::SendGDBStoppointTypePacket() add at addr = 0x100003db0
 0x1217307b8 Broadcaster("lldb.target")::BroadcastEvent (event_sp = {0x1216fb1e8 Event: broadcaster = 0x12202d200 (lldb.target), type = 0x00000001 (breakpoint-changed), data = {bkpt: 2 type: locations resolved}}, unique =0) hijack = 0x0
 Breakpoint::ModulesChanged: num_modules: 2 load: 1 delete_locations: 0

 GDBRemoteCommunicationClient::SendGDBStoppointTypePacket() add at addr = 0x100003e70
 0x1217307b8 Broadcaster("lldb.target")::BroadcastEvent (event_sp = {0x101e351d8 Event: broadcaster = 0x12202d200 (lldb.target), type = 0x00000001 (breakpoint-changed), data = {bkpt: 3 type: locations resolved}}, unique =0) hijack = 0x0
 Breakpoint::ModulesChanged: num_modules: 2 load: 1 delete_locations: 0

 Target::AddBreakpoint (internal = yes) => break_id = -9: name = '_dyld_debugger_notification', language = c, module = dyld


 GDBRemoteCommunicationClient::SendGDBStoppointTypePacket() add at addr = 0x182da4e20
 Hit breakpoint location: -8.1: 
  address = 0x0000000182deda0c
  resolved = false
  hardware = false
  hit count = 1   
, continuing.

 StopInfo::ShouldStop async callback says we should not stop, returning ShouldStop of false.
 ThreadList::ShouldStop overall should_stop = 0
 ThreadList::ShouldReportStop 1 threads
 Thread::ShouldReportStop() tid = 0x546b: returning vote 0 for current plan
 Returning no opinion
 Process::ShouldBroadcastEvent: should_resume: 1 state: stopped was_restarted: 0 report_stop_vote: 0.
 Process::ShouldBroadcastEvent (0x1216fcc80) Restarting process from state: stopped
 Process::PrivateResume() m_stop_id = 3, public state: running private state: stopped
 WillResume Thread #1 (0x0x101732fb8): tid = 0x546b, pc = 0x182deda0c, sp = 0x16fdfec10, fp = 0x16fdfed70, plan = 'base plan', state = running, stop others = 0
 (plugin = gdb-remote, state = running)
 Process thinks the process has resumed.
 Process::ShouldBroadcastEvent (0x1216fcc80) => new state: stopped, last broadcast state: running - NO
 Process::HandlePrivateEvent (pid = 2024) suppressing state stopped (old state running): should_broadcast == false
 timeout = <infinite>, event_sp)...
 Process::ShouldBroadcastEvent (0x1217fbd30) => new state: running, last broadcast state: running - NO
 Process::HandlePrivateEvent (pid = 2024) suppressing state running (old state running): should_broadcast == false
 timeout = <infinite>, event_sp)...
 (plugin = gdb-remote, state = stopped)
 (plugin = gdb-remote, state = stopped, stop_id = 4
 0x101732fb8: tid = 0x546b: stop info = <NULL> (stop_id = 4)
 0x101732fb8: tid = 0x546b: stop info = shared-library-event (stop_id = 4)
 
 ThreadList::ShouldStop: 1 threads, 1 unsuspended threads
 Thread::ShouldStop(0x101732fb8) for tid = 0x546b 0x546b, pc = 0x0000000182da4e20
 ^^^^^^^^ Thread::ShouldStop Begin ^^^^^^^^
 Plan stack initial state:
  thread #1: tid = 0x546b:
    Active plan stack:
      Element 0: Base thread plan.

 Adding 1 modules.
 Adding new image at address=0x0000000100000000.
 address=0x0000000100000000 uuid=7F38ECE1-827D-351F-8E3C-886574F86827 path='/Users/shafinazahsan/github-classroom/FPC-advanced/fpc-advanced-classroom-1st-year-assignment-ShafinazAhsan/set01/problem08'
 		      __PAGEZERO [0x0000000000000000 - 0x0000000100000000)
 		          __TEXT [0x0000000100000000 - 0x0000000100004000)
 		    __DATA_CONST [0x0000000100004000 - 0x0000000100008000)
 		      __LINKEDIT [0x0000000100008000 - 0x000000010000c000)
 Hit breakpoint location: -9.1: 
  module = /usr/lib/dyld
  symbol = _dyld_debugger_notification
  address = 0x0000000182da4e20
  resolved = true
  hardware = false
  hit count = 1   
, continuing.

 StopInfo::ShouldStop async callback says we should not stop, returning ShouldStop of false.
 ThreadList::ShouldStop overall should_stop = 0
 ThreadList::ShouldReportStop 1 threads
 Thread::ShouldReportStop() tid = 0x546b: returning vote 0 for current plan
 Returning no opinion
 Process::ShouldBroadcastEvent: should_resume: 1 state: stopped was_restarted: 0 report_stop_vote: 0.
 Process::ShouldBroadcastEvent (0x101d05330) Restarting process from state: stopped
 Process::PrivateResume() m_stop_id = 4, public state: running private state: stopped
 Thread::PushPlan(0x0x101732fb8): "Single stepping past breakpoint site 20 at 0x182da4e20", tid = 0x546b.
 WillResume Thread #1 (0x0x101732fb8): tid = 0x546b, pc = 0x182da4e20, sp = 0x16fdfeb50, fp = 0x16fdfec00, plan = 'Step over breakpoint trap', state = stepping, stop others = 1
 GDBRemoteCommunicationClient::SendGDBStoppointTypePacket() remove at addr = 0x182da4e20
 (plugin = gdb-remote, state = running)
 Process thinks the process has resumed.
 Process::ShouldBroadcastEvent (0x101d05330) => new state: stopped, last broadcast state: running - NO
 Process::HandlePrivateEvent (pid = 2024) suppressing state stopped (old state running): should_broadcast == false
 timeout = <infinite>, event_sp)...
 Process::ShouldBroadcastEvent (0x1216fcc80) => new state: running, last broadcast state: running - NO
 Process::HandlePrivateEvent (pid = 2024) suppressing state running (old state running): should_broadcast == false
 timeout = <infinite>, event_sp)...
 (plugin = gdb-remote, state = stopped)
 (plugin = gdb-remote, state = stopped, stop_id = 5
 0x101732fb8: tid = 0x546b: stop info = <NULL> (stop_id = 5)
 0x101732fb8: tid = 0x546b: stop info = trace (stop_id = 5)
 
 ThreadList::ShouldStop: 1 threads, 1 unsuspended threads
 Thread::ShouldStop(0x101732fb8) for tid = 0x546b 0x546b, pc = 0x0000000182dedac8
 ^^^^^^^^ Thread::ShouldStop Begin ^^^^^^^^
 Plan stack initial state:
  thread #1: tid = 0x546b:
    Active plan stack:
      Element 0: Base thread plan.
      Element 1: Single stepping past breakpoint site 20 at 0x182da4e20

 Step over breakpoint stopped for reason: trace.
 Plan Step over breakpoint trap should stop: 0.
 Completed step over breakpoint plan.
 GDBRemoteCommunicationClient::SendGDBStoppointTypePacket() add at addr = 0x182da4e20
 Plan Step over breakpoint trap auto-continue: true.
 Popping plan: "Step over breakpoint trap", tid = 0x546b.
 Plan stack final state:
  thread #1: tid = 0x546b:
    Active plan stack:
      Element 0: Base thread plan.
    Completed plan stack:
      Element 0: Single stepping past breakpoint site 20 at 0x182da4e20

 vvvvvvvv Thread::ShouldStop End (returning 0) vvvvvvvv
 ThreadList::ShouldStop overall should_stop = 0
 ThreadList::ShouldReportStop 1 threads
 Thread::ShouldReportStop() tid = 0x546b: returning vote for complete stack's back plan
 Returning vote: no
 Returning no
 Process::ShouldBroadcastEvent: should_resume: 1 state: stopped was_restarted: 0 report_stop_vote: -1.
 Process::ShouldBroadcastEvent (0x1217fbd30) Restarting process from state: stopped
 Process::PrivateResume() m_stop_id = 5, public state: running private state: stopped
 WillResume Thread #1 (0x0x101732fb8): tid = 0x546b, pc = 0x182dedac8, sp = 0x16fdfeb50, fp = 0x16fdfec00, plan = 'base plan', state = running, stop others = 0
 (plugin = gdb-remote, state = running)
 Process thinks the process has resumed.
 Process::ShouldBroadcastEvent (0x1217fbd30) => new state: stopped, last broadcast state: running - NO
 Process::HandlePrivateEvent (pid = 2024) suppressing state stopped (old state running): should_broadcast == false
 timeout = <infinite>, event_sp)...
 Process::ShouldBroadcastEvent (0x101706240) => new state: running, last broadcast state: running - NO
 Process::HandlePrivateEvent (pid = 2024) suppressing state running (old state running): should_broadcast == false
 timeout = <infinite>, event_sp)...
 (plugin = gdb-remote, state = stopped)
 (plugin = gdb-remote, state = stopped, stop_id = 6
 0x101732fb8: tid = 0x546b: stop info = <NULL> (stop_id = 6)
 0x101732fb8: tid = 0x546b: stop info = shared-library-event (stop_id = 6)
 
 ThreadList::ShouldStop: 1 threads, 1 unsuspended threads
 Thread::ShouldStop(0x101732fb8) for tid = 0x546b 0x546b, pc = 0x0000000182da4e20
 ^^^^^^^^ Thread::ShouldStop Begin ^^^^^^^^
 Plan stack initial state:
  thread #1: tid = 0x546b:
    Active plan stack:
      Element 0: Base thread plan.

 Adding 41 modules.
 Adding new image at address=0x000000018f945000.
 address=0x000000018f945000 uuid=F0A54B2D-8751-35F1-A3CF-F1A02F842211 path='/usr/lib/libSystem.B.dylib'
 		          __TEXT [0x000000018f945000 - 0x000000018f947000) slide = 0x2cec000
 		    __DATA_CONST [0x00000001d71a5b98 - 0x00000001d71a5ba8) slide = 0x2cec000
 		    __AUTH_CONST [0x00000001df1a95a8 - 0x00000001df1a9878) slide = 0x2cec000
 		          __AUTH [0x00000001daa30650 - 0x00000001daa30658) slide = 0x2cec000
 		          __DATA [0x00000001d9432d60 - 0x00000001d9432d68) slide = 0x2cec000
 		      __LINKEDIT [0x000000023a91c000 - 0x0000000271f8c000) slide = 0x2cec000
 Adding new image at address=0x000000018f93f000.
 address=0x000000018f93f000 uuid=C683623C-1FF6-3133-9E28-28672FDBA4D3 path='/usr/lib/system/libcache.dylib'
 		          __TEXT [0x000000018f93f000 - 0x000000018f945000) slide = 0x2cec000
 		    __DATA_CONST [0x00000001d71a5af0 - 0x00000001d71a5b98) slide = 0x2cec000
 		    __AUTH_CONST [0x00000001df1a94d0 - 0x00000001df1a95a8) slide = 0x2cec000
 		      __LINKEDIT [0x000000023a91c000 - 0x0000000271f8c000) slide = 0x2cec000
 Adding new image at address=0x000000018f8fb000.
 address=0x000000018f8fb000 uuid=BFDF8F55-D3DC-3A92-B8A1-8EF165A56F1B path='/usr/lib/system/libcommonCrypto.dylib'
 		          __TEXT [0x000000018f8fb000 - 0x000000018f908ff8) slide = 0x2cec000
 		    __DATA_CONST [0x00000001d71a4b08 - 0x00000001d71a52a8) slide = 0x2cec000
 		    __AUTH_CONST [0x00000001df1a7558 - 0x00000001df1a8388) slide = 0x2cec000
 		          __AUTH [0x00000001daa30630 - 0x00000001daa30650) slide = 0x2cec000
 		      __LINKEDIT [0x000000023a91c000 - 0x0000000271f8c000) slide = 0x2cec000
 Adding new image at address=0x000000018f926000.
 address=0x000000018f926000 uuid=B29A99B2-7ADE-3371-A774-B690BEC3C406 path='/usr/lib/system/libcompiler_rt.dylib'
 		          __TEXT [0x000000018f926000 - 0x000000018f92a000) slide = 0x2cec000
 		    __AUTH_CONST [0x00000001df1a8c60 - 0x00000001df1a8cc0) slide = 0x2cec000
 		          __DATA [0x00000001d9431cf0 - 0x00000001d9432cf0) slide = 0x2cec000
 		      __LINKEDIT [0x000000023a91c000 - 0x0000000271f8c000) slide = 0x2cec000
 Adding new image at address=0x000000018f91c000.
 address=0x000000018f91c000 uuid=65612C42-C5E4-3821-B71D-DDE620FB014C path='/usr/lib/system/libcopyfile.dylib'
 		          __TEXT [0x000000018f91c000 - 0x000000018f925ff4) slide = 0x2cec000
 		    __DATA_CONST [0x00000001d71a5600 - 0x00000001d71a59e0) slide = 0x2cec000
 		    __AUTH_CONST [0x00000001df1a8800 - 0x00000001df1a8c60) slide = 0x2cec000
 		          __DATA [0x00000001d9431ce0 - 0x00000001d9431cf0) slide = 0x2cec000
 		      __LINKEDIT [0x000000023a91c000 - 0x0000000271f8c000) slide = 0x2cec000
 Adding new image at address=0x0000000182e9e000.
 address=0x0000000182e9e000 uuid=B3AC12C0-8ED6-35A2-86C6-0BFA55BFF333 path='/usr/lib/system/libcorecrypto.dylib'
 		          __TEXT [0x0000000182e9e000 - 0x0000000182f3afc8) slide = 0x2cec000
 		    __DATA_CONST [0x00000001d70f4000 - 0x00000001d70f4f10) slide = 0x2cec000
 		    __AUTH_CONST [0x00000001de277680 - 0x00000001de279188) slide = 0x2cec000
 		          __AUTH [0x00000001da8acc08 - 0x00000001da8accc8) slide = 0x2cec000
 		          __DATA [0x00000001d9270590 - 0x00000001d92788f0) slide = 0x2cec000
 		    __DATA_DIRTY [0x00000001da3ebdc8 - 0x00000001da3ebea0) slide = 0x2cec000
 		      __LINKEDIT [0x000000023a91c000 - 0x0000000271f8c000) slide = 0x2cec000
 Adding new image at address=0x0000000182f72000.
 address=0x0000000182f72000 uuid=8790BA20-19EC-3A36-8975-E34382D9747C path='/usr/lib/system/libdispatch.dylib'
 		          __TEXT [0x0000000182f72000 - 0x0000000182fb9000) slide = 0x2cec000
 		    __DATA_CONST [0x00000001de279a40 - 0x00000001de28dd70) slide = 0x2cec000
 		          __DATA [0x00000001da8b8000 - 0x00000001da8b93a0) slide = 0x2cec000
 		    __DATA_DIRTY [0x00000001da3ec0c0 - 0x00000001da3efae8) slide = 0x2cec000
 		      __LINKEDIT [0x000000023a91c000 - 0x0000000271f8c000) slide = 0x2cec000
 Adding new image at address=0x0000000183129000.
 address=0x0000000183129000 uuid=4BB77515-DBA8-3EDF-9AF7-3C9EAE959EA6 path='/usr/lib/system/libdyld.dylib'
 		          __TEXT [0x0000000183129000 - 0x000000018314e000) slide = 0x2cec000
 		    __DATA_CONST [0x00000001d70f9aa8 - 0x00000001d70f9ee8) slide = 0x2cec000
 		    __AUTH_CONST [0x00000001de294230 - 0x00000001de294e08) slide = 0x2cec000
 		          __AUTH [0x00000001da8bc5d0 - 0x00000001da8bc620) slide = 0x2cec000
 		          __DATA [0x00000001d9294048 - 0x00000001d92940b8) slide = 0x2cec000
 		    __DATA_DIRTY [0x00000001da3fd838 - 0x00000001da3fd858) slide = 0x2cec000
 		  __SHARED_CACHE [0x00000001d92940b8 - 0x00000001d92940b8) slide = 0x2cec000
 		      __LINKEDIT [0x000000023a91c000 - 0x0000000271f8c000) slide = 0x2cec000
 Adding new image at address=0x000000018f935000.
 address=0x000000018f935000 uuid=F7CE9486-FFF5-3CB8-B26F-75811EF4283A path='/usr/lib/system/libkeymgr.dylib'
 		          __TEXT [0x000000018f935000 - 0x000000018f935ffc) slide = 0x2cec000
 		    __DATA_CONST [0x00000001d71a5a68 - 0x00000001d71a5a78) slide = 0x2cec000
 		    __AUTH_CONST [0x00000001df1a9268 - 0x00000001df1a92e8) slide = 0x2cec000
 		      __LINKEDIT [0x000000023a91c000 - 0x0000000271f8c000) slide = 0x2cec000
 Adding new image at address=0x000000018f8d3000.
 address=0x000000018f8d3000 uuid=1A7038EC-EE49-35AE-8A3C-C311083795FB path='/usr/lib/system/libmacho.dylib'
 		          __TEXT [0x000000018f8d3000 - 0x000000018f8daffc) slide = 0x2cec000
 		    __DATA_CONST [0x00000001d71a4388 - 0x00000001d71a4ad0) slide = 0x2cec000
 		    __AUTH_CONST [0x00000001df1a73d0 - 0x00000001df1a7440) slide = 0x2cec000
 		      __LINKEDIT [0x000000023a91c000 - 0x0000000271f8c000) slide = 0x2cec000
 Adding new image at address=0x000000018ee73000.
 address=0x000000018ee73000 uuid=3011123B-C35C-35FC-AB0B-8D775C9109D1 path='/usr/lib/system/libquarantine.dylib'
 		          __TEXT [0x000000018ee73000 - 0x000000018ee75ffc) slide = 0x2cec000
 		    __DATA_CONST [0x00000001d719f9d8 - 0x00000001d719fa28) slide = 0x2cec000
 		    __AUTH_CONST [0x00000001df030da8 - 0x00000001df030eb8) slide = 0x2cec000
 		          __DATA [0x00000001d941e810 - 0x00000001d941e820) slide = 0x2cec000
 		      __LINKEDIT [0x000000023a91c000 - 0x0000000271f8c000) slide = 0x2cec000
 Adding new image at address=0x000000018f932000.
 address=0x000000018f932000 uuid=CE63E895-25E4-350C-BB79-0EFD3AC899E5 path='/usr/lib/system/libremovefile.dylib'
 		          __TEXT [0x000000018f932000 - 0x000000018f934ffc) slide = 0x2cec000
 		    __DATA_CONST [0x00000001d71a5a58 - 0x00000001d71a5a68) slide = 0x2cec000
 		    __AUTH_CONST [0x00000001df1a90e8 - 0x00000001df1a9268) slide = 0x2cec000
 		      __LINKEDIT [0x000000023a91c000 - 0x0000000271f8c000) slide = 0x2cec000
 Adding new image at address=0x00000001887e6000.
 address=0x00000001887e6000 uuid=2EA1DA8E-A94D-32EA-A64F-DD586FE72599 path='/usr/lib/system/libsystem_asl.dylib'
 		          __TEXT [0x00000001887e6000 - 0x00000001887fe000) slide = 0x2cec000
 		    __DATA_CONST [0x00000001d711d8c0 - 0x00000001d711dee0) slide = 0x2cec000
 		    __AUTH_CONST [0x00000001de984800 - 0x00000001de985248) slide = 0x2cec000
 		          __DATA [0x00000001d9361460 - 0x00000001d9361570) slide = 0x2cec000
 		    __DATA_DIRTY [0x00000001da44bd80 - 0x00000001da44bedc) slide = 0x2cec000
 		      __LINKEDIT [0x000000023a91c000 - 0x0000000271f8c000) slide = 0x2cec000
 Adding new image at address=0x0000000182e37000.
 address=0x0000000182e37000 uuid=A81CDBDB-D1B1-386E-9029-2F6E0F685E3A path='/usr/lib/system/libsystem_blocks.dylib'
 		          __TEXT [0x0000000182e37000 - 0x0000000182e3bff9) slide = 0x2cec000
 		    __DATA_CONST [0x00000001de26f380 - 0x00000001de26f6f0) slide = 0x2cec000
 		    __AUTH_CONST [0x00000001de26f6f0 - 0x00000001de26f8c0) slide = 0x2cec000
 		          __DATA [0x00000001d926f5e0 - 0x00000001d926f5f8) slide = 0x2cec000
 		    __DATA_DIRTY [0x00000001da3eac20 - 0x00000001da3eae18) slide = 0x2cec000
 		      __LINKEDIT [0x000000023a91c000 - 0x0000000271f8c000) slide = 0x2cec000
 Adding new image at address=0x0000000182fbc000.
 address=0x0000000182fbc000 uuid=1B84A7E4-8958-330C-98B8-27D491DFF69E path='/usr/lib/system/libsystem_c.dylib'
 		          __TEXT [0x0000000182fbc000 - 0x000000018303aff4) slide = 0x2cec000
 		    __DATA_CONST [0x00000001d70f5140 - 0x00000001d70f69c8) slide = 0x2cec000
 		    __AUTH_CONST [0x00000001de28def0 - 0x00000001de28e848) slide = 0x2cec000
 		          __AUTH [0x00000001da8b93a0 - 0x00000001da8ba0c0) slide = 0x2cec000
 		          __DATA [0x00000001d927ac30 - 0x00000001d927cdb0) slide = 0x2cec000
 		    __DATA_DIRTY [0x00000001da3efaf8 - 0x00000001da3f2680) slide = 0x2cec000
 		      __LINKEDIT [0x000000023a91c000 - 0x0000000271f8c000) slide = 0x2cec000
 Adding new image at address=0x000000018f92a000.
 address=0x000000018f92a000 uuid=FA0C6F96-A737-3F29-B640-99E313873A21 path='/usr/lib/system/libsystem_collections.dylib'
 		          __TEXT [0x000000018f92a000 - 0x000000018f92effc) slide = 0x2cec000
 		    __DATA_CONST [0x00000001d71a59e0 - 0x00000001d71a59e8) slide = 0x2cec000
 		    __AUTH_CONST [0x00000001df1a8cc0 - 0x00000001df1a8e10) slide = 0x2cec000
 		      __LINKEDIT [0x000000023a91c000 - 0x0000000271f8c000) slide = 0x2cec000
 Adding new image at address=0x000000018e155000.
 address=0x000000018e155000 uuid=5E85DB71-174E-3E61-A3C9-36D5E0CBBF46 path='/usr/lib/system/libsystem_configuration.dylib'
 		          __TEXT [0x000000018e155000 - 0x000000018e15a000) slide = 0x2cec000
 		    __DATA_CONST [0x00000001d719c2c8 - 0x00000001d719c4a0) slide = 0x2cec000
 		    __AUTH_CONST [0x00000001defb7400 - 0x00000001defb7728) slide = 0x2cec000
 		          __DATA [0x00000001d9409520 - 0x00000001d94095e1) slide = 0x2cec000
 		      __LINKEDIT [0x000000023a91c000 - 0x0000000271f8c000) slide = 0x2cec000
 Adding new image at address=0x000000018d1e5000.
 address=0x000000018d1e5000 uuid=8E716F51-A02E-3005-9F6F-84163BFAF1AE path='/usr/lib/system/libsystem_containermanager.dylib'
 		          __TEXT [0x000000018d1e5000 - 0x000000018d20effc) slide = 0x2cec000
 		    __DATA_CONST [0x00000001d7175358 - 0x00000001d7175ef0) slide = 0x2cec000
 		    __AUTH_CONST [0x00000001dee086a0 - 0x00000001dee09f68) slide = 0x2cec000
 		          __AUTH [0x00000001daa0bd28 - 0x00000001daa0be90) slide = 0x2cec000
 		          __DATA [0x00000001d93deb10 - 0x00000001d93dee88) slide = 0x2cec000
 		      __LINKEDIT [0x000000023a91c000 - 0x0000000271f8c000) slide = 0x2cec000
 Adding new image at address=0x000000018f578000.
 address=0x000000018f578000 uuid=0ECFD7D1-0230-3C32-BDD7-4715D94A28E6 path='/usr/lib/system/libsystem_coreservices.dylib'
 		          __TEXT [0x000000018f578000 - 0x000000018f57dffc) slide = 0x2cec000
 		    __DATA_CONST [0x00000001d71a21c8 - 0x00000001d71a2a68) slide = 0x2cec000
 		    __AUTH_CONST [0x00000001df157000 - 0x00000001df1572e8) slide = 0x2cec000
 		          __DATA [0x00000001d9427960 - 0x00000001d9427a08) slide = 0x2cec000
 		      __LINKEDIT [0x000000023a91c000 - 0x0000000271f8c000) slide = 0x2cec000
 Adding new image at address=0x00000001864c5000.
 address=0x00000001864c5000 uuid=67509907-7BCE-3723-A305-0B042A41FDA5 path='/usr/lib/system/libsystem_darwin.dylib'
 		          __TEXT [0x00000001864c5000 - 0x00000001864cfff8) slide = 0x2cec000
 		    __DATA_CONST [0x00000001d710d958 - 0x00000001d71102d8) slide = 0x2cec000
 		    __AUTH_CONST [0x00000001de7f9260 - 0x00000001de7f96a8) slide = 0x2cec000
 		          __DATA [0x00000001d933af50 - 0x00000001d933af60) slide = 0x2cec000
 		    __DATA_DIRTY [0x00000001da414098 - 0x00000001da4140c8) slide = 0x2cec000
 		      __LINKEDIT [0x000000023a91c000 - 0x0000000271f8c000) slide = 0x2cec000
 Adding new image at address=0x00000002224e3000.
 address=0x00000002224e3000 uuid=F1E52C1A-7156-3BED-AD5B-1CE3AFFDFCE3 path='/usr/lib/system/libsystem_darwindirectory.dylib'
 		          __TEXT [0x00000002224e3000 - 0x00000002224e7000) slide = 0x2cec000
 		    __DATA_CONST [0x000000022ed74e28 - 0x000000022ed74fb0) slide = 0x2cec000
 		    __AUTH_CONST [0x0000000238335a50 - 0x0000000238335d90) slide = 0x2cec000
 		          __DATA [0x0000000232079378 - 0x00000002320793b8) slide = 0x2cec000
 		      __LINKEDIT [0x000000023a91c000 - 0x0000000271f8c000) slide = 0x2cec000
 Adding new image at address=0x000000018f936000.
 address=0x000000018f936000 uuid=82426BAB-A0A9-3C99-8A86-DABB3A0BA072 path='/usr/lib/system/libsystem_dnssd.dylib'
 		          __TEXT [0x000000018f936000 - 0x000000018f93f000) slide = 0x2cec000
 		    __DATA_CONST [0x00000001d71a5a78 - 0x00000001d71a5af0) slide = 0x2cec000
 		    __AUTH_CONST [0x00000001df1a92e8 - 0x00000001df1a94d0) slide = 0x2cec000
 		          __DATA [0x00000001d9432d30 - 0x00000001d9432d60) slide = 0x2cec000
 		      __LINKEDIT [0x000000023a91c000 - 0x0000000271f8c000) slide = 0x2cec000
 Adding new image at address=0x0000000182fb9000.
 address=0x0000000182fb9000 uuid=0C18273A-0DB8-3522-853B-67A2187EEF07 path='/usr/lib/system/libsystem_featureflags.dylib'
 		          __TEXT [0x0000000182fb9000 - 0x0000000182fbc000) slide = 0x2cec000
 		    __DATA_CONST [0x00000001d70f5100 - 0x00000001d70f5140) slide = 0x2cec000
 		    __AUTH_CONST [0x00000001de28dd70 - 0x00000001de28def0) slide = 0x2cec000
 		          __DATA [0x00000001d927abe8 - 0x00000001d927ac21) slide = 0x2cec000
 		    __DATA_DIRTY [0x00000001da3efae8 - 0x00000001da3efaf8) slide = 0x2cec000
 		      __LINKEDIT [0x000000023a91c000 - 0x0000000271f8c000) slide = 0x2cec000
 Adding new image at address=0x0000000183155000.
 address=0x0000000183155000 uuid=8F2A7530-B8D3-3705-B2B7-9347D9495223 path='/usr/lib/system/libsystem_info.dylib'
 		          __TEXT [0x0000000183155000 - 0x0000000183181ffc) slide = 0x2cec000
 		    __DATA_CONST [0x00000001d70f9f08 - 0x00000001d70fa468) slide = 0x2cec000
 		    __AUTH_CONST [0x00000001de295018 - 0x00000001de2961b0) slide = 0x2cec000
 		          __AUTH [0x00000001da8bc620 - 0x00000001da8bc7f0) slide = 0x2cec000
 		          __DATA [0x00000001d92940f8 - 0x00000001d9294c88) slide = 0x2cec000
 		    __DATA_DIRTY [0x00000001da3fd870 - 0x00000001da3fdb18) slide = 0x2cec000
 		      __LINKEDIT [0x000000023a91c000 - 0x0000000271f8c000) slide = 0x2cec000
 Adding new image at address=0x000000018f898000.
 address=0x000000018f898000 uuid=72899DE6-A120-389C-90DC-B94C392EF655 path='/usr/lib/system/libsystem_m.dylib'
 		          __TEXT [0x000000018f898000 - 0x000000018f8ceff4) slide = 0x2cec000
 		    __AUTH_CONST [0x00000001df1a73a0 - 0x00000001df1a73c0) slide = 0x2cec000
 		          __DATA [0x00000001d9430224 - 0x00000001d9430228) slide = 0x2cec000
 		      __LINKEDIT [0x000000023a91c000 - 0x0000000271f8c000) slide = 0x2cec000
 Adding new image at address=0x0000000182f3b000.
 address=0x0000000182f3b000 uuid=00379936-C90E-3D9D-A569-3F97338F1472 path='/usr/lib/system/libsystem_malloc.dylib'
 		          __TEXT [0x0000000182f3b000 - 0x0000000182f72000) slide = 0x2cec000
 		    __DATA_CONST [0x00000001d70f4f10 - 0x00000001d70f5100) slide = 0x2cec000
 		    __AUTH_CONST [0x00000001de279188 - 0x00000001de279a38) slide = 0x2cec000
 		          __AUTH [0x00000001da8b0000 - 0x00000001da8b8000) slide = 0x2cec000
 		          __DATA [0x00000001d92788f0 - 0x00000001d927abe4) slide = 0x2cec000
 		    __DATA_DIRTY [0x00000001da3ebea0 - 0x00000001da3ec0b0) slide = 0x2cec000
 		      __LINKEDIT [0x000000023a91c000 - 0x0000000271f8c000) slide = 0x2cec000
 Adding new image at address=0x0000000188756000.
 address=0x0000000188756000 uuid=9DBF57DB-0008-3584-89A3-1463AB9E4967 path='/usr/lib/system/libsystem_networkextension.dylib'
 		          __TEXT [0x0000000188756000 - 0x000000018876fff8) slide = 0x2cec000
 		    __DATA_CONST [0x00000001d711d218 - 0x00000001d711d898) slide = 0x2cec000
 		    __AUTH_CONST [0x00000001de915cb8 - 0x00000001de9168d8) slide = 0x2cec000
 		          __DATA [0x00000001d93606a8 - 0x00000001d9360d78) slide = 0x2cec000
 		    __DATA_DIRTY [0x00000001da44a560 - 0x00000001da44a5a0) slide = 0x2cec000
 		      __LINKEDIT [0x000000023a91c000 - 0x0000000271f8c000) slide = 0x2cec000
 Adding new image at address=0x0000000186937000.
 address=0x0000000186937000 uuid=7DA7113E-E87A-3E78-AD4F-77F6EC076E42 path='/usr/lib/system/libsystem_notify.dylib'
 		          __TEXT [0x0000000186937000 - 0x0000000186948000) slide = 0x2cec000
 		    __DATA_CONST [0x00000001d7110ff0 - 0x00000001d7111148) slide = 0x2cec000
 		    __AUTH_CONST [0x00000001de820ac0 - 0x00000001de820e40) slide = 0x2cec000
 		          __DATA [0x00000001d9343f80 - 0x00000001d9343fd1) slide = 0x2cec000
 		    __DATA_DIRTY [0x00000001da4171b8 - 0x00000001da4171c0) slide = 0x2cec000
 		      __LINKEDIT [0x000000023a91c000 - 0x0000000271f8c000) slide = 0x2cec000
 Adding new image at address=0x000000018e15a000.
 address=0x000000018e15a000 uuid=3BC895C5-B10E-39F4-B761-E79D5719FB1D path='/usr/lib/system/libsystem_sandbox.dylib'
 		          __TEXT [0x000000018e15a000 - 0x000000018e15fff4) slide = 0x2cec000
 		    __DATA_CONST [0x00000001d719c4a0 - 0x00000001d719c520) slide = 0x2cec000
 		    __AUTH_CONST [0x00000001defb7728 - 0x00000001defb7930) slide = 0x2cec000
 		          __DATA [0x00000001d94095e8 - 0x00000001d9409610) slide = 0x2cec000
 		      __LINKEDIT [0x000000023a91c000 - 0x0000000271f8c000) slide = 0x2cec000
 Adding new image at address=0x000000018f92f000.
 address=0x000000018f92f000 uuid=1C92CD80-54E6-3E70-BB3C-7264A160AD7C path='/usr/lib/system/libsystem_secinit.dylib'
 		          __TEXT [0x000000018f92f000 - 0x000000018f931ffc) slide = 0x2cec000
 		    __DATA_CONST [0x00000001d71a59e8 - 0x00000001d71a5a58) slide = 0x2cec000
 		    __AUTH_CONST [0x00000001df1a8e10 - 0x00000001df1a90e8) slide = 0x2cec000
 		          __DATA [0x00000001d9432cf0 - 0x00000001d9432d30) slide = 0x2cec000
 		      __LINKEDIT [0x000000023a91c000 - 0x0000000271f8c000) slide = 0x2cec000
 Adding new image at address=0x00000001830e1000.
 address=0x00000001830e1000 uuid=A7D3C07D-0A1E-3C4C-8FBA-66905E16BF99 path='/usr/lib/system/libsystem_kernel.dylib'
 		          __TEXT [0x00000001830e1000 - 0x000000018311bff0) slide = 0x2cec000
 		    __DATA_CONST [0x00000001d70f7790 - 0x00000001d70f9a70) slide = 0x2cec000
 		    __AUTH_CONST [0x00000001de293ee0 - 0x00000001de294000) slide = 0x2cec000
 		          __DATA [0x00000001d9283e18 - 0x00000001d9284090) slide = 0x2cec000
 		    __DATA_DIRTY [0x00000001da3f3988 - 0x00000001da3f405c) slide = 0x2cec000
 		      __LINKEDIT [0x000000023a91c000 - 0x0000000271f8c000) slide = 0x2cec000
 Adding new image at address=0x000000018314e000.
 address=0x000000018314e000 uuid=E7E2F10A-772A-397F-BD19-A7EA5A54E49F path='/usr/lib/system/libsystem_platform.dylib'
 		          __TEXT [0x000000018314e000 - 0x0000000183154ffc) slide = 0x2cec000
 		    __DATA_CONST [0x00000001d70f9ee8 - 0x00000001d70f9f08) slide = 0x2cec000
 		    __AUTH_CONST [0x00000001de294e08 - 0x00000001de295018) slide = 0x2cec000
 		          __DATA [0x00000001d92940b8 - 0x00000001d92940f8) slide = 0x2cec000
 		    __DATA_DIRTY [0x00000001da3fd858 - 0x00000001da3fd86c) slide = 0x2cec000
 		      __LINKEDIT [0x000000023a91c000 - 0x0000000271f8c000) slide = 0x2cec000
 Adding new image at address=0x000000018311c000.
 address=0x000000018311c000 uuid=E4DEBB6E-421D-33D0-9E17-77AE0E0FE4DC path='/usr/lib/system/libsystem_pthread.dylib'
 		          __TEXT [0x000000018311c000 - 0x0000000183128ff4) slide = 0x2cec000
 		    __DATA_CONST [0x00000001d70f9a70 - 0x00000001d70f9aa8) slide = 0x2cec000
 		    __AUTH_CONST [0x00000001de294000 - 0x00000001de294230) slide = 0x2cec000
 		          __DATA [0x00000001d9288000 - 0x00000001d9294046) slide = 0x2cec000
 		    __DATA_DIRTY [0x00000001da3f8000 - 0x00000001da3fd838) slide = 0x2cec000
 		      __LINKEDIT [0x000000023a91c000 - 0x0000000271f8c000) slide = 0x2cec000
 Adding new image at address=0x000000018a199000.
 address=0x000000018a199000 uuid=2D7D536C-1D08-304A-9E67-BFB1E99301FE path='/usr/lib/system/libsystem_symptoms.dylib'
 		          __TEXT [0x000000018a199000 - 0x000000018a1a1ff4) slide = 0x2cec000
 		    __DATA_CONST [0x00000001d7123ff0 - 0x00000001d71241a0) slide = 0x2cec000
 		    __AUTH_CONST [0x00000001dea5bf78 - 0x00000001dea5c240) slide = 0x2cec000
 		          __DATA [0x00000001d938f698 - 0x00000001d938f6d8) slide = 0x2cec000
 		    __DATA_DIRTY [0x00000001da4565d8 - 0x00000001da4565e8) slide = 0x2cec000
 		      __LINKEDIT [0x000000023a91c000 - 0x0000000271f8c000) slide = 0x2cec000
 Adding new image at address=0x0000000182e83000.
 address=0x0000000182e83000 uuid=4AF0EA7D-E9F4-30E7-914D-FB292EDB7F37 path='/usr/lib/system/libsystem_trace.dylib'
 		          __TEXT [0x0000000182e83000 - 0x0000000182e9e000) slide = 0x2cec000
 		    __DATA_CONST [0x00000001de275ef8 - 0x00000001de276808) slide = 0x2cec000
 		    __AUTH_CONST [0x00000001de276808 - 0x00000001de277680) slide = 0x2cec000
 		          __AUTH [0x00000001da8aca50 - 0x00000001da8acc08) slide = 0x2cec000
 		          __DATA [0x00000001d9270368 - 0x00000001d9270590) slide = 0x2cec000
 		    __DATA_DIRTY [0x00000001da3eb958 - 0x00000001da3ebdc8) slide = 0x2cec000
 		      __LINKEDIT [0x000000023a91c000 - 0x0000000271f8c000) slide = 0x2cec000
 Adding new image at address=0x000000018f909000.
 address=0x000000018f909000 uuid=FB2051CF-36B6-348F-B8DF-5B2F702F6290 path='/usr/lib/system/libunwind.dylib'
 		          __TEXT [0x000000018f909000 - 0x000000018f914000) slide = 0x2cec000
 		    __DATA_CONST [0x00000001d71a52a8 - 0x00000001d71a55c8) slide = 0x2cec000
 		    __AUTH_CONST [0x00000001df1a8388 - 0x00000001df1a8498) slide = 0x2cec000
 		          __DATA [0x00000001d94302b0 - 0x00000001d9430cb1) slide = 0x2cec000
 		      __LINKEDIT [0x000000023a91c000 - 0x0000000271f8c000) slide = 0x2cec000
 Adding new image at address=0x0000000182e3c000.
 address=0x0000000182e3c000 uuid=84971772-939B-3130-8908-B7A38851A516 path='/usr/lib/system/libxpc.dylib'
 		          __TEXT [0x0000000182e3c000 - 0x0000000182e83000) slide = 0x2cec000
 		    __DATA_CONST [0x00000001de26f8c0 - 0x00000001de275ef8) slide = 0x2cec000
 		          __DATA [0x00000001d926f5f8 - 0x00000001d9270368) slide = 0x2cec000
 		    __DATA_DIRTY [0x00000001da3eae18 - 0x00000001da3eb958) slide = 0x2cec000
 		      __LINKEDIT [0x000000023a91c000 - 0x0000000271f8c000) slide = 0x2cec000
 Adding new image at address=0x00000001830c9000.
 address=0x00000001830c9000 uuid=43940F08-B65E-3888-8CD3-C52398EB1CA1 path='/usr/lib/libc++abi.dylib'
 		          __TEXT [0x00000001830c9000 - 0x00000001830e1000) slide = 0x2cec000
 		    __DATA_CONST [0x00000001d70f7338 - 0x00000001d70f7790) slide = 0x2cec000
 		    __AUTH_CONST [0x00000001de290b80 - 0x00000001de293ee0) slide = 0x2cec000
 		          __AUTH [0x00000001da8bc578 - 0x00000001da8bc5d0) slide = 0x2cec000
 		          __DATA [0x00000001d9283ac0 - 0x00000001d9283e18) slide = 0x2cec000
 		    __DATA_DIRTY [0x00000001da3f3960 - 0x00000001da3f3988) slide = 0x2cec000
 		      __LINKEDIT [0x000000023a91c000 - 0x0000000271f8c000) slide = 0x2cec000
 Adding new image at address=0x0000000182d54000.
 address=0x0000000182d54000 uuid=1C0364B5-D7E3-3170-BAA6-9C28F400E7CC path='/usr/lib/libobjc.A.dylib'
 		          __TEXT [0x0000000182d54000 - 0x0000000182da2f09) slide = 0x2cec000
 		    __DATA_CONST [0x00000001de268000 - 0x00000001de268fb8) slide = 0x2cec000
 		    __AUTH_CONST [0x00000001de268fc0 - 0x00000001de269bd0) slide = 0x2cec000
 		          __AUTH [0x00000001da8a9e08 - 0x00000001da8a9e80) slide = 0x2cec000
 		          __DATA [0x00000001d926c000 - 0x00000001d926f5e0) slide = 0x2cec000
 		    __DATA_DIRTY [0x00000001da3e6280 - 0x00000001da3e9090) slide = 0x2cec000
 		       __OBJC_RO [0x00000001d2a5b360 - 0x00000001d70f3ff8) slide = 0x2cec000
 		       __OBJC_RW [0x00000001da1cc000 - 0x00000001da3e6260) slide = 0x2cec000
 		      __LINKEDIT [0x000000023a91c000 - 0x0000000271f8c000) slide = 0x2cec000
 Adding new image at address=0x000000018f914000.
 address=0x000000018f914000 uuid=5A83FBC3-0944-3D77-8DF2-03E262F67AFA path='/usr/lib/liboah.dylib'
 		          __TEXT [0x000000018f914000 - 0x000000018f91c000) slide = 0x2cec000
 		    __DATA_CONST [0x00000001d71a55c8 - 0x00000001d71a5600) slide = 0x2cec000
 		    __AUTH_CONST [0x00000001df1a8498 - 0x00000001df1a8800) slide = 0x2cec000
 		          __DATA [0x00000001d9430cb8 - 0x00000001d9431ce0) slide = 0x2cec000
 		      __LINKEDIT [0x000000023a91c000 - 0x0000000271f8c000) slide = 0x2cec000
 Adding new image at address=0x000000018303b000.
 address=0x000000018303b000 uuid=93FBD681-FC78-33A3-AFFE-568702676142 path='/usr/lib/libc++.1.dylib'
 		          __TEXT [0x000000018303b000 - 0x00000001830c8ff8) slide = 0x2cec000
 		    __DATA_CONST [0x00000001d70f69c8 - 0x00000001d70f7338) slide = 0x2cec000
 		    __AUTH_CONST [0x00000001de28e848 - 0x00000001de290b80) slide = 0x2cec000
 		          __AUTH [0x00000001da8ba0c0 - 0x00000001da8bc578) slide = 0x2cec000
 		          __DATA [0x00000001d927d000 - 0x00000001d9283ac0) slide = 0x2cec000
 		    __DATA_DIRTY [0x00000001da3f2680 - 0x00000001da3f3960) slide = 0x2cec000
 		      __LINKEDIT [0x000000023a91c000 - 0x0000000271f8c000) slide = 0x2cec000
 DynamicLoaderDarwin::ModulesDidLoad[0] F0A54B2D-8751-35F1-A3CF-F1A02F842211 (arm64e) "/usr/lib/libSystem.B.dylib"
 DynamicLoaderDarwin::ModulesDidLoad[1] C683623C-1FF6-3133-9E28-28672FDBA4D3 (arm64e) "/usr/lib/system/libcache.dylib"
 DynamicLoaderDarwin::ModulesDidLoad[2] BFDF8F55-D3DC-3A92-B8A1-8EF165A56F1B (arm64e) "/usr/lib/system/libcommonCrypto.dylib"
 DynamicLoaderDarwin::ModulesDidLoad[3] B29A99B2-7ADE-3371-A774-B690BEC3C406 (arm64e) "/usr/lib/system/libcompiler_rt.dylib"
 DynamicLoaderDarwin::ModulesDidLoad[4] 65612C42-C5E4-3821-B71D-DDE620FB014C (arm64e) "/usr/lib/system/libcopyfile.dylib"
 DynamicLoaderDarwin::ModulesDidLoad[5] B3AC12C0-8ED6-35A2-86C6-0BFA55BFF333 (arm64e) "/usr/lib/system/libcorecrypto.dylib"
 DynamicLoaderDarwin::ModulesDidLoad[6] 8790BA20-19EC-3A36-8975-E34382D9747C (arm64e) "/usr/lib/system/libdispatch.dylib"
 DynamicLoaderDarwin::ModulesDidLoad[7] 4BB77515-DBA8-3EDF-9AF7-3C9EAE959EA6 (arm64e) "/usr/lib/system/libdyld.dylib"
 DynamicLoaderDarwin::ModulesDidLoad[8] F7CE9486-FFF5-3CB8-B26F-75811EF4283A (arm64e) "/usr/lib/system/libkeymgr.dylib"
 DynamicLoaderDarwin::ModulesDidLoad[9] 1A7038EC-EE49-35AE-8A3C-C311083795FB (arm64e) "/usr/lib/system/libmacho.dylib"
 DynamicLoaderDarwin::ModulesDidLoad[10] 3011123B-C35C-35FC-AB0B-8D775C9109D1 (arm64e) "/usr/lib/system/libquarantine.dylib"
 DynamicLoaderDarwin::ModulesDidLoad[11] CE63E895-25E4-350C-BB79-0EFD3AC899E5 (arm64e) "/usr/lib/system/libremovefile.dylib"
 DynamicLoaderDarwin::ModulesDidLoad[12] 2EA1DA8E-A94D-32EA-A64F-DD586FE72599 (arm64e) "/usr/lib/system/libsystem_asl.dylib"
 DynamicLoaderDarwin::ModulesDidLoad[13] A81CDBDB-D1B1-386E-9029-2F6E0F685E3A (arm64e) "/usr/lib/system/libsystem_blocks.dylib"
 DynamicLoaderDarwin::ModulesDidLoad[14] 1B84A7E4-8958-330C-98B8-27D491DFF69E (arm64e) "/usr/lib/system/libsystem_c.dylib"
 DynamicLoaderDarwin::ModulesDidLoad[15] FA0C6F96-A737-3F29-B640-99E313873A21 (arm64e) "/usr/lib/system/libsystem_collections.dylib"
 DynamicLoaderDarwin::ModulesDidLoad[16] 5E85DB71-174E-3E61-A3C9-36D5E0CBBF46 (arm64e) "/usr/lib/system/libsystem_configuration.dylib"
 DynamicLoaderDarwin::ModulesDidLoad[17] 8E716F51-A02E-3005-9F6F-84163BFAF1AE (arm64e) "/usr/lib/system/libsystem_containermanager.dylib"
 DynamicLoaderDarwin::ModulesDidLoad[18] 0ECFD7D1-0230-3C32-BDD7-4715D94A28E6 (arm64e) "/usr/lib/system/libsystem_coreservices.dylib"
 DynamicLoaderDarwin::ModulesDidLoad[19] 67509907-7BCE-3723-A305-0B042A41FDA5 (arm64e) "/usr/lib/system/libsystem_darwin.dylib"
 DynamicLoaderDarwin::ModulesDidLoad[20] F1E52C1A-7156-3BED-AD5B-1CE3AFFDFCE3 (arm64e) "/usr/lib/system/libsystem_darwindirectory.dylib"
 DynamicLoaderDarwin::ModulesDidLoad[21] 82426BAB-A0A9-3C99-8A86-DABB3A0BA072 (arm64e) "/usr/lib/system/libsystem_dnssd.dylib"
 DynamicLoaderDarwin::ModulesDidLoad[22] 0C18273A-0DB8-3522-853B-67A2187EEF07 (arm64e) "/usr/lib/system/libsystem_featureflags.dylib"
 DynamicLoaderDarwin::ModulesDidLoad[23] 8F2A7530-B8D3-3705-B2B7-9347D9495223 (arm64e) "/usr/lib/system/libsystem_info.dylib"
 DynamicLoaderDarwin::ModulesDidLoad[24] 72899DE6-A120-389C-90DC-B94C392EF655 (arm64e) "/usr/lib/system/libsystem_m.dylib"
 DynamicLoaderDarwin::ModulesDidLoad[25] 00379936-C90E-3D9D-A569-3F97338F1472 (arm64e) "/usr/lib/system/libsystem_malloc.dylib"
 DynamicLoaderDarwin::ModulesDidLoad[26] 9DBF57DB-0008-3584-89A3-1463AB9E4967 (arm64e) "/usr/lib/system/libsystem_networkextension.dylib"
 DynamicLoaderDarwin::ModulesDidLoad[27] 7DA7113E-E87A-3E78-AD4F-77F6EC076E42 (arm64e) "/usr/lib/system/libsystem_notify.dylib"
 DynamicLoaderDarwin::ModulesDidLoad[28] 3BC895C5-B10E-39F4-B761-E79D5719FB1D (arm64e) "/usr/lib/system/libsystem_sandbox.dylib"
 DynamicLoaderDarwin::ModulesDidLoad[29] 1C92CD80-54E6-3E70-BB3C-7264A160AD7C (arm64e) "/usr/lib/system/libsystem_secinit.dylib"
 DynamicLoaderDarwin::ModulesDidLoad[30] A7D3C07D-0A1E-3C4C-8FBA-66905E16BF99 (arm64e) "/usr/lib/system/libsystem_kernel.dylib"
 DynamicLoaderDarwin::ModulesDidLoad[31] E7E2F10A-772A-397F-BD19-A7EA5A54E49F (arm64e) "/usr/lib/system/libsystem_platform.dylib"
 DynamicLoaderDarwin::ModulesDidLoad[32] E4DEBB6E-421D-33D0-9E17-77AE0E0FE4DC (arm64e) "/usr/lib/system/libsystem_pthread.dylib"
 DynamicLoaderDarwin::ModulesDidLoad[33] 2D7D536C-1D08-304A-9E67-BFB1E99301FE (arm64e) "/usr/lib/system/libsystem_symptoms.dylib"
 DynamicLoaderDarwin::ModulesDidLoad[34] 4AF0EA7D-E9F4-30E7-914D-FB292EDB7F37 (arm64e) "/usr/lib/system/libsystem_trace.dylib"
 DynamicLoaderDarwin::ModulesDidLoad[35] FB2051CF-36B6-348F-B8DF-5B2F702F6290 (arm64e) "/usr/lib/system/libunwind.dylib"
 DynamicLoaderDarwin::ModulesDidLoad[36] 84971772-939B-3130-8908-B7A38851A516 (arm64e) "/usr/lib/system/libxpc.dylib"
 DynamicLoaderDarwin::ModulesDidLoad[37] 43940F08-B65E-3888-8CD3-C52398EB1CA1 (arm64e) "/usr/lib/libc++abi.dylib"
 DynamicLoaderDarwin::ModulesDidLoad[38] 1C0364B5-D7E3-3170-BAA6-9C28F400E7CC (arm64e) "/usr/lib/libobjc.A.dylib"
 DynamicLoaderDarwin::ModulesDidLoad[39] 5A83FBC3-0944-3D77-8DF2-03E262F67AFA (arm64e) "/usr/lib/liboah.dylib"
 DynamicLoaderDarwin::ModulesDidLoad[40] 93FBD681-FC78-33A3-AFFE-568702676142 (arm64e) "/usr/lib/libc++.1.dylib"
 Breakpoint::ModulesChanged: num_modules: 41 load: 1 delete_locations: 0

 Breakpoint::ModulesChanged: num_modules: 41 load: 1 delete_locations: 0

 Breakpoint::ModulesChanged: num_modules: 41 load: 1 delete_locations: 0

 Breakpoint::ModulesChanged: num_modules: 41 load: 1 delete_locations: 0

 Breakpoint::ModulesChanged: num_modules: 41 load: 1 delete_locations: 0

 Hit breakpoint location: -9.1: 
  module = /usr/lib/dyld
  symbol = _dyld_debugger_notification
  address = 0x0000000182da4e20
  resolved = true
  hardware = false
  hit count = 2   
, continuing.

 StopInfo::ShouldStop async callback says we should not stop, returning ShouldStop of false.
 ThreadList::ShouldStop overall should_stop = 0
 ThreadList::ShouldReportStop 1 threads
 Thread::ShouldReportStop() tid = 0x546b: returning vote 0 for current plan
 Returning no opinion
 Process::ShouldBroadcastEvent: should_resume: 1 state: stopped was_restarted: 0 report_stop_vote: 0.
 Process::ShouldBroadcastEvent (0x101e10c20) Restarting process from state: stopped
 Process::PrivateResume() m_stop_id = 6, public state: running private state: stopped
 Thread::PushPlan(0x0x101732fb8): "Single stepping past breakpoint site 20 at 0x182da4e20", tid = 0x546b.
 WillResume Thread #1 (0x0x101732fb8): tid = 0x546b, pc = 0x182da4e20, sp = 0x16fdfd8d0, fp = 0x16fdfdac0, plan = 'Step over breakpoint trap', state = stepping, stop others = 1
 GDBRemoteCommunicationClient::SendGDBStoppointTypePacket() remove at addr = 0x182da4e20
 (plugin = gdb-remote, state = running)
 Process thinks the process has resumed.
 Process::ShouldBroadcastEvent (0x101e10c20) => new state: stopped, last broadcast state: running - NO
 Process::HandlePrivateEvent (pid = 2024) suppressing state stopped (old state running): should_broadcast == false
 timeout = <infinite>, event_sp)...
 Process::ShouldBroadcastEvent (0x1217fbd30) => new state: running, last broadcast state: running - NO
 Process::HandlePrivateEvent (pid = 2024) suppressing state running (old state running): should_broadcast == false
 timeout = <infinite>, event_sp)...
 (plugin = gdb-remote, state = stopped)
 (plugin = gdb-remote, state = stopped, stop_id = 7
 0x101732fb8: tid = 0x546b: stop info = <NULL> (stop_id = 7)
 0x101732fb8: tid = 0x546b: stop info = trace (stop_id = 7)
 
 ThreadList::ShouldStop: 1 threads, 1 unsuspended threads
 Thread::ShouldStop(0x101732fb8) for tid = 0x546b 0x546b, pc = 0x0000000182dedac8
 ^^^^^^^^ Thread::ShouldStop Begin ^^^^^^^^
 Plan stack initial state:
  thread #1: tid = 0x546b:
    Active plan stack:
      Element 0: Base thread plan.
      Element 1: Single stepping past breakpoint site 20 at 0x182da4e20

 Step over breakpoint stopped for reason: trace.
 Plan Step over breakpoint trap should stop: 0.
 Completed step over breakpoint plan.
 GDBRemoteCommunicationClient::SendGDBStoppointTypePacket() add at addr = 0x182da4e20
 Plan Step over breakpoint trap auto-continue: true.
 Popping plan: "Step over breakpoint trap", tid = 0x546b.
 Plan stack final state:
  thread #1: tid = 0x546b:
    Active plan stack:
      Element 0: Base thread plan.
    Completed plan stack:
      Element 0: Single stepping past breakpoint site 20 at 0x182da4e20

 vvvvvvvv Thread::ShouldStop End (returning 0) vvvvvvvv
 ThreadList::ShouldStop overall should_stop = 0
 ThreadList::ShouldReportStop 1 threads
 Thread::ShouldReportStop() tid = 0x546b: returning vote for complete stack's back plan
 Returning vote: no
 Returning no
 Process::ShouldBroadcastEvent: should_resume: 1 state: stopped was_restarted: 0 report_stop_vote: -1.
 Process::ShouldBroadcastEvent (0x1216fcc80) Restarting process from state: stopped
 Process::PrivateResume() m_stop_id = 7, public state: running private state: stopped
 WillResume Thread #1 (0x0x101732fb8): tid = 0x546b, pc = 0x182dedac8, sp = 0x16fdfd8d0, fp = 0x16fdfdac0, plan = 'base plan', state = running, stop others = 0
 (plugin = gdb-remote, state = running)
 Process thinks the process has resumed.
 Process::ShouldBroadcastEvent (0x1216fcc80) => new state: stopped, last broadcast state: running - NO
 Process::HandlePrivateEvent (pid = 2024) suppressing state stopped (old state running): should_broadcast == false
 timeout = <infinite>, event_sp)...
 Process::ShouldBroadcastEvent (0x101737b80) => new state: running, last broadcast state: running - NO
 Process::HandlePrivateEvent (pid = 2024) suppressing state running (old state running): should_broadcast == false
 timeout = <infinite>, event_sp)...
 (plugin = gdb-remote, state = stopped)
 (plugin = gdb-remote, state = stopped, stop_id = 8
 0x101732fb8: tid = 0x546b: stop info = <NULL> (stop_id = 8)
 0x101732fb8: tid = 0x546b: stop info = breakpoint 3.1 (stop_id = 8)
 
 ThreadList::ShouldStop: 1 threads, 1 unsuspended threads
 Thread::ShouldStop(0x101732fb8) for tid = 0x546b 0x546b, pc = 0x0000000100003e70
 ^^^^^^^^ Thread::ShouldStop Begin ^^^^^^^^
 Plan stack initial state:
  thread #1: tid = 0x546b:
    Active plan stack:
      Element 0: Base thread plan.

 Hit breakpoint location: 3.1: 
  module = /Users/shafinazahsan/github-classroom/FPC-advanced/fpc-advanced-classroom-1st-year-assignment-ShafinazAhsan/set01/problem08
  compile unit = problem08.c
  function = main
  location = /Users/shafinazahsan/github-classroom/FPC-advanced/fpc-advanced-classroom-1st-year-assignment-ShafinazAhsan/set01/problem08.c:31:7
  address = 0x0000000100003e70
  resolved = true
  hardware = false
  hit count = 1   
, stopping.

 Base plan discarding thread plans for thread tid = 0x546b (breakpoint hit.)
 Discarding thread plans for thread (tid = 0x546b, force 0)
 Base plan says should stop: 1.
 Plan stack final state:
  thread #1: tid = 0x546b:
    Active plan stack:
      Element 0: Base thread plan.

 vvvvvvvv Thread::ShouldStop End (returning 1) vvvvvvvv
 ThreadList::ShouldStop overall should_stop = 1
 Process::ShouldBroadcastEvent (0x1217fbd30) => new state: stopped, last broadcast state: stopped - YES
 Process::HandlePrivateEvent (pid = 2024) broadcasting new state stopped (old state stopped) to public
 timeout = <infinite>, event_sp)...
 (plugin = gdb-remote, state = stopped, restarted = 0)
 (plugin = gdb-remote, state = stopped) -- unlocking run lock
 Process::PerformAction returning from action with m_should_stop: 1.
 Frame #0 not recognized
 Processing command: 
 Processing command: n
 HandleCommand, cmd_obj : 'thread step-over'
 HandleCommand, (revised) command_string: 'thread step-over'
 HandleCommand, wants_raw_input:'False'
 HandleCommand, command line after removing command name(s): ''
 SynthesizeTailCallFrames: can't find next function
 Thread::PushPlan(0x0x101732fb8): "Stepping over line problem08.c:31:7.", tid = 0x546b.
 (plugin = gdb-remote) -- locking run lock
 Process::PrivateResume() m_stop_id = 8, public state: stopped private state: stopped
 Thread::PushPlan(0x0x101732fb8): "Single stepping past breakpoint site 19 at 0x100003e70", tid = 0x546b.
 WillResume Thread #1 (0x0x101732fb8): tid = 0x546b, pc = 0x100003e70, sp = 0x16fdfed30, fp = 0x16fdfed70, plan = 'Step over breakpoint trap', state = stepping, stop others = 1
 GDBRemoteCommunicationClient::SendGDBStoppointTypePacket() remove at addr = 0x100003e70
 (plugin = gdb-remote, state = running)
 Current Plan for thread 1(0x101732fb8) (0x546b, stepping): Step over breakpoint trap being asked whether we should report run.
 Process::ShouldBroadcastEvent (0x103d06110) => new state: running, last broadcast state: running - YES
 Process thinks the process has resumed.
 Process::HandlePrivateEvent (pid = 2024) broadcasting new state running (old state running) to public
 Process::PushProcessIOHandler pushing IO handler
 Process::HandlePrivateEvent updated m_iohandler_sync to 2
 waited from m_iohandler_sync to change from 1. New value is 2.
 (plugin = gdb-remote, state = running, restarted = 0)
 HandleCommand, command succeeded
 timeout = <infinite>, event_sp)...
 (plugin = gdb-remote, state = stopped)
 (plugin = gdb-remote, state = stopped, stop_id = 9
 0x101732fb8: tid = 0x546b: stop info = <NULL> (stop_id = 9)
 0x101732fb8: tid = 0x546b: stop info = trace (stop_id = 9)
 
 ThreadList::ShouldStop: 1 threads, 1 unsuspended threads
 Thread::ShouldStop(0x101732fb8) for tid = 0x546b 0x546b, pc = 0x0000000100003c58
 ^^^^^^^^ Thread::ShouldStop Begin ^^^^^^^^
 Plan stack initial state:
  thread #1: tid = 0x546b:
    Active plan stack:
      Element 0: Base thread plan.
      Element 1: Stepping over line problem08.c:31:7 using ranges: [0x0000000100003e70-0x0000000100003e78).
      Element 2: Single stepping past breakpoint site 19 at 0x100003e70

 Step over breakpoint stopped for reason: trace.
 Plan Step over breakpoint trap should stop: 1.
 Completed step over breakpoint plan.
 GDBRemoteCommunicationClient::SendGDBStoppointTypePacket() add at addr = 0x100003e70
 Popping plan: "Step over breakpoint trap", tid = 0x546b.
 ThreadPlanStepOverRange reached 0x0000000100003c58.
 Finding frames between main and input_array_size, retn-pc=0x100003e74
 No call edge outgoing from main with retn-PC == 0x100003e74
 Target::AddBreakpoint (internal = yes) => break_id = -10: address = problem08[0x0000000100003e74]


 GDBRemoteCommunicationClient::SendGDBStoppointTypePacket() add at addr = 0x100003e74
 Thread::PushPlan(0x0x101732fb8): "Stepping out from problem08`input_array_size at problem08.c:3 returning to frame at problem08`main + 36 at problem08.c:31:6", tid = 0x546b.
 Plan Step range stepping over should stop: 0.
 Plan stack final state:
  thread #1: tid = 0x546b:
    Active plan stack:
      Element 0: Base thread plan.
      Element 1: Stepping over line problem08.c:31:7 using ranges: [0x0000000100003e70-0x0000000100003e78).
      Element 2: Stepping out from problem08`input_array_size at problem08.c:3 returning to frame at problem08`main + 36 at problem08.c:31:6 using breakpoint site -10
    Completed plan stack:
      Element 0: Single stepping past breakpoint site 19 at 0x100003e70

 vvvvvvvv Thread::ShouldStop End (returning 0) vvvvvvvv
 ThreadList::ShouldStop overall should_stop = 0
 ThreadList::ShouldReportStop 1 threads
 Thread::ShouldReportStop() tid = 0x546b: returning vote for complete stack's back plan
 Returning vote: no
 Returning no
 Process::ShouldBroadcastEvent: should_resume: 1 state: stopped was_restarted: 0 report_stop_vote: -1.
 Process::ShouldBroadcastEvent (0x103d0ae50) Restarting process from state: stopped
 Process::PrivateResume() m_stop_id = 9, public state: running private state: stopped
 WillResume Thread #1 (0x0x101732fb8): tid = 0x546b, pc = 0x100003c58, sp = 0x16fdfed30, fp = 0x16fdfed70, plan = 'Step out', state = running, stop others = 0
 (plugin = gdb-remote, state = running)
 Process thinks the process has resumed.
 Process::ShouldBroadcastEvent (0x103d0ae50) => new state: stopped, last broadcast state: running - NO
 Process::HandlePrivateEvent (pid = 2024) suppressing state stopped (old state running): should_broadcast == false
 timeout = <infinite>, event_sp)...
 Process::ShouldBroadcastEvent (0x103d040c0) => new state: running, last broadcast state: running - NO
 Process::HandlePrivateEvent (pid = 2024) suppressing state running (old state running): should_broadcast == false
 timeout = <infinite>, event_sp)...
 Process::GetSTDOUT (buf = 0x16fe868a0, size = 1024)
 Process::GetSTDOUT (buf = 0x16fe868a0, size = 1024)
 Process::GetSTDOUT (buf = 0x16fe868a0, size = 1024)
 (plugin = gdb-remote, state = stopped)
 (plugin = gdb-remote, state = stopped, stop_id = 10
 0x101732fb8: tid = 0x546b: stop info = <NULL> (stop_id = 10)
 0x101732fb8: tid = 0x546b: stop info = step-out (stop_id = 10)
 
 ThreadList::ShouldStop: 1 threads, 1 unsuspended threads
 Thread::ShouldStop(0x101732fb8) for tid = 0x546b 0x546b, pc = 0x0000000100003e74
 ^^^^^^^^ Thread::ShouldStop Begin ^^^^^^^^
 Plan stack initial state:
  thread #1: tid = 0x546b:
    Active plan stack:
      Element 0: Base thread plan.
      Element 1: Stepping over line problem08.c:31:7 using ranges: [0x0000000100003e70-0x0000000100003e78).
      Element 2: Stepping out from problem08`input_array_size at problem08.c:3 returning to frame at problem08`main + 36 at problem08.c:31:6 using breakpoint site -10

 Hit breakpoint location: -10.1: 
  module = /Users/shafinazahsan/github-classroom/FPC-advanced/fpc-advanced-classroom-1st-year-assignment-ShafinazAhsan/set01/problem08
  compile unit = problem08.c
  function = main
  location = /Users/shafinazahsan/github-classroom/FPC-advanced/fpc-advanced-classroom-1st-year-assignment-ShafinazAhsan/set01/problem08.c:31:6
  address = 0x0000000100003e74
  resolved = true
  hardware = false
  hit count = 1   
, stopping.

 Plan Step out should stop: 1.
 Completed step out plan.
 Target::RemoveBreakpointByID (break_id = -10, internal = yes)

 Target::DisableBreakpointByID (break_id = -10, internal = yes)

 GDBRemoteCommunicationClient::SendGDBStoppointTypePacket() remove at addr = 0x100003e74
 Popping plan: "Step out", tid = 0x546b.
 ThreadPlanStepOverRange reached 0x0000000100003e74.
 Plan Step range stepping over should stop: 0.
 Plan stack final state:
  thread #1: tid = 0x546b:
    Active plan stack:
      Element 0: Base thread plan.
      Element 1: Stepping over line problem08.c:31:7 using ranges: [0x0000000100003e70-0x0000000100003e78).
    Completed plan stack:
      Element 0: Stepping out from problem08`input_array_size at problem08.c:3 returning to frame at problem08`main + 36 at problem08.c:31:6 using breakpoint site 0

 vvvvvvvv Thread::ShouldStop End (returning 0) vvvvvvvv
 ThreadList::ShouldStop overall should_stop = 0
 ThreadList::ShouldReportStop 1 threads
 Thread::ShouldReportStop() tid = 0x546b: returning vote for complete stack's back plan
 Returning vote: no
 Returning no
 Process::ShouldBroadcastEvent: should_resume: 1 state: stopped was_restarted: 0 report_stop_vote: -1.
 Process::ShouldBroadcastEvent (0x103c12a80) Restarting process from state: stopped
 Process::PrivateResume() m_stop_id = 10, public state: running private state: stopped
 Target::AddBreakpoint (internal = yes) => break_id = -11: names = {'start_wqthread', '_pthread_wqthread', '_pthread_start'}, modules(2) = libsystem_c.dylib, libSystem.B.dylib


 WillResume Thread #1 (0x0x101732fb8): tid = 0x546b, pc = 0x100003e74, sp = 0x16fdfed30, fp = 0x16fdfed70, plan = 'Step range stepping over', state = stepping, stop others = 1
 (plugin = gdb-remote, state = running)
 Process thinks the process has resumed.
 Process::ShouldBroadcastEvent (0x103c12a80) => new state: stopped, last broadcast state: running - NO
 Process::HandlePrivateEvent (pid = 2024) suppressing state stopped (old state running): should_broadcast == false
 timeout = <infinite>, event_sp)...
 Process::ShouldBroadcastEvent (0x103d0aec0) => new state: running, last broadcast state: running - NO
 Process::HandlePrivateEvent (pid = 2024) suppressing state running (old state running): should_broadcast == false
 timeout = <infinite>, event_sp)...
 (plugin = gdb-remote, state = stopped)
 (plugin = gdb-remote, state = stopped, stop_id = 11
 0x101732fb8: tid = 0x546b: stop info = <NULL> (stop_id = 11)
 0x101732fb8: tid = 0x546b: stop info = trace (stop_id = 11)
 
 ThreadList::ShouldStop: 1 threads, 1 unsuspended threads
 Thread::ShouldStop(0x101732fb8) for tid = 0x546b 0x546b, pc = 0x0000000100003e78
 ^^^^^^^^ Thread::ShouldStop Begin ^^^^^^^^
 Plan stack initial state:
  thread #1: tid = 0x546b:
    Active plan stack:
      Element 0: Base thread plan.
      Element 1: Stepping over line problem08.c:31:7 using ranges: [0x0000000100003e70-0x0000000100003e78).

 ThreadPlanStepOverRange reached 0x0000000100003e78.
 Step range plan out of range to 0x100003e78
 ShouldStopHere callback returned 1 from 0x100003e78.
 Plan Step range stepping over should stop: 1.
 Completed step through range plan.
 Popping plan: "Step range stepping over", tid = 0x546b.
 Plan stack final state:
  thread #1: tid = 0x546b:
    Active plan stack:
      Element 0: Base thread plan.
    Completed plan stack:
      Element 0: Stepping over line problem08.c:31:7 using ranges: [0x0000000100003e70-0x0000000100003e78).

 vvvvvvvv Thread::ShouldStop End (returning 1) vvvvvvvv
 ThreadList::ShouldStop overall should_stop = 1
 Process::ShouldBroadcastEvent (0x103c12200) => new state: stopped, last broadcast state: stopped - YES
 Process::HandlePrivateEvent (pid = 2024) broadcasting new state stopped (old state stopped) to public
 timeout = <infinite>, event_sp)...
 (plugin = gdb-remote, state = stopped, restarted = 0)
 (plugin = gdb-remote, state = stopped) -- unlocking run lock
 ThreadPlanStepOverRange reached 0x0000000100003e78.
 Step range plan out of range to 0x100003e78
 ShouldStopHere callback returned 1 from 0x100003e78.
 Frame #0 not recognized
 Processing command: s
 HandleCommand, cmd_obj : 'thread step-in'
 HandleCommand, (revised) command_string: 'thread step-in'
 HandleCommand, wants_raw_input:'False'
 HandleCommand, command line after removing command name(s): ''
 SynthesizeTailCallFrames: can't find next function
 Thread::PushPlan(0x0x101732fb8): "Stepping in through line problem08.c:32:11.", tid = 0x546b.
 (plugin = gdb-remote) -- locking run lock
 Process::PrivateResume() m_stop_id = 11, public state: stopped private state: stopped
 WillResume Thread #1 (0x0x101732fb8): tid = 0x546b, pc = 0x100003e78, sp = 0x16fdfed30, fp = 0x16fdfed70, plan = 'Step Range stepping in', state = stepping, stop others = 1
 (plugin = gdb-remote, state = running)
 Current Plan for thread 1(0x101732fb8) (0x546b, stepping): Step Range stepping in being asked whether we should report run.
 Process::ShouldBroadcastEvent (0x103c11760) => new state: running, last broadcast state: running - YES
 Process::HandlePrivateEvent (pid = 2024) broadcasting new state running (old state running) to public
 Process thinks the process has resumed.
 Process::PushProcessIOHandler pushing IO handler
 Process::HandlePrivateEvent updated m_iohandler_sync to 3
 waited from m_iohandler_sync to change from 2. New value is 3.
 timeout = <infinite>, event_sp)...
 (plugin = gdb-remote, state = running, restarted = 0)
 HandleCommand, command succeeded
 (plugin = gdb-remote, state = stopped)
 (plugin = gdb-remote, state = stopped, stop_id = 12
 0x101732fb8: tid = 0x546b: stop info = <NULL> (stop_id = 12)
 0x101732fb8: tid = 0x546b: stop info = trace (stop_id = 12)
 
 ThreadList::ShouldStop: 1 threads, 1 unsuspended threads
 Thread::ShouldStop(0x101732fb8) for tid = 0x546b 0x546b, pc = 0x0000000100003e7c
 ^^^^^^^^ Thread::ShouldStop Begin ^^^^^^^^
 Plan stack initial state:
  thread #1: tid = 0x546b:
    Active plan stack:
      Element 0: Base thread plan.
      Element 1: Stepping in through line problem08.c:32:11 using ranges:[0x0000000100003e78-0x0000000100003e7c).

 ThreadPlanStepInRange reached 0x0000000100003e7c.
 Step range plan stepped to another range of same line: [0x0000000100003e7c-0x0000000100003eb8), file = /Users/shafinazahsan/github-classroom/FPC-advanced/fpc-advanced-classroom-1st-year-assignment-ShafinazAhsan/set01/problem08.c, line = 32, column = 5
 Target::AddBreakpoint (internal = yes) => break_id = -12: address = problem08[0x0000000100003e9c]


 GDBRemoteCommunicationClient::SendGDBStoppointTypePacket() add at addr = 0x100003e9c
 ThreadPlanStepRange::SetNextBranchBreakpoint - Setting breakpoint -12 (site 22) to run to address 0x100003e9c
 Plan Step Range stepping in should stop: 0.
 Plan stack final state:
  thread #1: tid = 0x546b:
    Active plan stack:
      Element 0: Base thread plan.
      Element 1: Stepping in through line problem08.c:32:5 using ranges: 0: [0x0000000100003e78-0x0000000100003e7c) 1: [0x0000000100003e7c-0x0000000100003eb8).

 vvvvvvvv Thread::ShouldStop End (returning 0) vvvvvvvv
 ThreadList::ShouldStop overall should_stop = 0
 ThreadList::ShouldReportStop 1 threads
 ThreadPlanStepRange::ShouldReportStop() returning vote -1

 Thread::ShouldReportStop() tid = 0x546b: returning vote -1 for current plan
 Returning no
 Process::ShouldBroadcastEvent: should_resume: 1 state: stopped was_restarted: 0 report_stop_vote: -1.
 Process::ShouldBroadcastEvent (0x103d06c90) Restarting process from state: stopped
 Process::PrivateResume() m_stop_id = 12, public state: running private state: stopped
 WillResume Thread #1 (0x0x101732fb8): tid = 0x546b, pc = 0x100003e7c, sp = 0x16fdfed30, fp = 0x16fdfed70, plan = 'Step Range stepping in', state = running, stop others = 1
 (plugin = gdb-remote, state = running)
 Process thinks the process has resumed.
 Process::ShouldBroadcastEvent (0x103d06c90) => new state: stopped, last broadcast state: running - NO
 Process::HandlePrivateEvent (pid = 2024) suppressing state stopped (old state running): should_broadcast == false
 timeout = <infinite>, event_sp)...
 Process::ShouldBroadcastEvent (0x103e043e0) => new state: running, last broadcast state: running - NO
 Process::HandlePrivateEvent (pid = 2024) suppressing state running (old state running): should_broadcast == false
 timeout = <infinite>, event_sp)...
 (plugin = gdb-remote, state = stopped)
 (plugin = gdb-remote, state = stopped, stop_id = 13
 0x101732fb8: tid = 0x546b: stop info = <NULL> (stop_id = 13)
 0x101732fb8: tid = 0x546b: stop info = next-branch-location (stop_id = 13)
 
 ThreadList::ShouldStop: 1 threads, 1 unsuspended threads
 Thread::ShouldStop(0x101732fb8) for tid = 0x546b 0x546b, pc = 0x0000000100003e9c
 ^^^^^^^^ Thread::ShouldStop Begin ^^^^^^^^
 Plan stack initial state:
  thread #1: tid = 0x546b:
    Active plan stack:
      Element 0: Base thread plan.
      Element 1: Stepping in through line problem08.c:32:5 using ranges: 0: [0x0000000100003e78-0x0000000100003e7c) 1: [0x0000000100003e7c-0x0000000100003eb8).

 Hit breakpoint location: -12.1: 
  module = /Users/shafinazahsan/github-classroom/FPC-advanced/fpc-advanced-classroom-1st-year-assignment-ShafinazAhsan/set01/problem08
  compile unit = problem08.c
  function = main
  location = /Users/shafinazahsan/github-classroom/FPC-advanced/fpc-advanced-classroom-1st-year-assignment-ShafinazAhsan/set01/problem08.c:32:5
  address = 0x0000000100003e9c
  resolved = true
  hardware = false
  hit count = 1   
, stopping.

 ThreadPlanStepRange::NextRangeBreakpointExplainsStop - Hit next range breakpoint which has 1 owners - explains stop: 1.
 Removing next branch breakpoint: -12.
 Target::RemoveBreakpointByID (break_id = -12, internal = yes)

 Target::DisableBreakpointByID (break_id = -12, internal = yes)

 GDBRemoteCommunicationClient::SendGDBStoppointTypePacket() remove at addr = 0x100003e9c
 ThreadPlanStepInRange reached 0x0000000100003e9c.
 Plan Step Range stepping in should stop: 0.
 Plan stack final state:
  thread #1: tid = 0x546b:
    Active plan stack:
      Element 0: Base thread plan.
      Element 1: Stepping in through line problem08.c:32:5 using ranges: 0: [0x0000000100003e78-0x0000000100003e7c) 1: [0x0000000100003e7c-0x0000000100003eb8).

 vvvvvvvv Thread::ShouldStop End (returning 0) vvvvvvvv
 ThreadList::ShouldStop overall should_stop = 0
 ThreadList::ShouldReportStop 1 threads
 ThreadPlanStepRange::ShouldReportStop() returning vote -1

 Thread::ShouldReportStop() tid = 0x546b: returning vote -1 for current plan
 Returning no
 Process::ShouldBroadcastEvent: should_resume: 1 state: stopped was_restarted: 0 report_stop_vote: -1.
 Process::ShouldBroadcastEvent (0x103e040a0) Restarting process from state: stopped
 Process::PrivateResume() m_stop_id = 13, public state: running private state: stopped
 WillResume Thread #1 (0x0x101732fb8): tid = 0x546b, pc = 0x100003e9c, sp = 0x16fdfed30, fp = 0x16fdfed70, plan = 'Step Range stepping in', state = stepping, stop others = 1
 (plugin = gdb-remote, state = running)
 Process thinks the process has resumed.
 Process::ShouldBroadcastEvent (0x103e040a0) => new state: stopped, last broadcast state: running - NO
 Process::HandlePrivateEvent (pid = 2024) suppressing state stopped (old state running): should_broadcast == false
 timeout = <infinite>, event_sp)...
 Process::ShouldBroadcastEvent (0x103e04300) => new state: running, last broadcast state: running - NO
 Process::HandlePrivateEvent (pid = 2024) suppressing state running (old state running): should_broadcast == false
 timeout = <infinite>, event_sp)...
 (plugin = gdb-remote, state = stopped)
 (plugin = gdb-remote, state = stopped, stop_id = 14
 0x101732fb8: tid = 0x546b: stop info = <NULL> (stop_id = 14)
 0x101732fb8: tid = 0x546b: stop info = trace (stop_id = 14)
 
 ThreadList::ShouldStop: 1 threads, 1 unsuspended threads
 Thread::ShouldStop(0x101732fb8) for tid = 0x546b 0x546b, pc = 0x000000018311de40
 ^^^^^^^^ Thread::ShouldStop Begin ^^^^^^^^
 Plan stack initial state:
  thread #1: tid = 0x546b:
    Active plan stack:
      Element 0: Base thread plan.
      Element 1: Stepping in through line problem08.c:32:5 using ranges: 0: [0x0000000100003e78-0x0000000100003e7c) 1: [0x0000000100003e7c-0x0000000100003eb8).

 ThreadPlanStepInRange reached 0x000000018311de40.
 SynthesizeTailCallFrames: can't find previous function
 No generic step through plan found.
 Couldn't find step through plan from address 0x18311de40.
 No step through plan found.
 Stepping out of frame with no debug info
 ShouldStopHere callback returned 0 from 0x18311de40.
 Target::AddBreakpoint (internal = yes) => break_id = -13: address = problem08[0x0000000100003ea0]


 GDBRemoteCommunicationClient::SendGDBStoppointTypePacket() add at addr = 0x100003ea0
 Thread::PushPlan(0x0x101732fb8): "Stepping out from libsystem_pthread.dylib`___chkstk_darwin returning to frame at problem08`main + 80 at problem08.c:32:5", tid = 0x546b.
 Plan Step Range stepping in should stop: 0.
 Plan stack final state:
  thread #1: tid = 0x546b:
    Active plan stack:
      Element 0: Base thread plan.
      Element 1: Stepping in through line problem08.c:32:5 using ranges: 0: [0x0000000100003e78-0x0000000100003e7c) 1: [0x0000000100003e7c-0x0000000100003eb8).
      Element 2: Stepping out from libsystem_pthread.dylib`___chkstk_darwin returning to frame at problem08`main + 80 at problem08.c:32:5 using breakpoint site -13

 vvvvvvvv Thread::ShouldStop End (returning 0) vvvvvvvv
 ThreadList::ShouldStop overall should_stop = 0
 ThreadList::ShouldReportStop 1 threads
 Returning vote: no
 Thread::ShouldReportStop() tid = 0x546b: returning vote -1 for current plan
 Returning no
 Process::ShouldBroadcastEvent: should_resume: 1 state: stopped was_restarted: 0 report_stop_vote: -1.
 Process::ShouldBroadcastEvent (0x103c12200) Restarting process from state: stopped
 Process::PrivateResume() m_stop_id = 14, public state: running private state: stopped
 WillResume Thread #1 (0x0x101732fb8): tid = 0x546b, pc = 0x18311de40, sp = 0x16fdfed30, fp = 0x16fdfed70, plan = 'Step out', state = running, stop others = 0
 (plugin = gdb-remote, state = running)
 Process thinks the process has resumed.
 Process::ShouldBroadcastEvent (0x103c12200) => new state: stopped, last broadcast state: running - NO
 Process::HandlePrivateEvent (pid = 2024) suppressing state stopped (old state running): should_broadcast == false
 timeout = <infinite>, event_sp)...
 Process::ShouldBroadcastEvent (0x103c11b80) => new state: running, last broadcast state: running - NO
 Process::HandlePrivateEvent (pid = 2024) suppressing state running (old state running): should_broadcast == false
 timeout = <infinite>, event_sp)...
 (plugin = gdb-remote, state = stopped)
 (plugin = gdb-remote, state = stopped, stop_id = 15
 0x101732fb8: tid = 0x546b: stop info = <NULL> (stop_id = 15)
 0x101732fb8: tid = 0x546b: stop info = step-out (stop_id = 15)
 
 ThreadList::ShouldStop: 1 threads, 1 unsuspended threads
 Thread::ShouldStop(0x101732fb8) for tid = 0x546b 0x546b, pc = 0x0000000100003ea0
 ^^^^^^^^ Thread::ShouldStop Begin ^^^^^^^^
 Plan stack initial state:
  thread #1: tid = 0x546b:
    Active plan stack:
      Element 0: Base thread plan.
      Element 1: Stepping in through line problem08.c:32:5 using ranges: 0: [0x0000000100003e78-0x0000000100003e7c) 1: [0x0000000100003e7c-0x0000000100003eb8).
      Element 2: Stepping out from libsystem_pthread.dylib`___chkstk_darwin returning to frame at problem08`main + 80 at problem08.c:32:5 using breakpoint site -13

 Hit breakpoint location: -13.1: 
  module = /Users/shafinazahsan/github-classroom/FPC-advanced/fpc-advanced-classroom-1st-year-assignment-ShafinazAhsan/set01/problem08
  compile unit = problem08.c
  function = main
  location = /Users/shafinazahsan/github-classroom/FPC-advanced/fpc-advanced-classroom-1st-year-assignment-ShafinazAhsan/set01/problem08.c:32:5
  address = 0x0000000100003ea0
  resolved = true
  hardware = false
  hit count = 1   
, stopping.

 Plan Step out should stop: 1.
 Completed step out plan.
 Target::RemoveBreakpointByID (break_id = -13, internal = yes)

 Target::DisableBreakpointByID (break_id = -13, internal = yes)

 GDBRemoteCommunicationClient::SendGDBStoppointTypePacket() remove at addr = 0x100003ea0
 Popping plan: "Step out", tid = 0x546b.
 ThreadPlanStepInRange reached 0x0000000100003ea0.
 Target::AddBreakpoint (internal = yes) => break_id = -14: address = problem08[0x0000000100003eb8]


 GDBRemoteCommunicationClient::SendGDBStoppointTypePacket() add at addr = 0x100003eb8
 ThreadPlanStepRange::SetNextBranchBreakpoint - Setting breakpoint -14 (site 24) to run to address 0x100003eb8
 Plan Step Range stepping in should stop: 0.
 Plan stack final state:
  thread #1: tid = 0x546b:
    Active plan stack:
      Element 0: Base thread plan.
      Element 1: Stepping in through line problem08.c:32:5 using ranges: 0: [0x0000000100003e78-0x0000000100003e7c) 1: [0x0000000100003e7c-0x0000000100003eb8).
    Completed plan stack:
      Element 0: Stepping out from libsystem_pthread.dylib`___chkstk_darwin returning to frame at problem08`main + 80 at problem08.c:32:5 using breakpoint site 0

 vvvvvvvv Thread::ShouldStop End (returning 0) vvvvvvvv
 ThreadList::ShouldStop overall should_stop = 0
 ThreadList::ShouldReportStop 1 threads
 Thread::ShouldReportStop() tid = 0x546b: returning vote for complete stack's back plan
 Returning vote: no
 Returning no
 Process::ShouldBroadcastEvent: should_resume: 1 state: stopped was_restarted: 0 report_stop_vote: -1.
 Process::ShouldBroadcastEvent (0x103d0aec0) Restarting process from state: stopped
 Process::PrivateResume() m_stop_id = 15, public state: running private state: stopped
 WillResume Thread #1 (0x0x101732fb8): tid = 0x546b, pc = 0x100003ea0, sp = 0x16fdfed30, fp = 0x16fdfed70, plan = 'Step Range stepping in', state = running, stop others = 1
 (plugin = gdb-remote, state = running)
 Process thinks the process has resumed.
 Process::ShouldBroadcastEvent (0x103d0aec0) => new state: stopped, last broadcast state: running - NO
 Process::HandlePrivateEvent (pid = 2024) suppressing state stopped (old state running): should_broadcast == false
 timeout = <infinite>, event_sp)...
 Process::ShouldBroadcastEvent (0x103c12200) => new state: running, last broadcast state: running - NO
 Process::HandlePrivateEvent (pid = 2024) suppressing state running (old state running): should_broadcast == false
 timeout = <infinite>, event_sp)...
 (plugin = gdb-remote, state = stopped)
 (plugin = gdb-remote, state = stopped, stop_id = 16
 0x101732fb8: tid = 0x546b: stop info = <NULL> (stop_id = 16)
 0x101732fb8: tid = 0x546b: stop info = next-branch-location (stop_id = 16)
 
 ThreadList::ShouldStop: 1 threads, 1 unsuspended threads
 Thread::ShouldStop(0x101732fb8) for tid = 0x546b 0x546b, pc = 0x0000000100003eb8
 ^^^^^^^^ Thread::ShouldStop Begin ^^^^^^^^
 Plan stack initial state:
  thread #1: tid = 0x546b:
    Active plan stack:
      Element 0: Base thread plan.
      Element 1: Stepping in through line problem08.c:32:5 using ranges: 0: [0x0000000100003e78-0x0000000100003e7c) 1: [0x0000000100003e7c-0x0000000100003eb8).

 Hit breakpoint location: -14.1: 
  module = /Users/shafinazahsan/github-classroom/FPC-advanced/fpc-advanced-classroom-1st-year-assignment-ShafinazAhsan/set01/problem08
  compile unit = problem08.c
  function = main
  location = /Users/shafinazahsan/github-classroom/FPC-advanced/fpc-advanced-classroom-1st-year-assignment-ShafinazAhsan/set01/problem08.c:33:17
  address = 0x0000000100003eb8
  resolved = true
  hardware = false
  hit count = 1   
, stopping.

 ThreadPlanStepRange::NextRangeBreakpointExplainsStop - Hit next range breakpoint which has 1 owners - explains stop: 1.
 Removing next branch breakpoint: -14.
 Target::RemoveBreakpointByID (break_id = -14, internal = yes)

 Target::DisableBreakpointByID (break_id = -14, internal = yes)

 GDBRemoteCommunicationClient::SendGDBStoppointTypePacket() remove at addr = 0x100003eb8
 ThreadPlanStepInRange reached 0x0000000100003eb8.
 Step range plan out of range to 0x100003eb8
 Plan Step Range stepping in should stop: 1.
 Completed step through range plan.
 Popping plan: "Step Range stepping in", tid = 0x546b.
 Plan stack final state:
  thread #1: tid = 0x546b:
    Active plan stack:
      Element 0: Base thread plan.
    Completed plan stack:
      Element 0: Stepping in through line problem08.c:32:5 using ranges: 0: [0x0000000100003e78-0x0000000100003e7c) 1: [0x0000000100003e7c-0x0000000100003eb8).

 vvvvvvvv Thread::ShouldStop End (returning 1) vvvvvvvv
 ThreadList::ShouldStop overall should_stop = 1
 Process::ShouldBroadcastEvent (0x103d09510) => new state: stopped, last broadcast state: stopped - YES
 Process::HandlePrivateEvent (pid = 2024) broadcasting new state stopped (old state stopped) to public
 timeout = <infinite>, event_sp)...
 (plugin = gdb-remote, state = stopped, restarted = 0)
 (plugin = gdb-remote, state = stopped) -- unlocking run lock
 Process::PerformAction could not find breakpoint site id: 24...
 0x101732fb8: tid = 0x546b: stop info = step in (stop_id = 16)
 Process::PerformAction returning from action with m_should_stop: 1.
 Frame #0 not recognized
 Processing command: s
 HandleCommand, cmd_obj : 'thread step-in'
 HandleCommand, (revised) command_string: 'thread step-in'
 HandleCommand, wants_raw_input:'False'
 HandleCommand, command line after removing command name(s): ''
 SynthesizeTailCallFrames: can't find next function
 Thread::PushPlan(0x0x101732fb8): "Stepping in through line problem08.c:33:17.", tid = 0x546b.
 (plugin = gdb-remote) -- locking run lock
 Process::PrivateResume() m_stop_id = 16, public state: stopped private state: stopped
 WillResume Thread #1 (0x0x101732fb8): tid = 0x546b, pc = 0x100003eb8, sp = 0x16fdfed20, fp = 0x16fdfed70, plan = 'Step Range stepping in', state = stepping, stop others = 1
 (plugin = gdb-remote, state = running)
 Current Plan for thread 1(0x101732fb8) (0x546b, stepping): Step Range stepping in being asked whether we should report run.
 Process::ShouldBroadcastEvent (0x103d06110) => new state: running, last broadcast state: running - YES
 Process::HandlePrivateEvent (pid = 2024) broadcasting new state running (old state running) to public
 Process::PushProcessIOHandler pushing IO handler
 Process::HandlePrivateEvent updated m_iohandler_sync to 4
 timeout = <infinite>, event_sp)...
 Process thinks the process has resumed.
 waited from m_iohandler_sync to change from 3. New value is 4.
 HandleCommand, command succeeded
 (plugin = gdb-remote, state = running, restarted = 0)
 (plugin = gdb-remote, state = stopped)
 (plugin = gdb-remote, state = stopped, stop_id = 17
 0x101732fb8: tid = 0x546b: stop info = <NULL> (stop_id = 17)
 0x101732fb8: tid = 0x546b: stop info = trace (stop_id = 17)
 
 ThreadList::ShouldStop: 1 threads, 1 unsuspended threads
 Thread::ShouldStop(0x101732fb8) for tid = 0x546b 0x546b, pc = 0x0000000100003ebc
 ^^^^^^^^ Thread::ShouldStop Begin ^^^^^^^^
 Plan stack initial state:
  thread #1: tid = 0x546b:
    Active plan stack:
      Element 0: Base thread plan.
      Element 1: Stepping in through line problem08.c:33:17 using ranges:[0x0000000100003eb8-0x0000000100003ebc).

 ThreadPlanStepInRange reached 0x0000000100003ebc.
 Step range plan stepped to another range of same line: [0x0000000100003ebc-0x0000000100003ec4), file = /Users/shafinazahsan/github-classroom/FPC-advanced/fpc-advanced-classroom-1st-year-assignment-ShafinazAhsan/set01/problem08.c, line = 33, column = 5
 Plan Step Range stepping in should stop: 0.
 Plan stack final state:
  thread #1: tid = 0x546b:
    Active plan stack:
      Element 0: Base thread plan.
      Element 1: Stepping in through line problem08.c:33:5 using ranges: 0: [0x0000000100003eb8-0x0000000100003ebc) 1: [0x0000000100003ebc-0x0000000100003ec4).

 vvvvvvvv Thread::ShouldStop End (returning 0) vvvvvvvv
 ThreadList::ShouldStop overall should_stop = 0
 ThreadList::ShouldReportStop 1 threads
 ThreadPlanStepRange::ShouldReportStop() returning vote -1

 Thread::ShouldReportStop() tid = 0x546b: returning vote -1 for current plan
 Returning no
 Process::ShouldBroadcastEvent: should_resume: 1 state: stopped was_restarted: 0 report_stop_vote: -1.
 Process::ShouldBroadcastEvent (0x101f05d30) Restarting process from state: stopped
 Process::PrivateResume() m_stop_id = 17, public state: running private state: stopped
 WillResume Thread #1 (0x0x101732fb8): tid = 0x546b, pc = 0x100003ebc, sp = 0x16fdfed20, fp = 0x16fdfed70, plan = 'Step Range stepping in', state = stepping, stop others = 1
 (plugin = gdb-remote, state = running)
 Process thinks the process has resumed.
 Process::ShouldBroadcastEvent (0x101f05d30) => new state: stopped, last broadcast state: running - NO
 Process::HandlePrivateEvent (pid = 2024) suppressing state stopped (old state running): should_broadcast == false
 timeout = <infinite>, event_sp)...
 Process::ShouldBroadcastEvent (0x101f05f80) => new state: running, last broadcast state: running - NO
 Process::HandlePrivateEvent (pid = 2024) suppressing state running (old state running): should_broadcast == false
 timeout = <infinite>, event_sp)...
 (plugin = gdb-remote, state = stopped)
 (plugin = gdb-remote, state = stopped, stop_id = 18
 0x101732fb8: tid = 0x546b: stop info = <NULL> (stop_id = 18)
 0x101732fb8: tid = 0x546b: stop info = trace (stop_id = 18)
 
 ThreadList::ShouldStop: 1 threads, 1 unsuspended threads
 Thread::ShouldStop(0x101732fb8) for tid = 0x546b 0x546b, pc = 0x0000000100003c98
 ^^^^^^^^ Thread::ShouldStop Begin ^^^^^^^^
 Plan stack initial state:
  thread #1: tid = 0x546b:
    Active plan stack:
      Element 0: Base thread plan.
      Element 1: Stepping in through line problem08.c:33:5 using ranges: 0: [0x0000000100003eb8-0x0000000100003ebc) 1: [0x0000000100003ebc-0x0000000100003ec4).

 ThreadPlanStepInRange reached 0x0000000100003c98.
 Finding frames between main and input_array, retn-pc=0x100003ec0
 No call edge outgoing from main with retn-PC == 0x100003ec0
 No generic step through plan found.
 Couldn't find step through plan from address 0x100003c98.
 No step through plan found.
 ShouldStopHere callback returned 1 from 0x100003c98.
 Pushing past prologue 
 Target::AddBreakpoint (internal = yes) => break_id = -15: address = problem08[0x0000000100003cac]


 GDBRemoteCommunicationClient::SendGDBStoppointTypePacket() add at addr = 0x100003cac
 Thread::PushPlan(0x0x101732fb8): "Run to address: 0x0000000100003cac using breakpoint: -15 - ", tid = 0x546b.
 Plan Step Range stepping in should stop: 0.
 Plan stack final state:
  thread #1: tid = 0x546b:
    Active plan stack:
      Element 0: Base thread plan.
      Element 1: Stepping in through line problem08.c:33:5 using ranges: 0: [0x0000000100003eb8-0x0000000100003ebc) 1: [0x0000000100003ebc-0x0000000100003ec4).
      Element 2: Run to address: 0x0000000100003cac using breakpoint: -15 - 

 vvvvvvvv Thread::ShouldStop End (returning 0) vvvvvvvv
 ThreadList::ShouldStop overall should_stop = 0
 ThreadList::ShouldReportStop 1 threads
 ThreadPlanStepRange::ShouldReportStop() returning vote -1

 Thread::ShouldReportStop() tid = 0x546b: returning vote -1 for current plan
 Returning no
 Process::ShouldBroadcastEvent: should_resume: 1 state: stopped was_restarted: 0 report_stop_vote: -1.
 Process::ShouldBroadcastEvent (0x101f05f80) Restarting process from state: stopped
 Process::PrivateResume() m_stop_id = 18, public state: running private state: stopped
 WillResume Thread #1 (0x0x101732fb8): tid = 0x546b, pc = 0x100003c98, sp = 0x16fdfed20, fp = 0x16fdfed70, plan = 'Run to address plan', state = running, stop others = 1
 (plugin = gdb-remote, state = running)
 Process thinks the process has resumed.
 Process::ShouldBroadcastEvent (0x101f05f80) => new state: stopped, last broadcast state: running - NO
 Process::HandlePrivateEvent (pid = 2024) suppressing state stopped (old state running): should_broadcast == false
 timeout = <infinite>, event_sp)...
 Process::ShouldBroadcastEvent (0x103c138e0) => new state: running, last broadcast state: running - NO
 Process::HandlePrivateEvent (pid = 2024) suppressing state running (old state running): should_broadcast == false
 timeout = <infinite>, event_sp)...
 (plugin = gdb-remote, state = stopped)
 (plugin = gdb-remote, state = stopped, stop_id = 19
 0x101732fb8: tid = 0x546b: stop info = <NULL> (stop_id = 19)
 0x101732fb8: tid = 0x546b: stop info = run-to-address (stop_id = 19)
 
 ThreadList::ShouldStop: 1 threads, 1 unsuspended threads
 Thread::ShouldStop(0x101732fb8) for tid = 0x546b 0x546b, pc = 0x0000000100003cac
 ^^^^^^^^ Thread::ShouldStop Begin ^^^^^^^^
 Plan stack initial state:
  thread #1: tid = 0x546b:
    Active plan stack:
      Element 0: Base thread plan.
      Element 1: Stepping in through line problem08.c:33:5 using ranges: 0: [0x0000000100003eb8-0x0000000100003ebc) 1: [0x0000000100003ebc-0x0000000100003ec4).
      Element 2: Run to address: 0x0000000100003cac using breakpoint: -15 - 

 Hit breakpoint location: -15.1: 
  module = /Users/shafinazahsan/github-classroom/FPC-advanced/fpc-advanced-classroom-1st-year-assignment-ShafinazAhsan/set01/problem08
  compile unit = problem08.c
  function = input_array
  location = /Users/shafinazahsan/github-classroom/FPC-advanced/fpc-advanced-classroom-1st-year-assignment-ShafinazAhsan/set01/problem08.c:10:41
  address = 0x0000000100003cac
  resolved = true
  hardware = false
  hit count = 1   
, stopping.

 Plan Run to address plan should stop: 1.
 Target::RemoveBreakpointByID (break_id = -15, internal = yes)

 Target::DisableBreakpointByID (break_id = -15, internal = yes)

 GDBRemoteCommunicationClient::SendGDBStoppointTypePacket() remove at addr = 0x100003cac
 Completed run to address plan.
 Popping plan: "Run to address plan", tid = 0x546b.
 ThreadPlanStepInRange reached 0x0000000100003cac.
 Finding frames between main and input_array, retn-pc=0x100003ec0
 No call edge outgoing from main with retn-PC == 0x100003ec0
 No generic step through plan found.
 Couldn't find step through plan from address 0x100003cac.
 No step through plan found.
 ShouldStopHere callback returned 1 from 0x100003cac.
 Plan Step Range stepping in should stop: 1.
 Completed step through range plan.
 Popping plan: "Step Range stepping in", tid = 0x546b.
 Plan stack final state:
  thread #1: tid = 0x546b:
    Active plan stack:
      Element 0: Base thread plan.
    Completed plan stack:
      Element 0: Run to address: 0x0000000100003cac using breakpoint: 0 - but the breakpoint has been deleted.
      Element 1: Stepping in through line problem08.c:33:5 using ranges: 0: [0x0000000100003eb8-0x0000000100003ebc) 1: [0x0000000100003ebc-0x0000000100003ec4).

 vvvvvvvv Thread::ShouldStop End (returning 1) vvvvvvvv
 ThreadList::ShouldStop overall should_stop = 1
 Process::ShouldBroadcastEvent (0x103d08b60) => new state: stopped, last broadcast state: stopped - YES
 Process::HandlePrivateEvent (pid = 2024) broadcasting new state stopped (old state stopped) to public
 timeout = <infinite>, event_sp)...
 (plugin = gdb-remote, state = stopped, restarted = 0)
 (plugin = gdb-remote, state = stopped) -- unlocking run lock
 Process::PerformAction could not find breakpoint site id: 25...
 0x101732fb8: tid = 0x546b: stop info = step in (stop_id = 19)
 Process::PerformAction returning from action with m_should_stop: 1.
 Frame #0 not recognized
 Processing command: s
 HandleCommand, cmd_obj : 'thread step-in'
 HandleCommand, (revised) command_string: 'thread step-in'
 HandleCommand, wants_raw_input:'False'
 HandleCommand, command line after removing command name(s): ''
 Thread::PushPlan(0x0x101732fb8): "Stepping in through line problem08.c:10:41.", tid = 0x546b.
 (plugin = gdb-remote) -- locking run lock
 Process::PrivateResume() m_stop_id = 19, public state: stopped private state: stopped
 Target::RemoveBreakpointByID (break_id = 0, internal = no)

 Target::DisableBreakpointByID (break_id = 0, internal = no)

 WillResume Thread #1 (0x0x101732fb8): tid = 0x546b, pc = 0x100003cac, sp = 0x16fdfecf0, fp = 0x16fdfed10, plan = 'Step Range stepping in', state = stepping, stop others = 1
 (plugin = gdb-remote, state = running)
 Current Plan for thread 1(0x101732fb8) (0x546b, stepping): Step Range stepping in being asked whether we should report run.
 Process::ShouldBroadcastEvent (0x103d08de0) => new state: running, last broadcast state: running - YES
 Process::HandlePrivateEvent (pid = 2024) broadcasting new state running (old state running) to public
 Process::PushProcessIOHandler pushing IO handler
 Process::HandlePrivateEvent updated m_iohandler_sync to 5
 Process thinks the process has resumed.
 timeout = <infinite>, event_sp)...
 (plugin = gdb-remote, state = running, restarted = 0)
 waited from m_iohandler_sync to change from 4. New value is 5.
 HandleCommand, command succeeded
 (plugin = gdb-remote, state = stopped)
 (plugin = gdb-remote, state = stopped, stop_id = 20
 0x101732fb8: tid = 0x546b: stop info = <NULL> (stop_id = 20)
 0x101732fb8: tid = 0x546b: stop info = trace (stop_id = 20)
 
 ThreadList::ShouldStop: 1 threads, 1 unsuspended threads
 Thread::ShouldStop(0x101732fb8) for tid = 0x546b 0x546b, pc = 0x0000000100003cb0
 ^^^^^^^^ Thread::ShouldStop Begin ^^^^^^^^
 Plan stack initial state:
  thread #1: tid = 0x546b:
    Active plan stack:
      Element 0: Base thread plan.
      Element 1: Stepping in through line problem08.c:10:41 using ranges:[0x0000000100003cac-0x0000000100003cb4).

 ThreadPlanStepInRange reached 0x0000000100003cb0.
 Plan Step Range stepping in should stop: 0.
 Plan stack final state:
  thread #1: tid = 0x546b:
    Active plan stack:
      Element 0: Base thread plan.
      Element 1: Stepping in through line problem08.c:10:41 using ranges:[0x0000000100003cac-0x0000000100003cb4).

 vvvvvvvv Thread::ShouldStop End (returning 0) vvvvvvvv
 ThreadList::ShouldStop overall should_stop = 0
 ThreadList::ShouldReportStop 1 threads
 ThreadPlanStepRange::ShouldReportStop() returning vote -1

 Thread::ShouldReportStop() tid = 0x546b: returning vote -1 for current plan
 Returning no
 Process::ShouldBroadcastEvent: should_resume: 1 state: stopped was_restarted: 0 report_stop_vote: -1.
 Process::ShouldBroadcastEvent (0x103d08de0) Restarting process from state: stopped
 Process::PrivateResume() m_stop_id = 20, public state: running private state: stopped
 WillResume Thread #1 (0x0x101732fb8): tid = 0x546b, pc = 0x100003cb0, sp = 0x16fdfecf0, fp = 0x16fdfed10, plan = 'Step Range stepping in', state = stepping, stop others = 1
 (plugin = gdb-remote, state = running)
 Process thinks the process has resumed.
 Process::ShouldBroadcastEvent (0x103d08de0) => new state: stopped, last broadcast state: running - NO
 Process::HandlePrivateEvent (pid = 2024) suppressing state stopped (old state running): should_broadcast == false
 timeout = <infinite>, event_sp)...
 Process::ShouldBroadcastEvent (0x103c12200) => new state: running, last broadcast state: running - NO
 Process::HandlePrivateEvent (pid = 2024) suppressing state running (old state running): should_broadcast == false
 timeout = <infinite>, event_sp)...
 (plugin = gdb-remote, state = stopped)
 (plugin = gdb-remote, state = stopped, stop_id = 21
 0x101732fb8: tid = 0x546b: stop info = <NULL> (stop_id = 21)
 0x101732fb8: tid = 0x546b: stop info = trace (stop_id = 21)
 
 ThreadList::ShouldStop: 1 threads, 1 unsuspended threads
 Thread::ShouldStop(0x101732fb8) for tid = 0x546b 0x546b, pc = 0x0000000100003cb4
 ^^^^^^^^ Thread::ShouldStop Begin ^^^^^^^^
 Plan stack initial state:
  thread #1: tid = 0x546b:
    Active plan stack:
      Element 0: Base thread plan.
      Element 1: Stepping in through line problem08.c:10:41 using ranges:[0x0000000100003cac-0x0000000100003cb4).

 ThreadPlanStepInRange reached 0x0000000100003cb4.
 Step range plan stepped to another range of same line: [0x0000000100003cb4-0x0000000100003cc8), file = /Users/shafinazahsan/github-classroom/FPC-advanced/fpc-advanced-classroom-1st-year-assignment-ShafinazAhsan/set01/problem08.c, line = 10, column = 5
 Target::AddBreakpoint (internal = yes) => break_id = -16: address = problem08[0x0000000100003cc4]


 GDBRemoteCommunicationClient::SendGDBStoppointTypePacket() add at addr = 0x100003cc4
 ThreadPlanStepRange::SetNextBranchBreakpoint - Setting breakpoint -16 (site 26) to run to address 0x100003cc4
 Plan Step Range stepping in should stop: 0.
 Plan stack final state:
  thread #1: tid = 0x546b:
    Active plan stack:
      Element 0: Base thread plan.
      Element 1: Stepping in through line problem08.c:10:5 using ranges: 0: [0x0000000100003cac-0x0000000100003cb4) 1: [0x0000000100003cb4-0x0000000100003cc8).

 vvvvvvvv Thread::ShouldStop End (returning 0) vvvvvvvv
 ThreadList::ShouldStop overall should_stop = 0
 ThreadList::ShouldReportStop 1 threads
 ThreadPlanStepRange::ShouldReportStop() returning vote -1

 Thread::ShouldReportStop() tid = 0x546b: returning vote -1 for current plan
 Returning no
 Process::ShouldBroadcastEvent: should_resume: 1 state: stopped was_restarted: 0 report_stop_vote: -1.
 Process::ShouldBroadcastEvent (0x103c12200) Restarting process from state: stopped
 Process::PrivateResume() m_stop_id = 21, public state: running private state: stopped
 WillResume Thread #1 (0x0x101732fb8): tid = 0x546b, pc = 0x100003cb4, sp = 0x16fdfecf0, fp = 0x16fdfed10, plan = 'Step Range stepping in', state = running, stop others = 1
 (plugin = gdb-remote, state = running)
 Process thinks the process has resumed.
 Process::ShouldBroadcastEvent (0x103c12200) => new state: stopped, last broadcast state: running - NO
 Process::HandlePrivateEvent (pid = 2024) suppressing state stopped (old state running): should_broadcast == false
 timeout = <infinite>, event_sp)...
 Process::ShouldBroadcastEvent (0x103d08b60) => new state: running, last broadcast state: running - NO
 Process::HandlePrivateEvent (pid = 2024) suppressing state running (old state running): should_broadcast == false
 timeout = <infinite>, event_sp)...
 (plugin = gdb-remote, state = stopped)
 (plugin = gdb-remote, state = stopped, stop_id = 22
 0x101732fb8: tid = 0x546b: stop info = <NULL> (stop_id = 22)
 0x101732fb8: tid = 0x546b: stop info = next-branch-location (stop_id = 22)
 
 ThreadList::ShouldStop: 1 threads, 1 unsuspended threads
 Thread::ShouldStop(0x101732fb8) for tid = 0x546b 0x546b, pc = 0x0000000100003cc4
 ^^^^^^^^ Thread::ShouldStop Begin ^^^^^^^^
 Plan stack initial state:
  thread #1: tid = 0x546b:
    Active plan stack:
      Element 0: Base thread plan.
      Element 1: Stepping in through line problem08.c:10:5 using ranges: 0: [0x0000000100003cac-0x0000000100003cb4) 1: [0x0000000100003cb4-0x0000000100003cc8).

 Hit breakpoint location: -16.1: 
  module = /Users/shafinazahsan/github-classroom/FPC-advanced/fpc-advanced-classroom-1st-year-assignment-ShafinazAhsan/set01/problem08
  compile unit = problem08.c
  function = input_array
  location = /Users/shafinazahsan/github-classroom/FPC-advanced/fpc-advanced-classroom-1st-year-assignment-ShafinazAhsan/set01/problem08.c:10:5
  address = 0x0000000100003cc4
  resolved = true
  hardware = false
  hit count = 1   
, stopping.

 ThreadPlanStepRange::NextRangeBreakpointExplainsStop - Hit next range breakpoint which has 1 owners - explains stop: 1.
 Removing next branch breakpoint: -16.
 Target::RemoveBreakpointByID (break_id = -16, internal = yes)

 Target::DisableBreakpointByID (break_id = -16, internal = yes)

 GDBRemoteCommunicationClient::SendGDBStoppointTypePacket() remove at addr = 0x100003cc4
 ThreadPlanStepInRange reached 0x0000000100003cc4.
 Plan Step Range stepping in should stop: 0.
 Plan stack final state:
  thread #1: tid = 0x546b:
    Active plan stack:
      Element 0: Base thread plan.
      Element 1: Stepping in through line problem08.c:10:5 using ranges: 0: [0x0000000100003cac-0x0000000100003cb4) 1: [0x0000000100003cb4-0x0000000100003cc8).

 vvvvvvvv Thread::ShouldStop End (returning 0) vvvvvvvv
 ThreadList::ShouldStop overall should_stop = 0
 ThreadList::ShouldReportStop 1 threads
 ThreadPlanStepRange::ShouldReportStop() returning vote -1

 Thread::ShouldReportStop() tid = 0x546b: returning vote -1 for current plan
 Returning no
 Process::ShouldBroadcastEvent: should_resume: 1 state: stopped was_restarted: 0 report_stop_vote: -1.
 Process::ShouldBroadcastEvent (0x103d08b60) Restarting process from state: stopped
 Process::PrivateResume() m_stop_id = 22, public state: running private state: stopped
 WillResume Thread #1 (0x0x101732fb8): tid = 0x546b, pc = 0x100003cc4, sp = 0x16fdfecf0, fp = 0x16fdfed10, plan = 'Step Range stepping in', state = stepping, stop others = 1
 (plugin = gdb-remote, state = running)
 Process thinks the process has resumed.
 Process::ShouldBroadcastEvent (0x103d08b60) => new state: stopped, last broadcast state: running - NO
 Process::HandlePrivateEvent (pid = 2024) suppressing state stopped (old state running): should_broadcast == false
 timeout = <infinite>, event_sp)...
 Process::ShouldBroadcastEvent (0x103c11bb0) => new state: running, last broadcast state: running - NO
 Process::HandlePrivateEvent (pid = 2024) suppressing state running (old state running): should_broadcast == false
 timeout = <infinite>, event_sp)...
 (plugin = gdb-remote, state = stopped)
 (plugin = gdb-remote, state = stopped, stop_id = 23
 0x101732fb8: tid = 0x546b: stop info = <NULL> (stop_id = 23)
 0x101732fb8: tid = 0x546b: stop info = trace (stop_id = 23)
 
 ThreadList::ShouldStop: 1 threads, 1 unsuspended threads
 Thread::ShouldStop(0x101732fb8) for tid = 0x546b 0x546b, pc = 0x0000000100003f34
 ^^^^^^^^ Thread::ShouldStop Begin ^^^^^^^^
 Plan stack initial state:
  thread #1: tid = 0x546b:
    Active plan stack:
      Element 0: Base thread plan.
      Element 1: Stepping in through line problem08.c:10:5 using ranges: 0: [0x0000000100003cac-0x0000000100003cb4) 1: [0x0000000100003cb4-0x0000000100003cc8).

 ThreadPlanStepInRange reached 0x0000000100003f34.
 SynthesizeTailCallFrames: can't find previous function
 No generic step through plan found.
 Found a trampoline target symbol at 0x182fe801c.
 Target::AddBreakpoint (internal = yes) => break_id = -17: address = libsystem_c.dylib[0x00000001802fc01c]


 GDBRemoteCommunicationClient::SendGDBStoppointTypePacket() add at addr = 0x182fe801c
 Found step through plan from 0x100003f34: Run to address: 0x0000000182fe801c using breakpoint: -17 - 
 Target::AddBreakpoint (internal = yes) => break_id = -18: address = problem08[0x0000000100003cc8]


 GDBRemoteCommunicationClient::SendGDBStoppointTypePacket() add at addr = 0x100003cc8
 Setting backstop breakpoint -18 at address: 0x100003cc8
 Thread::PushPlan(0x0x101732fb8): "Stepping through trampoline code from: 0x0000000100003f34 with backstop breakpoint ID: -18 at address: 0x0000000100003cc8", tid = 0x546b.
 Thread::PushPlan(0x0x101732fb8): "Run to address: 0x0000000182fe801c using breakpoint: -17 - ", tid = 0x546b.
 Found a step through plan: Step through trampolines and prologues
 Plan Step Range stepping in should stop: 0.
 Plan stack final state:
  thread #1: tid = 0x546b:
    Active plan stack:
      Element 0: Base thread plan.
      Element 1: Stepping in through line problem08.c:10:5 using ranges: 0: [0x0000000100003cac-0x0000000100003cb4) 1: [0x0000000100003cb4-0x0000000100003cc8).
      Element 2: Stepping through trampoline code from: 0x0000000100003f34 with backstop breakpoint ID: -18 at address: 0x0000000100003cc8
      Element 3: Run to address: 0x0000000182fe801c using breakpoint: -17 - 

 vvvvvvvv Thread::ShouldStop End (returning 0) vvvvvvvv
 ThreadList::ShouldStop overall should_stop = 0
 ThreadList::ShouldReportStop 1 threads
 ThreadPlanStepRange::ShouldReportStop() returning vote -1

 Thread::ShouldReportStop() tid = 0x546b: returning vote -1 for current plan
 Returning no
 Process::ShouldBroadcastEvent: should_resume: 1 state: stopped was_restarted: 0 report_stop_vote: -1.
 Process::ShouldBroadcastEvent (0x103d0ae50) Restarting process from state: stopped
 Process::PrivateResume() m_stop_id = 23, public state: running private state: stopped
 WillResume Thread #1 (0x0x101732fb8): tid = 0x546b, pc = 0x100003f34, sp = 0x16fdfecf0, fp = 0x16fdfed10, plan = 'Run to address plan', state = running, stop others = 0
 (plugin = gdb-remote, state = running)
 Process thinks the process has resumed.
 Process::ShouldBroadcastEvent (0x103d0ae50) => new state: stopped, last broadcast state: running - NO
 Process::HandlePrivateEvent (pid = 2024) suppressing state stopped (old state running): should_broadcast == false
 timeout = <infinite>, event_sp)...
 Process::ShouldBroadcastEvent (0x103c14680) => new state: running, last broadcast state: running - NO
 Process::HandlePrivateEvent (pid = 2024) suppressing state running (old state running): should_broadcast == false
 timeout = <infinite>, event_sp)...
 (plugin = gdb-remote, state = stopped)
 (plugin = gdb-remote, state = stopped, stop_id = 24
 0x101732fb8: tid = 0x546b: stop info = <NULL> (stop_id = 24)
 0x101732fb8: tid = 0x546b: stop info = run-to-address (stop_id = 24)
 
 ThreadList::ShouldStop: 1 threads, 1 unsuspended threads
 Thread::ShouldStop(0x101732fb8) for tid = 0x546b 0x546b, pc = 0x0000000182fe801c
 ^^^^^^^^ Thread::ShouldStop Begin ^^^^^^^^
 Plan stack initial state:
  thread #1: tid = 0x546b:
    Active plan stack:
      Element 0: Base thread plan.
      Element 1: Stepping in through line problem08.c:10:5 using ranges: 0: [0x0000000100003cac-0x0000000100003cb4) 1: [0x0000000100003cb4-0x0000000100003cc8).
      Element 2: Stepping through trampoline code from: 0x0000000100003f34 with backstop breakpoint ID: -18 at address: 0x0000000100003cc8
      Element 3: Run to address: 0x0000000182fe801c using breakpoint: -17 - 

 Hit breakpoint location: -17.1: 
  module = /usr/lib/system/libsystem_c.dylib
  symbol = printf
  address = 0x0000000182fe801c
  resolved = true
  hardware = false
  hit count = 1   
, stopping.

 Plan Run to address plan should stop: 1.
 Target::RemoveBreakpointByID (break_id = -17, internal = yes)

 Target::DisableBreakpointByID (break_id = -17, internal = yes)

 GDBRemoteCommunicationClient::SendGDBStoppointTypePacket() remove at addr = 0x182fe801c
 Completed run to address plan.
 Popping plan: "Run to address plan", tid = 0x546b.
 Couldn't find step through plan from address 0x182fe801c.
 Plan Step through trampolines and prologues should stop: 1.
 Completed step through step plan.
 Target::RemoveBreakpointByID (break_id = -18, internal = yes)

 Target::DisableBreakpointByID (break_id = -18, internal = yes)

 GDBRemoteCommunicationClient::SendGDBStoppointTypePacket() remove at addr = 0x100003cc8
 Popping plan: "Step through trampolines and prologues", tid = 0x546b.
 ThreadPlanStepInRange reached 0x0000000182fe801c.
 SynthesizeTailCallFrames: can't find previous function
 No generic step through plan found.
 Couldn't find step through plan from address 0x182fe801c.
 No step through plan found.
 Stepping out of frame with no debug info
 ShouldStopHere callback returned 0 from 0x182fe801c.
 Target::AddBreakpoint (internal = yes) => break_id = -19: address = problem08[0x0000000100003cc8]


 GDBRemoteCommunicationClient::SendGDBStoppointTypePacket() add at addr = 0x100003cc8
 Thread::PushPlan(0x0x101732fb8): "Stepping out from libsystem_c.dylib`printf returning to frame at problem08`input_array + 48 at problem08.c:11:13", tid = 0x546b.
 Plan Step Range stepping in should stop: 0.
 Plan stack final state:
  thread #1: tid = 0x546b:
    Active plan stack:
      Element 0: Base thread plan.
      Element 1: Stepping in through line problem08.c:10:5 using ranges: 0: [0x0000000100003cac-0x0000000100003cb4) 1: [0x0000000100003cb4-0x0000000100003cc8).
      Element 2: Stepping out from libsystem_c.dylib`printf returning to frame at problem08`input_array + 48 at problem08.c:11:13 using breakpoint site -19
    Completed plan stack:
      Element 0: Run to address: 0x0000000182fe801c using breakpoint: 0 - but the breakpoint has been deleted.
      Element 1: Stepping through trampoline code from: 0x0000000100003f34 unable to set a backstop breakpoint.

 vvvvvvvv Thread::ShouldStop End (returning 0) vvvvvvvv
 ThreadList::ShouldStop overall should_stop = 0
 ThreadList::ShouldReportStop 1 threads
 Thread::ShouldReportStop() tid = 0x546b: returning vote for complete stack's back plan
 Returning vote: no
 returning previous thread plan vote: no
 returning previous thread plan vote: no
 Returning no
 Process::ShouldBroadcastEvent: should_resume: 1 state: stopped was_restarted: 0 report_stop_vote: -1.
 Process::ShouldBroadcastEvent (0x101f085b0) Restarting process from state: stopped
 Process::PrivateResume() m_stop_id = 24, public state: running private state: stopped
 Target::RemoveBreakpointByID (break_id = 0, internal = no)

 Target::DisableBreakpointByID (break_id = 0, internal = no)

 WillResume Thread #1 (0x0x101732fb8): tid = 0x546b, pc = 0x182fe801c, sp = 0x16fdfecf0, fp = 0x16fdfed10, plan = 'Step out', state = running, stop others = 0
 (plugin = gdb-remote, state = running)
 Process thinks the process has resumed.
 Process::ShouldBroadcastEvent (0x101f085b0) => new state: stopped, last broadcast state: running - NO
 Process::HandlePrivateEvent (pid = 2024) suppressing state stopped (old state running): should_broadcast == false
 timeout = <infinite>, event_sp)...
 Process::ShouldBroadcastEvent (0x103e074e0) => new state: running, last broadcast state: running - NO
 Process::HandlePrivateEvent (pid = 2024) suppressing state running (old state running): should_broadcast == false
 timeout = <infinite>, event_sp)...
 Process::GetSTDOUT (buf = 0x16fe868a0, size = 1024)
 (plugin = gdb-remote, state = stopped)
 (plugin = gdb-remote, state = stopped, stop_id = 25
 0x101732fb8: tid = 0x546b: stop info = <NULL> (stop_id = 25)
 0x101732fb8: tid = 0x546b: stop info = step-out (stop_id = 25)
 
 ThreadList::ShouldStop: 1 threads, 1 unsuspended threads
 Thread::ShouldStop(0x101732fb8) for tid = 0x546b 0x546b, pc = 0x0000000100003cc8
 ^^^^^^^^ Thread::ShouldStop Begin ^^^^^^^^
 Plan stack initial state:
  thread #1: tid = 0x546b:
    Active plan stack:
      Element 0: Base thread plan.
      Element 1: Stepping in through line problem08.c:10:5 using ranges: 0: [0x0000000100003cac-0x0000000100003cb4) 1: [0x0000000100003cb4-0x0000000100003cc8).
      Element 2: Stepping out from libsystem_c.dylib`printf returning to frame at problem08`input_array + 48 at problem08.c:11:13 using breakpoint site -19

 Hit breakpoint location: -19.1: 
  module = /Users/shafinazahsan/github-classroom/FPC-advanced/fpc-advanced-classroom-1st-year-assignment-ShafinazAhsan/set01/problem08
  compile unit = problem08.c
  function = input_array
  location = /Users/shafinazahsan/github-classroom/FPC-advanced/fpc-advanced-classroom-1st-year-assignment-ShafinazAhsan/set01/problem08.c:11:13
  address = 0x0000000100003cc8
  resolved = true
  hardware = false
  hit count = 1   
, stopping.

 Plan Step out should stop: 1.
 Completed step out plan.
 Target::RemoveBreakpointByID (break_id = -19, internal = yes)

 Target::DisableBreakpointByID (break_id = -19, internal = yes)

 GDBRemoteCommunicationClient::SendGDBStoppointTypePacket() remove at addr = 0x100003cc8
 Popping plan: "Step out", tid = 0x546b.
 ThreadPlanStepInRange reached 0x0000000100003cc8.
 Step range plan out of range to 0x100003cc8
 Plan Step Range stepping in should stop: 1.
 Completed step through range plan.
 Popping plan: "Step Range stepping in", tid = 0x546b.
 Plan stack final state:
  thread #1: tid = 0x546b:
    Active plan stack:
      Element 0: Base thread plan.
    Completed plan stack:
      Element 0: Stepping out from libsystem_c.dylib`printf returning to frame at problem08`input_array + 48 at problem08.c:11:13 using breakpoint site 0
      Element 1: Stepping in through line problem08.c:10:5 using ranges: 0: [0x0000000100003cac-0x0000000100003cb4) 1: [0x0000000100003cb4-0x0000000100003cc8).

 vvvvvvvv Thread::ShouldStop End (returning 1) vvvvvvvv
 ThreadList::ShouldStop overall should_stop = 1
 Process::ShouldBroadcastEvent (0x103e074e0) => new state: stopped, last broadcast state: stopped - YES
 Process::HandlePrivateEvent (pid = 2024) broadcasting new state stopped (old state stopped) to public
 timeout = <infinite>, event_sp)...
 (plugin = gdb-remote, state = stopped, restarted = 0)
 (plugin = gdb-remote, state = stopped) -- unlocking run lock
 Process::PerformAction could not find breakpoint site id: 29...
 0x101732fb8: tid = 0x546b: stop info = step in (stop_id = 25)
 Process::PerformAction returning from action with m_should_stop: 1.
 Frame #0 not recognized
 Processing command: p sum
 HandleCommand, cmd_obj : 'dwim-print'
 HandleCommand, (revised) command_string: 'dwim-print -- sum'
 HandleCommand, wants_raw_input:'True'
 HandleCommand, command line after removing command name(s): '-- sum'
 Process::DoAllocateMemory (byte_size = 0x00001000, permissions = rwx) => 0xffffffffffffffff
 AllocatedMemoryCache::AllocateMemory (byte_size = 0x00000008, permissions = rwx) => 0xffffffffffffffff
 Process::CanJIT pid 2024 allocation test passed, CanJIT () is true
 AllocatedMemoryCache::DeallocateMemory (addr = 0xffffffffffffffff) => 0
 == [UserExpression::Evaluate] Parsing expression sum ==
 Host::StartMonitoringChildProcess(callback, pid=2047) source = 0x101706640

 ::waitpid (pid = 2047, &status, 0) => pid = 2047, status = 0x00000000 (EXITED), signal = 0, exit_status = 0
 objc_debug_realized_class_generation_count changed from 0 to 138
 Finding frames between main and input_array, retn-pc=0x100003ec0
 No call edge outgoing from main with retn-PC == 0x100003ec0
 SynthesizeTailCallFrames: can't find next function
 Creating utility function __lldb_apple_objc_v2_get_dynamic_class_info3
 Process::DoAllocateMemory (byte_size = 0x00001000, permissions = r-x) => 0x000000010000c000
 AllocatedMemoryCache::AllocateMemory (byte_size = 0x0000039f, permissions = r-x) => 0x000000010000c000
 Process::DoAllocateMemory (byte_size = 0x00001000, permissions = rw-) => 0x0000000100010000
 AllocatedMemoryCache::AllocateMemory (byte_size = 0x0000007f, permissions = rw-) => 0x0000000100010000
 AllocatedMemoryCache::AllocateMemory (byte_size = 0x00000017, permissions = rw-) => 0x0000000100010080
 AllocatedMemoryCache::AllocateMemory (byte_size = 0x0000001f, permissions = rw-) => 0x00000001000100a0
 AllocatedMemoryCache::AllocateMemory (byte_size = 0x0000007f, permissions = r-x) => 0x000000010000c3a0
 AllocatedMemoryCache::AllocateMemory (byte_size = 0x0000001f, permissions = rw-) => 0x00000001000100c0
 AllocatedMemoryCache::AllocateMemory (byte_size = 0x00000678, permissions = rw-) => 0x00000001000100e0
 AllocatedMemoryCache::AllocateMemory (byte_size = 0x00000450, permissions = rw-) => 0x0000000100010760
 AllocatedMemoryCache::AllocateMemory (byte_size = 0x00000038, permissions = rw-) => 0x0000000100010bb0
 == [FunctionCaller::ExecuteFunction] Executing function "__lldb_apple_objc_v2_get_dynamic_class_info3-caller" ==
 -- [FunctionCaller::GetThreadPlanToCallFunction] Creating thread plan to call function "__lldb_apple_objc_v2_get_dynamic_class_info3-caller" --
 Target::AddBreakpoint (internal = yes) => break_id = -20: names = {'__cxa_throw', '__cxa_rethrow', '__cxa_allocate_exception'}, modules(4) = libc++abi.dylib, libSystem.B.dylib, libc++abi.1.0.dylib, libc++abi.1.dylib


 GDBRemoteCommunicationClient::SendGDBStoppointTypePacket() add at addr = 0x1830dc968
 GDBRemoteCommunicationClient::SendGDBStoppointTypePacket() add at addr = 0x1830dcbc4
 GDBRemoteCommunicationClient::SendGDBStoppointTypePacket() add at addr = 0x1830dc82c
 Target::AddBreakpoint (internal = yes) => break_id = -21: Exception breakpoint (catch: off throw: on) using: name = 'objc_exception_throw', module = libobjc.A.dylib


 GDBRemoteCommunicationClient::SendGDBStoppointTypePacket() add at addr = 0x182d6de78
 Thread::PushPlan(0x0x101732fb8): "Thread plan to call 0x10000c3a0", tid = 0x546b.
 0x101732fb8: tid = 0x546b: stop info = signal 2147483647 (stop_id = 25)
 Target::AddBreakpoint (internal = yes) => break_id = -22: address = problem08[0x0000000100003e50]


 GDBRemoteCommunicationClient::SendGDBStoppointTypePacket() add at addr = 0x100003e50
 Thread::PushPlan(0x0x101732fb8): "Run to address: 0x0000000100003e50 using breakpoint: -22 - ", tid = 0x546b.
 Process::RunThreadPlan(): Resuming thread 1 - 0x546b to run thread plan "Thread plan to call 0x10000c3a0".
 Stop others: 1, try all: 0, before_first: 0.

 Top of while loop: do_resume: 1 handle_running_event: 1 before_first_timeout: 0.
 Process::PrivateResume() m_stop_id = 25, public state: stopped private state: stopped
 WillResume Thread #1 (0x0x101732fb8): tid = 0x546b, pc = 0x10000c3a0, sp = 0x16fdfec70, fp = 0x16fdfed10, plan = 'Run to address plan', state = running, stop others = 1
 (plugin = gdb-remote, state = running)
 Process::ShouldBroadcastEvent (0x101736490) => new state: running, last broadcast state: running - YES
 Process thinks the process has resumed.
 Process::HandlePrivateEvent (pid = 2024) broadcasting new state running (old state running) to hijacked
 Process::PushProcessIOHandler pushing IO handler
 Process::HandlePrivateEvent updated m_iohandler_sync to 6
 timeout = <infinite>, event_sp)...
 (plugin = gdb-remote, state = running, restarted = 0)
 Process::RunThreadPlan(): resuming succeeded.
 Process::RunThreadPlan(): about to wait - now is 2023-11-27 10:04:34.550992000 - endpoint is 2023-11-27 10:04:49.550992000
 (plugin = gdb-remote, state = stopped)
 (plugin = gdb-remote, state = stopped, stop_id = 26
 0x101732fb8: tid = 0x546b: stop info = <NULL> (stop_id = 26)
 0x101732fb8: tid = 0x546b: stop info = run-to-address (stop_id = 26)
 
 ThreadList::ShouldStop: 1 threads, 1 unsuspended threads
 Thread::ShouldStop(0x101732fb8) for tid = 0x546b 0x546b, pc = 0x0000000100003e50
 ^^^^^^^^ Thread::ShouldStop Begin ^^^^^^^^
 Plan stack initial state:
  thread #1: tid = 0x546b:
    Active plan stack:
      Element 0: Base thread plan.
      Element 1: Thread plan to call 0x10000c3a0
      Element 2: Run to address: 0x0000000100003e50 using breakpoint: -22 - 

 Hit breakpoint location: -22.1: 
  module = /Users/shafinazahsan/github-classroom/FPC-advanced/fpc-advanced-classroom-1st-year-assignment-ShafinazAhsan/set01/problem08
  compile unit = problem08.c
  function = main
  location = /Users/shafinazahsan/github-classroom/FPC-advanced/fpc-advanced-classroom-1st-year-assignment-ShafinazAhsan/set01/problem08.c:29
  address = 0x0000000100003e50
  resolved = true
  hardware = false
  hit count = 1   
, stopping.

 Plan Run to address plan should stop: 1.
 Target::RemoveBreakpointByID (break_id = -22, internal = yes)

 Target::DisableBreakpointByID (break_id = -22, internal = yes)

 GDBRemoteCommunicationClient::SendGDBStoppointTypePacket() remove at addr = 0x100003e50
 Completed run to address plan.
 Popping plan: "Run to address plan", tid = 0x546b.
 Plan Call function plan should stop: 1.
 ThreadPlanCallFunction(0x101740950): Completed call function plan.
 ThreadPlanCallFunction(0x101740950): DoTakedown called for thread 0x546b, m_valid: 1 complete: 1.

 GDBRemoteCommunicationClient::SendGDBStoppointTypePacket() remove at addr = 0x1830dc968
 GDBRemoteCommunicationClient::SendGDBStoppointTypePacket() remove at addr = 0x1830dcbc4
 GDBRemoteCommunicationClient::SendGDBStoppointTypePacket() remove at addr = 0x1830dc82c
 GDBRemoteCommunicationClient::SendGDBStoppointTypePacket() remove at addr = 0x182d6de78
 Popping plan: "Call function plan", tid = 0x546b.
 Plan stack final state:
  thread #1: tid = 0x546b:
    Active plan stack:
      Element 0: Base thread plan.
    Completed plan stack:
      Element 0: Run to address: 0x0000000100003e50 using breakpoint: 0 - but the breakpoint has been deleted.
      Element 1: Thread plan to call 0x10000c3a0

 vvvvvvvv Thread::ShouldStop End (returning 1) vvvvvvvv
 ThreadList::ShouldStop overall should_stop = 1
 Process::ShouldBroadcastEvent (0x101759b30) => new state: stopped, last broadcast state: stopped - YES
 Process::HandlePrivateEvent (pid = 2024) broadcasting new state stopped (old state stopped) to hijacked
 timeout = <infinite>, event_sp)...
 (plugin = gdb-remote, state = stopped, restarted = 0)
 Process::PerformAction could not find breakpoint site id: 34...
 0x101732fb8: tid = 0x546b: stop info = Function call thread plan (stop_id = 26)
 Process::PerformAction returning from action with m_should_stop: 1.
 Process::RunThreadPlan(): in while loop, got event: stopped.
 execution completed successfully
 0x101732fb8: tid = 0x546b: stop info = step in (stop_id = 26)
 Process::RunThreadPlan(): thread plan stopped in mid course
 Process::RunThreadPlan(): discarding thread plan 'cause unwind_on_error is set.
 Discarding thread plans for thread tid = 0x546b, up to 0x101740950
 == [FunctionCaller::ExecuteFunction] Execution of "__lldb_apple_objc_v2_get_dynamic_class_info3-caller" completed normally ==
 -- [FunctionCaller::FetchFunctionResults] Fetching function results for "__lldb_apple_objc_v2_get_dynamic_class_info3-caller"--
 ThreadPlanCallFunction(0x101740950): DoTakedown called as no-op for thread 0x546b, m_valid: 1 complete: 1.

 Target::RemoveBreakpointByID (break_id = 0, internal = no)

 Target::DisableBreakpointByID (break_id = 0, internal = no)

 Discovered 69 Objective-C classes
 AllocatedMemoryCache::DeallocateMemory (addr = 0x0000000100010760) => 1
 AllocatedMemoryCache::DeallocateMemory (addr = 0x00000001000100e0) => 1
 Finding frames between main and input_array, retn-pc=0x100003ec0
 No call edge outgoing from main with retn-PC == 0x100003ec0
 SynthesizeTailCallFrames: can't find next function
 Creating utility function __lldb_apple_objc_v2_get_shared_cache_class_info
 Process::DoAllocateMemory (byte_size = 0x00002000, permissions = r-x) => 0x0000000100014000
 AllocatedMemoryCache::AllocateMemory (byte_size = 0x000015b7, permissions = r-x) => 0x0000000100014000
 AllocatedMemoryCache::AllocateMemory (byte_size = 0x0000030f, permissions = rw-) => 0x00000001000100e0
 AllocatedMemoryCache::AllocateMemory (byte_size = 0x0000001f, permissions = rw-) => 0x00000001000103f0
 AllocatedMemoryCache::AllocateMemory (byte_size = 0x00000017, permissions = rw-) => 0x0000000100010410
 AllocatedMemoryCache::AllocateMemory (byte_size = 0x0000001f, permissions = rw-) => 0x0000000100010430
 AllocatedMemoryCache::AllocateMemory (byte_size = 0x0000007f, permissions = r-x) => 0x000000010000c420
 AllocatedMemoryCache::AllocateMemory (byte_size = 0x0000001f, permissions = rw-) => 0x0000000100010450
 Process::DoAllocateMemory (byte_size = 0x00270000, permissions = rw-) => 0x0000000100018000
 AllocatedMemoryCache::AllocateMemory (byte_size = 0x00270000, permissions = rw-) => 0x0000000100018000
 AllocatedMemoryCache::AllocateMemory (byte_size = 0x00000040, permissions = rw-) => 0x0000000100010470
 AllocatedMemoryCache::AllocateMemory (byte_size = 0x00000038, permissions = rw-) => 0x00000001000104b0
 == [FunctionCaller::ExecuteFunction] Executing function "__lldb_apple_objc_v2_get_shared_cache_class_info-caller" ==
 -- [FunctionCaller::GetThreadPlanToCallFunction] Creating thread plan to call function "__lldb_apple_objc_v2_get_shared_cache_class_info-caller" --
 GDBRemoteCommunicationClient::SendGDBStoppointTypePacket() add at addr = 0x1830dc968
 GDBRemoteCommunicationClient::SendGDBStoppointTypePacket() add at addr = 0x1830dcbc4
 GDBRemoteCommunicationClient::SendGDBStoppointTypePacket() add at addr = 0x1830dc82c
 GDBRemoteCommunicationClient::SendGDBStoppointTypePacket() add at addr = 0x182d6de78
 Thread::PushPlan(0x0x101732fb8): "Thread plan to call 0x10000c420", tid = 0x546b.
 0x101732fb8: tid = 0x546b: stop info = signal 2147483647 (stop_id = 26)
 Target::AddBreakpoint (internal = yes) => break_id = -23: address = problem08[0x0000000100003e50]


 GDBRemoteCommunicationClient::SendGDBStoppointTypePacket() add at addr = 0x100003e50
 Thread::PushPlan(0x0x101732fb8): "Run to address: 0x0000000100003e50 using breakpoint: -23 - ", tid = 0x546b.
 Process::RunThreadPlan(): Resuming thread 1 - 0x546b to run thread plan "Thread plan to call 0x10000c420".
 Stop others: 1, try all: 0, before_first: 0.

 Top of while loop: do_resume: 1 handle_running_event: 1 before_first_timeout: 0.
 Process::PrivateResume() m_stop_id = 26, public state: stopped private state: stopped
 WillResume Thread #1 (0x0x101732fb8): tid = 0x546b, pc = 0x10000c420, sp = 0x16fdfec70, fp = 0x16fdfed10, plan = 'Run to address plan', state = running, stop others = 1
 (plugin = gdb-remote, state = running)
 Process::ShouldBroadcastEvent (0x101e5dc00) => new state: running, last broadcast state: running - YES
 Process::HandlePrivateEvent (pid = 2024) broadcasting new state running (old state running) to hijacked
 Process::PushProcessIOHandler pushing IO handler
 Process::HandlePrivateEvent updated m_iohandler_sync to 7
 timeout = <infinite>, event_sp)...
 Process thinks the process has resumed.
 (plugin = gdb-remote, state = running, restarted = 0)
 Process::RunThreadPlan(): resuming succeeded.
 Process::RunThreadPlan(): about to wait - now is 2023-11-27 10:04:34.571778000 - endpoint is 2023-11-27 10:04:49.571778000
 (plugin = gdb-remote, state = stopped)
 (plugin = gdb-remote, state = stopped, stop_id = 27
 0x101732fb8: tid = 0x546b: stop info = <NULL> (stop_id = 27)
 0x101732fb8: tid = 0x546b: stop info = run-to-address (stop_id = 27)
 
 ThreadList::ShouldStop: 1 threads, 1 unsuspended threads
 Thread::ShouldStop(0x101732fb8) for tid = 0x546b 0x546b, pc = 0x0000000100003e50
 ^^^^^^^^ Thread::ShouldStop Begin ^^^^^^^^
 Plan stack initial state:
  thread #1: tid = 0x546b:
    Active plan stack:
      Element 0: Base thread plan.
      Element 1: Thread plan to call 0x10000c420
      Element 2: Run to address: 0x0000000100003e50 using breakpoint: -23 - 

 Hit breakpoint location: -23.1: 
  module = /Users/shafinazahsan/github-classroom/FPC-advanced/fpc-advanced-classroom-1st-year-assignment-ShafinazAhsan/set01/problem08
  compile unit = problem08.c
  function = main
  location = /Users/shafinazahsan/github-classroom/FPC-advanced/fpc-advanced-classroom-1st-year-assignment-ShafinazAhsan/set01/problem08.c:29
  address = 0x0000000100003e50
  resolved = true
  hardware = false
  hit count = 1   
, stopping.

 Plan Run to address plan should stop: 1.
 Target::RemoveBreakpointByID (break_id = -23, internal = yes)

 Target::DisableBreakpointByID (break_id = -23, internal = yes)

 GDBRemoteCommunicationClient::SendGDBStoppointTypePacket() remove at addr = 0x100003e50
 Completed run to address plan.
 Popping plan: "Run to address plan", tid = 0x546b.
 Plan Call function plan should stop: 1.
 ThreadPlanCallFunction(0x101753e30): Completed call function plan.
 ThreadPlanCallFunction(0x101753e30): DoTakedown called for thread 0x546b, m_valid: 1 complete: 1.

 GDBRemoteCommunicationClient::SendGDBStoppointTypePacket() remove at addr = 0x1830dc968
 GDBRemoteCommunicationClient::SendGDBStoppointTypePacket() remove at addr = 0x1830dcbc4
 GDBRemoteCommunicationClient::SendGDBStoppointTypePacket() remove at addr = 0x1830dc82c
 GDBRemoteCommunicationClient::SendGDBStoppointTypePacket() remove at addr = 0x182d6de78
 Popping plan: "Call function plan", tid = 0x546b.
 Plan stack final state:
  thread #1: tid = 0x546b:
    Active plan stack:
      Element 0: Base thread plan.
    Completed plan stack:
      Element 0: Run to address: 0x0000000100003e50 using breakpoint: 0 - but the breakpoint has been deleted.
      Element 1: Thread plan to call 0x10000c420

 vvvvvvvv Thread::ShouldStop End (returning 1) vvvvvvvv
 ThreadList::ShouldStop overall should_stop = 1
 Process::ShouldBroadcastEvent (0x101759d60) => new state: stopped, last broadcast state: stopped - YES
 Process::HandlePrivateEvent (pid = 2024) broadcasting new state stopped (old state stopped) to hijacked
 timeout = <infinite>, event_sp)...
 (plugin = gdb-remote, state = stopped, restarted = 0)
 Process::PerformAction could not find breakpoint site id: 39...
 0x101732fb8: tid = 0x546b: stop info = Function call thread plan (stop_id = 27)
 Process::PerformAction returning from action with m_should_stop: 1.
 Process::RunThreadPlan(): in while loop, got event: stopped.
 execution completed successfully
 0x101732fb8: tid = 0x546b: stop info = step in (stop_id = 27)
 Process::RunThreadPlan(): thread plan stopped in mid course
 Process::RunThreadPlan(): discarding thread plan 'cause unwind_on_error is set.
 Discarding thread plans for thread tid = 0x546b, up to 0x101753e30
 == [FunctionCaller::ExecuteFunction] Execution of "__lldb_apple_objc_v2_get_shared_cache_class_info-caller" completed normally ==
 -- [FunctionCaller::FetchFunctionResults] Fetching function results for "__lldb_apple_objc_v2_get_shared_cache_class_info-caller"--
 ThreadPlanCallFunction(0x101753e30): DoTakedown called as no-op for thread 0x546b, m_valid: 1 complete: 1.

 Target::RemoveBreakpointByID (break_id = 0, internal = no)

 Target::DisableBreakpointByID (break_id = 0, internal = no)

 Discovered 129639 Objective-C classes in the shared cache
 AllocatedMemoryCache::DeallocateMemory (addr = 0x0000000100018000) => 1
 attempted to read objc class data - results: [dynamic_update]: ran: yes, retry: no, count: 69 [shared_cache_update]: ran: yes, retry: no, count: 129639
 HandleCommand, command did not succeed
 Processing command: q
 HandleCommand, cmd_obj : 'quit'
 HandleCommand, (revised) command_string: 'quit'
 HandleCommand, wants_raw_input:'False'
 HandleCommand, command line after removing command name(s): ''
 HandleCommand, command did not succeed
 Discarding thread plans for thread (tid = 0x546b, force 1)
 GDBRemoteCommunicationClient::SendGDBStoppointTypePacket() remove at addr = 0x100003d34
 GDBRemoteCommunicationClient::SendGDBStoppointTypePacket() remove at addr = 0x100003db0
 GDBRemoteCommunicationClient::SendGDBStoppointTypePacket() remove at addr = 0x100003e70
 GDBRemoteCommunicationClient::SendGDBStoppointTypePacket() remove at addr = 0x182da4e20
 ::waitpid (pid = 2024, &status, 0) => pid = 2024, status = 0x00000009 (SIGNALED), signal = 9, exit_status = -1
 pid = 2024, signal = 9, status = -1
 (plugin = gdb-remote status=9 (0x00000009), description="killed")
 Process::ControlPrivateStateThread (signal = 1)
 Sending control event of type: 1.
 Process::RunPrivateStateThread (arg = 0x121875e00, pid = 2024) got a control event: 1
 Process::RunPrivateStateThread (arg = 0x121875e00, pid = 2024) thread exiting...
 Target::RemoveBreakpointByID (break_id = -9, internal = yes)

 Target::DisableBreakpointByID (break_id = -9, internal = yes)

 ::waitpid (pid = 2025, &status, 0) => pid = 2025, status = 0x00000000 (EXITED), signal = 0, exit_status = 0
 AllocatedMemoryCache::DeallocateMemory (addr = 0x000000010000c420) => 0
 AllocatedMemoryCache::DeallocateMemory (addr = 0x0000000100010450) => 0
 AllocatedMemoryCache::DeallocateMemory (addr = 0x00000001000100e0) => 0
 AllocatedMemoryCache::DeallocateMemory (addr = 0x00000001000103f0) => 0
 AllocatedMemoryCache::DeallocateMemory (addr = 0x0000000100010410) => 0
 AllocatedMemoryCache::DeallocateMemory (addr = 0x0000000100010430) => 0
 AllocatedMemoryCache::DeallocateMemory (addr = 0x0000000100014000) => 0
 AllocatedMemoryCache::DeallocateMemory (addr = 0x000000010000c3a0) => 0
 AllocatedMemoryCache::DeallocateMemory (addr = 0x00000001000100c0) => 0
 AllocatedMemoryCache::DeallocateMemory (addr = 0x000000010000c000) => 0
 AllocatedMemoryCache::DeallocateMemory (addr = 0x0000000100010000) => 0
 AllocatedMemoryCache::DeallocateMemory (addr = 0x0000000100010080) => 0
 AllocatedMemoryCache::DeallocateMemory (addr = 0x00000001000100a0) => 0
 Target::DisableAllWatchpoints

 Target::ClearAllWatchpointHitCounts

 Target::ClearAllWatchpointHistoricValues

 Went to stop the private state thread, but it was already invalid.
 Couldn't get scratch TypeSystemClang
